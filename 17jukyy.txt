var themeColor = "#0097BB";
//Aggregate
var mgAggrBColorVal = 'rgba(220, 210, 201, 1)';
var mgAggrBgColorVal = 'rgba(220, 210, 201, 0.5)';
var mgAggrPbgColorVal = '#DCD2C9';
var mgAggrPbColorVal = '#232323';

//YouTube
var mgYtBColorVal = 'rgba(200, 70, 98, 1)';
var mgYtBgColorVal = 'rgba(200, 70, 98, 0.5)';
var mgYtPbgColorVal = '#C84662';
var mgYtPbColorVal = '#232323';

//Instagram
var mgIgBColorVal = 'rgba(136, 127, 251, 1)';
var mgIgBgColorVal = 'rgba(136, 127, 251, 0.5)';
var mgIgPbgColorVal = '#887FFB';
var mgIgPbColorVal = '#232323';

//TikTok
var mgTtBColorVal = 'rgba(92, 207, 205, 1)';
var mgTtBgColorVal = 'rgba(92, 207, 205, 0.5)';
var mgTtPbgColorVal = '#5CCFCD';
var mgTtPbColorVal = '#232323';

//Twitter
var mgTwtBColorVal = 'rgba(238, 198, 204, 1)';
var mgTwtBgColorVal = 'rgba(238, 198, 204, 0.5)';
var mgTwtPbgColorVal = '#eec6cc';
var mgTwtPbColorVal = '#232323';

//Sonic logo
var mgSlBColorVal = 'rgba(0, 151, 187, 1)';
var mgSlBgColorVal = 'rgba(0, 151, 187, 0.5)';
var mgSlPbgColorVal = '#0097BB';
var mgSlPbColorVal = '#0097BB';

var downMTUdataFlag = 0;
var downB13datasetsDataContent = [];
var downSlradarGraphDataSetcontent = [];
var downSlradarGraphDataLabelcontent = [];
// industry sonic logo main mood graph
var downIndSlradarGraphDataSetcontent = [];
var downIndSlradarGraphDataLabelcontent = [];
// sub industry sonic logo main mood graph
var downSubIndSlradarGraphDataSetcontent = [];
var downSubIndSlradarGraphDataLabelcontent = [];

var downNonZeroValCount = [];
var downB13Label = '';
var isOpenZoomGraphMY = false;
var isOpenZoomGraphM = false;
var isOpenZoomGraphY = false;
//var plusBtnClickFlag = false;
var minusBtnClickFlag = false;
var zoomInOutCounter = 0;
var inc = 200;
$("#refreshPasswordVal").click(function(){
    $("#password").val(generateString(8));
});

/* For All Pages Display Footer */
$(window).bind('mousewheel DOMMouseScroll', function(event){
    if (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0) {/* console.log('scrolling up !'); */}
    else {
        $(".welBroIndMeth_padding").slideDown("slow");
        if(location.href.indexOf("display-cv-launcher") > -1 || location.href.indexOf("display-sonic-logo-launcher") > -1 || location.href.indexOf("display-industry-cv-launcher") > -1 || location.href.indexOf("display-sub-industry-cv-launcher") > -1){
            $(".lp_bottomtotop_holder").addClass("hide");
        }
    }
});
var winH = $(window).height();
var currentMousePos = { x: -1, y: -1 };
$(window).mousemove(function(event) {
    currentMousePos.x = event.pageX;
    currentMousePos.y = event.pageY;

    if (currentMousePos.y > winH - 400) {
        $(".welBroIndMeth_padding").slideDown("slow");
        if(location.href.indexOf("display-cv-launcher") > -1 || location.href.indexOf("display-sonic-logo-launcher") > -1 || location.href.indexOf("display-industry-cv-launcher") > -1 || location.href.indexOf("display-sub-industry-cv-launcher") > -1){
            $(".lp_bottomtotop_holder").addClass("hide");
        }
    }
});

const characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

function generateString(length) {
    let result = ' ';
    const charactersLength = characters.length;
    for ( let i = 0; i < length; i++ ) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }

    return result;
}

$('#expdateDatepicker').datepicker({
    format: "yyyy-mm-dd",
    autoclose: true,
    orientation: "bottom",
    todayHighlight: true,
    startDate: '0m',
    maxDate: 0
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
});

$('#datepickerSonicCVDate').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months"
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
});

/* $('#datepickerYChannelStartDate_0, #datepickerIChannelStartDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    endDate: '+0m'
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    var minDate = $(this).datepicker("getDate");
    $('#datepickerYChannelEndDate_0, #datepickerIChannelEndDate_0').datepicker({
        format: "mm-yyyy",
        autoclose: true,
        orientation: "bottom",
        viewMode: "months",
        minViewMode: "months",
        startDate: minDate
    }).on('changeDate', function (ev) {
        $(this).datepicker('hide');
    });
}); */

$('#datepickerYChannelStartDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    endDate: '+0m'
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    $('#datepickerYChannelEndDate_0').datepicker('setStartDate', ev.date);
    var YChannelEndDateVal = $("#ychn_end_date_0").val();
    if(YChannelEndDateVal == ""){
            getFuturePastDate(ev.date,"yt",0,'start');
    }
});

$('#datepickerYChannelEndDate_0').datepicker({
        format: "mm-yyyy",
        autoclose: true,
        orientation: "bottom",
        viewMode: "months",
        minViewMode: "months",
        //startDate: '-0m'
    }).on('changeDate', function (ev) {
        $(this).datepicker('hide');
        var YChannelStartDateVal = $("#ychn_start_date_0").val();
        if(YChannelStartDateVal == ""){
            getFuturePastDate(ev.date,"yt",0,'end');
        }

});

$('#datepickerIChannelStartDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    endDate: '+0m'
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    $('#datepickerIChannelEndDate_0').datepicker('setStartDate', ev.date);
    var IChannelEndDateval = $("#ichn_end_date_0").val();
    if(IChannelEndDateval == ""){
        getFuturePastDate(ev.date,"ig",0,'start');
    }
});

$('#datepickerIChannelEndDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    //startDate: minDate
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    var IChannelStartDateVal = $("#ichn_start_date_0").val();
    if(IChannelStartDateVal == ""){
        getFuturePastDate(ev.date,"ig",0,'end');
    }
});


$('#datepickerTChannelStartDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    endDate: '+0m'
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    $('#datepickerTChannelEndDate_0').datepicker('setStartDate', ev.date);
    var TChannelEndDateval = $("#tchn_end_date_0").val();
    if(TChannelEndDateval == ""){
        getFuturePastDate(ev.date,"tt",0,'start');
    }

});

$('#datepickerTChannelEndDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    //startDate: minDate
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    var TChannelStartDateVal = $("#tchn_start_date_0").val();
    if(TChannelStartDateVal == ""){
        getFuturePastDate(ev.date,"tt",0,'end');
    }
});


$('#datepickerTWTChannelStartDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    endDate: '+0m'
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    $('#datepickerTWTChannelEndDate_0').datepicker('setStartDate', ev.date);
    var TWTChannelEndDateval = $("#twtchn_end_date_0").val();
    if(TWTChannelEndDateval == ""){
        getFuturePastDate(ev.date,"twt",0,'start');
    }
});

$('#datepickerTWTChannelEndDate_0').datepicker({
    format: "mm-yyyy",
    autoclose: true,
    orientation: "bottom",
    viewMode: "months",
    minViewMode: "months",
    //startDate: minDate
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
    var TWTChannelStartDateVal = $("#twtchn_start_date_0").val();
    if(TWTChannelStartDateVal == ""){
        getFuturePastDate(ev.date,"twt",0,'end');
    }
});


function getFuturePastDate(evData,smType,datePickerIdCount,datePickerType){
    const initialDate = new Date(evData);
    const futureDate = new Date(initialDate);
    if(datePickerType == "start"){
        futureDate.setMonth(futureDate.getMonth() + 11);
        console.log("smType===",smType," datePickerIdCount==",datePickerIdCount,"  endDate==",futureDate," datePickerType==",datePickerType);
        if(smType == "yt"){
            $('#datepickerYChannelEndDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else if(smType == "ig"){
            $('#datepickerIChannelEndDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else if(smType == "tt"){
            $('#datepickerTChannelEndDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else{
            $('#datepickerTWTChannelEndDate_'+datePickerIdCount).datepicker('setDate', futureDate);

        }
    }else{
        futureDate.setMonth(futureDate.getMonth() - 11);
        console.log("smType===",smType," datePickerIdCount==",datePickerIdCount,"  startDate==",futureDate," datePickerType==",datePickerType);
        if(smType == "yt"){
            $('#datepickerYChannelStartDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else if(smType == "ig"){
            $('#datepickerIChannelStartDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else if(smType == "tt"){
            $('#datepickerTChannelStartDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }else{
            $('#datepickerTWTChannelStartDate_'+datePickerIdCount).datepicker('setDate', futureDate);
        }
    }

}

$("#role").on('change', function(){
    var selRoleID = this.value;
    if(selRoleID == 1)
    {
        $("#expdateDatepicker").addClass("hide");
    }
    else
    {
        $("#expdateDatepicker").removeClass("hide");
    }
});

var aboutKeyFinding = {
    showKeyFinding: function(){
        if($(".lnkCollapse4AboutKeyFinding").closest(".aboutKeyFindingBlock").find(".aboutKeyFindingTextareaHolder").find(".note-editable").text().length == 0 && ($("#about_key_findings").val() == "" || $("#about_key_findings").val() == "<p><br></p>")) {
            $(".aboutKeyFindingTextareaHolder").find(".note-editable").html("<ul><li><br></li></ul>");
            $(".aboutKeyFindingTextareaHolder").find(".note-editable").find("ul li:first").focus();
        }
    }
}

function readURLmusicTMPhoto(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".div-musicTMimg-holder").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#musicTMPhoto").change(function() {
    readURLmusicTMPhoto(this);
});
var uploadmusicTM = {
    musicTMPhoto:function(){
        if($("#musicTMPhoto").val()!=""){
            $(".div-musicTMimg-holder").find(".noImg").addClass("hide");
            $(".div-musicTMimg-holder").find(".previewImg").removeClass("hide");
            $(".div-musicTMimg-holder").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removemusicTMPhoto:function(){
        $(".div-musicTMimg-holder").find(".previewImg").attr("src","");
        $(".div-musicTMimg-holder").find(".noImg").removeClass("hide");
        $(".div-musicTMimg-holder").find(".previewImg").addClass("hide");
        $(".div-musicTMimg-holder").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURLcvLogo(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".cv_logo").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#cv_logo").change(function() {
    readURLcvLogo(this);
});

var uploadcvLogo = {
    cvLogo:function(){
        if($("#cv_logo").val()!=""){
            $(".cv_logo").find(".noImg").addClass("hide");
            $(".cv_logo").find(".previewImg").removeClass("hide");
            $(".cv_logo").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removecvLogo:function(){
        $(".cv_logo").find(".previewImg").attr("src","");
        $(".cv_logo").find(".noImg").removeClass("hide");
        $(".cv_logo").find(".previewImg").addClass("hide");
        $(".cv_logo").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURLcvBannerDesktop(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".cv_banner_desktop").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#cv_banner_desktop").change(function() {
    readURLcvBannerDesktop(this);
});

var uploadcvBannerDesktop = {
    cvBannerDesktop:function(){
        if($("#cv_banner_desktop").val()!=""){
            $(".cv_banner_desktop").find(".noImg").addClass("hide");
            $(".cv_banner_desktop").find(".previewImg").removeClass("hide");
            $(".cv_banner_desktop").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removecvBannerDesktop:function(){
        $(".cv_banner_desktop").find(".previewImg").attr("src","");
        $(".cv_banner_desktop").find(".noImg").removeClass("hide");
        $(".cv_banner_desktop").find(".previewImg").addClass("hide");
        $(".cv_banner_desktop").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURLcvBanneriPad(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".cv_banner_ipad").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#cv_banner_ipad").change(function() {
    readURLcvBanneriPad(this);
});

var uploadcvBanneriPad = {
    cvBanneriPad:function(){
        if($("#cv_banner_ipad").val()!=""){
            $(".cv_banner_ipad").find(".noImg").addClass("hide");
            $(".cv_banner_ipad").find(".previewImg").removeClass("hide");
            $(".cv_banner_ipad").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removecvBanneriPad:function(){
        $(".cv_banner_ipad").find(".previewImg").attr("src","");
        $(".cv_banner_ipad").find(".noImg").removeClass("hide");
        $(".cv_banner_ipad").find(".previewImg").addClass("hide");
        $(".cv_banner_ipad").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURLcvBanneriMobile(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".cv_banner_mobile").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#cv_banner_mobile").change(function() {
    readURLcvBanneriMobile(this);
});

var uploadcvBannerMobile = {
    cvBannerMobile:function(){
        if($("#cv_banner_mobile").val()!=""){
            $(".cv_banner_mobile").find(".noImg").addClass("hide");
            $(".cv_banner_mobile").find(".previewImg").removeClass("hide");
            $(".cv_banner_mobile").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removecvBannerMobile:function(){
        $(".cv_banner_mobile").find(".previewImg").attr("src","");
        $(".cv_banner_mobile").find(".noImg").removeClass("hide");
        $(".cv_banner_mobile").find(".previewImg").addClass("hide");
        $(".cv_banner_mobile").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURSec10BgImage(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".section_10_bg_image").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#section_10_bg_image").change(function() {
    readURSec10BgImage(this);
});

var uploadsec10BgImage = {
    sec10BgImage:function(){
        if($("#section_10_bg_image").val()!=""){
            $(".section_10_bg_image").find(".noImg").addClass("hide");
            $(".section_10_bg_image").find(".previewImg").removeClass("hide");
            $(".section_10_bg_image").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removesec10BgImage:function(){
        $(".section_10_bg_image").find(".previewImg").attr("src","");
        $("#old_section_10_bg_image").val('');
        $(".section_10_bg_image").find(".noImg").removeClass("hide");
        $(".section_10_bg_image").find(".previewImg").addClass("hide");
        $(".section_10_bg_image").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

function readURSec13BgImage(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $(".section_13_bg_image").find('.previewImg').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]); // convert to base64 string
    }
}
$("#section_13_bg_image").change(function() {
    readURSec13BgImage(this);
});

var uploadsec13BgImage = {
    sec13BgImage:function(){
        if($("#section_13_bg_image").val()!=""){
            $(".section_13_bg_image").find(".noImg").addClass("hide");
            $(".section_13_bg_image").find(".previewImg").removeClass("hide");
            $(".section_13_bg_image").find(".btnClickmusicTMRemoveImg").removeClass("hide");
        }
    },
    removesec13BgImage:function(){
        $(".section_13_bg_image").find(".previewImg").attr("src","");
        $("#old_section_13_bg_image").val("");
        $(".section_13_bg_image").find(".noImg").removeClass("hide");
        $(".section_13_bg_image").find(".previewImg").addClass("hide");
        $(".section_13_bg_image").find(".btnClickmusicTMRemoveImg").addClass("hide");
    }
}

//Audio upload
/* $("#sonic_logo_audio_file").on("change", function(event){
    var files = event.target.files;
    if(files[0] != undefined)
    {
        $("#sonic_logo_file_audio").removeClass("hide");
        $("#sonic_logo_file_audio_src").attr("src", URL.createObjectURL(files[0]));
        //$("#sec5_file_audio").load();
        document.getElementById("sonic_logo_file_audio").load();

        var fileName = files[0].name;
        var ext = fileName.substring(fileName.lastIndexOf('.')).toLowerCase();

        if (ext == ".mp3" || ext == ".wav" || ext == ".wma" || ext == ".aac" || ext == ".m4a") {
            $(".sonic_logo_file_audio_error").addClass('hide');
        }
        else {
            $(".sonic_logo_file_audio_error").removeClass('hide');
            //$("#sonic_logo_file_audio").addClass("hide");
            //$("#sonic_logo_file_audio_src").attr("src", '');
        }
    }
    else
    {
        $("#sonic_logo_file_audio").addClass("hide");
        $("#sonic_logo_file_audio_src").attr("src", '');
    }

}); */

function soncLogoAudio(id,event)
{
    console.log("soncLogoAudio ----- ID "+id);
    var files = event.target.files;
    if(files[0] != undefined)
    {
        $("#sonic_logo_file_audio_"+id).removeClass("hide");
        $("#sonic_logo_file_audio_src_"+id).attr("src", URL.createObjectURL(files[0]));
        //$("#sec5_file_audio").load();
        document.getElementById("sonic_logo_file_audio_"+id).load();

        var fileName = files[0].name;
        var ext = fileName.substring(fileName.lastIndexOf('.')).toLowerCase();

        if (ext == ".mp3" || ext == ".wav" || ext == ".wma" || ext == ".aac" || ext == ".m4a") {
            $("#sonic_logo_file_audio_error_"+id).addClass('hide');
        }
        else {
            $("#sonic_logo_file_audio_error_"+id).removeClass('hide');
            //$("#sonic_logo_file_audio").addClass("hide");
            //$("#sonic_logo_file_audio_src").attr("src", '');
        }
    }
    else
    {
        $("#sonic_logo_file_audio_"+id).addClass("hide");
        $("#sonic_logo_file_audio_src_"+id).attr("src", '');
    }
}

function soncVoiceAudio(id,event)
{
    console.log("soncVoiceAudio ----- ID "+id);
    var files = event.target.files;
    if(files[0] != undefined)
    {
        $("#sonic_voice_file_audio_"+id).removeClass("hide");
        $("#sonic_voice_file_audio_src_"+id).attr("src", URL.createObjectURL(files[0]));
        //$("#sec5_file_audio").load();
        document.getElementById("sonic_voice_file_audio_"+id).load();

        var fileName = files[0].name;
        var ext = fileName.substring(fileName.lastIndexOf('.')).toLowerCase();

        if (ext == ".mp3" || ext == ".wav" || ext == ".wma" || ext == ".aac" || ext == ".m4a") {
            $("#sonic_voice_file_audio_error_"+id).addClass('hide');
        }
        else {
            $("#sonic_voice_file_audio_error_"+id).removeClass('hide');
            //$("#sonic_logo_file_audio").addClass("hide");
            //$("#sonic_logo_file_audio_src").attr("src", '');
        }
    }
    else
    {
        $("#sonic_voice_file_audio_"+id).addClass("hide");
        $("#sonic_voice_file_audio_src_"+id).attr("src", '');
    }
}

$("#industry_name").on('change', function()
{
    var parentIndustryId = $("#industry_name").val();
    console.log('parentIndustryId'+parentIndustryId+" --- "+$("#sub_industry_name option").hasClass(parentIndustryId));

    if($("#sub_industry_name option").hasClass(parentIndustryId))
    {
        $("#sub_industry_name option").removeAttr("selected");
        $("#sub_industry_name").removeAttr("disabled");
        $("#sub_industry_name option").removeClass("hide");
        $("#sub_industry_name option").not($("#sub_industry_name option."+parentIndustryId)).addClass("hide");

    }
    else
    {
        $("#sub_industry_name option").removeAttr("selected");
        $("#sub_industry_name").attr("disabled","true");
        $("#sub_industry_name option").removeClass("hide");
    }
});

// Multiple option select Dropdown

$(function() {
    window.fs_test = $('.default_dd').fSelect();
});

$(function() {
    window.fs_test = $('.musicTasteDropDown').fSelect();
});

$(function() {
    window.fs_test = $('.predecessor').fSelect();
});

$(function(){
    window.fs_test = $('.brand_dd').fSelect();
})

$(function() {
    window.fs_test = $('.snapshotFilterSelect').fSelect();
});

$(function() {
    window.fs_test = $('.language_dd').fSelect();
});

numberOnly();
function numberOnly(){
    $('.numberonly').bind('keyup paste', function(){
        this.value = this.value.replace(/[^0-9]/g, '');
    });
}

numZeroToFive();
function numZeroToFive(){
    $('.numZeroToFive').bind('keyup paste', function(){
        this.value = this.value.replace(/[^0-5]/g, '');
    });
}

numberZeorToHundred();
function numberZeorToHundred(){
    //insert number in input field 0 to 100
    $('.numZeroToHundred').bind('keyup paste', function(){
        this.value = this.value.replace(/[^0-9]/g, '');
        if (this.value < 0) this.value = 0;
        if (this.value > 100) this.value = 100;
    });
}

function audioFileValidation()
{
    var files = $("#"+fileID).get(0).files;
}

//Recognition Block
var recognitionCounter = 1;

var recognitionBlock = {
    updateIds: function(){
        $.each($('#recognitionTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).find("td").find(".titleHolder").find("label").attr("for",("cv_rb_title_"+index));
            $(this).find("td").find(".titleHolder").find("input").attr("onclick", 'limitChecker("custInput", "cv_rb_title_'+index+'")');
            $(this).find("td").find(".titleHolder").find("input").attr("onchange", 'limitChecker("custInput", "cv_rb_title_'+index+'")');
            $(this).find("td").find(".titleHolder").find("input").attr("onblur", 'limitChecker("custInput", "cv_rb_title_'+index+'")');
            $(this).find("td").find(".titleHolder").find("input").attr("onfocus", 'limitChecker("custInput", "cv_rb_title_'+index+'")');
            $(this).find("td").find(".titleHolder").find("input").attr("name",("cv_rb_title_"+index));
            $(this).find("td").find(".titleHolder").find("input").attr("id",("cv_rb_title_"+index));
            $(this).find("td").find(".numndescHolder").find(".fl").find("label").attr("for",("cv_rb_number_"+index));
            $(this).find("td").find(".numndescHolder").find("input").attr("name",("cv_rb_number_"+index));
            $(this).find("td").find(".numndescHolder").find("input").attr("id",("cv_rb_number_"+index));
            $(this).find("td").find(".numndescHolder").find(".fr").find("label").attr("for",("cv_rb_description_"+index));
            $(this).find("td").find(".numndescHolder").find("textarea").attr("name",("cv_rb_description_"+index));
            $(this).find("td").find(".numndescHolder").find("textarea").attr("id",("cv_rb_description_"+index));
            $("#rb_count").val($("#recognitionTableBody").find("tr").length);

        });
    },
    createRow: function(){

        recognitionCounter++;
        //$('#totalRowCount').text(recognitionCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + recognitionCounter + '" id="tblRow_' + recognitionCounter + '">';
        htmlText += '   <td>';
        htmlText += '       <div class="input-group mtop10 titleHolder"><label for="cv_rb_title_' + recognitionCounter + '" class="col-form-label">Title:</label><input type="text" name="cv_rb_title_' + recognitionCounter + '" id="cv_rb_title_' + recognitionCounter + '" class="card_inputs" placeholder="Title" maxlength="255" onclick="" onchange="" onblur="" onfocus="" /></div>';
        htmlText += '       <div class="input-group mtop10 numndescHolder">';
        htmlText += '           <div class="fl"><label for="cv_rb_number_' + recognitionCounter + '" class="col-form-label">Number:</label><input type="text" name="cv_rb_number_' + recognitionCounter + '" id="cv_rb_number_' + recognitionCounter + '" class="card_inputs inputRecogBlock" placeholder="Number" /></div>';
        htmlText += '           <div class="fr"><label for="cv_rb_description_' + recognitionCounter + '" class="col-form-label">Description:</label><textarea placeholder="Description" class="card_inputs" style="resize: none;"></textarea></div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td><label>&nbsp;</label><div class="input-group"><a class="btn_delRow" onclick="recognitionBlock.deleteRows(this);"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';
        $('#recognitionTableBody').append(htmlText);
        recognitionBlock.updateIds();
        numberOnly();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        recognitionBlock.updateIds();
    }
}

//2st Block of Experience
var sBlockOfExpCounter = 1;
var sBlockOfExp = {
    updateIds: function(){
        $.each($('#sBlockOfExpTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("name",("cv_esb_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("id",("cv_esb_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("name",("cv_esb_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("id",("cv_esb_number_"+index));
            $("#esb_count").val($("#sBlockOfExpTableBody").find("tr").length);
        });
    },
    createRow: function(){
        sBlockOfExpCounter++;
        $('#totalRowCount').text(sBlockOfExpCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + sBlockOfExpCounter + '" id="tblRow_' + sBlockOfExpCounter + '">';
        htmlText += '   <td>';
        //htmlText += '       <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '       <div class="input-group mtop10">';
        htmlText += '           <div class="fl"><label for="cv_esb_name_id_' + sBlockOfExpCounter + '" class="col-form-label">Experience:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow" name="cv_esb_name_id_' + sBlockOfExpCounter + '" id="cv_esb_name_id_' + sBlockOfExpCounter + '">';
        //htmlText += '                   <option value="0">Select Experience</option>';
        //htmlText += '                   <option value="1">Option 1</option>';
        htmlText += '               </select>';
        htmlText += '           </div>';
        htmlText += '           <div class="fr"><label for="cv_esb_number_' + sBlockOfExpCounter + '" class="col-form-label">Number:</label><input type="text" id="cv_efb_number_' + sBlockOfExpCounter + '" name="cv_efb_number_' + sBlockOfExpCounter + '" class="card_inputs numZeroToFive" maxlength="1" placeholder="Number" /></div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td><a class="btn_delRow" onclick="sBlockOfExp.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></td>';
        htmlText += '</tr>';
        $('#sBlockOfExpTableBody').append(htmlText);
        $('#cv_esb_name_id_0 option').clone().appendTo('#cv_esb_name_id_'+ sBlockOfExpCounter);
        sBlockOfExp.updateIds();
        numZeroToFive();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().remove();
        sBlockOfExp.updateIds();
    }
}

//Qualitative Block
var qualitativeCounter = 1;
var funQualitative = {
    updateIds: function(){
        $.each($('#qualitativeTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("name",("cv_qualitative_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("id",("cv_qualitative_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("name",("cv_qualitative_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("id",("cv_qualitative_number_"+index));
            $("#qualitative_count").val($("#qualitativeTableBody").find("tr").length);
        });
    },
    createRow: function(){
        qualitativeCounter++;
        $('#totalRowCount').text(qualitativeCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + qualitativeCounter + '" id="tblRow_' + qualitativeCounter + '">';
        htmlText += '   <td>';
        //htmlText += '       <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '       <div class="input-group mtop10">';
        htmlText += '           <div class="fl">';
        htmlText += '               <select class="card_inputs dropdownDownArrow" name="cv_qualitative_name_id_' + qualitativeCounter + '" id="cv_qualitative_name_id_' + qualitativeCounter + '">';
        //htmlText += '                   <option value="0">Select Qualitative</option>';
        //htmlText += '                   <option value="1">Option 1</option>';
        htmlText += '               </select>';
        htmlText += '           </div>';
        htmlText += '           <div class="fr">';
        htmlText += '               <input type="text" name="cv_qualitative_number_' + qualitativeCounter + '" id="cv_qualitative_number_' + qualitativeCounter + '" class="card_inputs numZeroToHundred" maxlength="3" placeholder="Number" />';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td><a class="btn_delRow" onclick="funQualitative.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></td>';
        htmlText += '</tr>';
        $('#qualitativeTableBody').append(htmlText);
        $('#cv_qualitative_name_id_0 option').clone().appendTo('#cv_qualitative_name_id_'+ qualitativeCounter);
        funQualitative.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().remove();
        funQualitative.updateIds();
    }
}

//Title & Description Block
var tndCounter = 1;
var funTitileandDescription = {
    updateIds: function(){
        $.each($('.tndHolder').find("[row-number]"), function(index, item){
            //console.log('ttt'+index);
            $(this).attr("row-number",(index));
            $(this).find(".tnd_title_hol").find("label").attr("for",("tnd_title_"+index));
            $(this).find(".tnd_description_hol").find("label").attr("for",("tnd_description_"+index));
            $(this).find(".txtttl").attr("onclick", 'limitChecker("custInput", "tnd_title_'+index+'")');
            $(this).find(".txtttl").attr("onchange", 'limitChecker("custInput", "tnd_title_'+index+'")');
            $(this).find(".txtttl").attr("onfocus", 'limitChecker("custInput", "tnd_title_'+index+'")');
            $(this).find(".txtttl").attr("onblur", 'limitChecker("custInput", "tnd_title_'+index+'")');
            $(this).attr("class",("form-group txtndesc txtndesc_"+index));
            $(this).find(".txtttl").attr("name",("tnd_title_"+index));
            $(this).find(".txtttl").attr("id",("tnd_title_"+index));
            $(this).find(".tndtxtarea").find("textarea.txtara1").attr("name",("tnd_description_"+index));
            $(this).find(".tndtxtarea").find("textarea.txtara1").attr("id",("tnd_description_"+index));
            //$(this).find(".mb-3").closest("textarea").attr("id",("tnd_description_"+index));
            $("#tnd_count").val($(".tndHolder").find(".txtndesc").length);
            //$('.txtara1').summernote();

        });
    },
    createRow: function(){
        tndCounter++;
        //$('#totalRowCount').text(tndCounter - 1);
        var htmlText = '';
        htmlText += '<div class="form-group txtndesc txtndesc_'+tndCounter+'" row-number="' + tndCounter + '" style="position:relative;">';
        htmlText += '   <div class="mb-3">';
        htmlText += '       <div class="tnd_title_hol">';
        htmlText += '           <label for="tnd_title_'+tndCounter+'" class="col-form-label">Title:</label>';
        htmlText += '       </div>';
        htmlText += '       <div style="width: 10%; float: right; text-align: right; margin-bottom: 2px;">';
        htmlText += '           <a class="btn_delRow" onclick="funTitileandDescription.deleteRows(this);" style="margin:0px;"><i class="fa fa-times"></i></a>';
        htmlText += '       </div>';
        htmlText += '       <input class="form_control_inner txtttl" placeholder="Title" type="text" name="tnd_title_'+tndCounter+'" id="tnd_title_'+tndCounter+'" maxlength="255" onClick="" onchange="" onblur="" onfocus="">';
        htmlText += '   </div>';
        htmlText += '   <div class="tnd_description_hol">';
        htmlText += '       <label for="tnd_description_'+tndCounter+'" class="col-form-label">Description:</label>';
        htmlText += '       <div class="mb-3 tndtxtarea">';
        htmlText += '           <textarea class="txtara1" name="tnd_description_'+tndCounter+'" id="tnd_description_'+tndCounter+'" placeholder="Place some text here" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="clearfix"></div>';
        htmlText += '</div>';

        $('.tndHolder').append(htmlText);
        $('.txtara1').summernote();
        funTitileandDescription.updateIds();
        $("html, body").animate({ scrollTop: $(document).height()-$(window).height()-200 });
        //console.log("tndCounter:"+tndCounter);
        var focusID = tndCounter-1;
        $("#tnd_title_"+focusID).focus();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funTitileandDescription.updateIds();
    }
}

//Accordian Tab
function validateAccordianTab(currentID, nxtID)
{
    var flag = true;

    if (flag)
    {
        $("#lnkCollapse"+currentID).parent().parent().find("span").attr("class", "validate-mark");
        $("#lnkCollapse"+nxtID).attr("data-toggle", "collapse").attr("href", "#collapse"+nxtID);
        $("#lnkCollapse"+nxtID).click();
    }
    else {
        $("#lnkCollapse"+currentID).parent().parent().find("span").attr("class", "validate-mark hide");
        $("#lnkCollapse"+nxtID).removeAttr("data-toggle");
        $('html, body').animate({ scrollTop: 100 }, 800);
        showBSAlert(popupCaption, msg, 'DANGER');
    }
    return flag;
}
/* //Sonic Logo Slider .sonicLogoCV_Slider,
$('.sonicLogoCV1_Slider, .sonicLogoCV2_Slider').slick(
    {
        dots: true,
        autoplay: false,
        autoplaySpeed: 5000,
        pauseOnHover: true
    }
);
//.sonicLogoCV_Slider,
$('.sonicLogoCV1_Slider, .sonicLogoCV2_Slider').on('beforeChange', function(event, slick, currentSlide, nextSlide){
    $('audio').each(function(){
        this.pause();
    });
    $('.sonicLogoCV1_Slider, .sonicLogoCV2_Slider').find(".audio-pause-button").addClass("audio-player-button").removeClass("audio-pause-button");
    playstatusflag = false;
    playstatusflagCompare = false;
}); */
//Sonic Logo Block / Section 06

function refreshAudioFile(sonic_logo_audio_file_id, sonic_logo_file_audio_id) {
    $('#' + sonic_logo_audio_file_id).val(null);
    $('#' + sonic_logo_file_audio_id).addClass('hide');
    $('#' + sonic_logo_file_audio_id).find('source').attr('src', '');

}


var sonicLogoCounter = 1;
var sonicLogoAudioCounter = 1;
var funsonicLogo = {
    updateIds: function(){
        $.each($('#sonicLogoTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("section_6_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_6_id").attr("name",("section_6_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_6_id").attr("id",("section_6_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_6_title").attr("name",("section_6_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_6_title").attr("id",("section_6_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("sonic_logo_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("sonic_logo_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("sonic_logo_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").attr("id",("sonic_logo_file_audio_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("source").attr("id",("sonic_logo_file_audio_src_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("input").attr("name",("old_sonic_logo_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("input").attr("id",("old_sonic_logo_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find(".sonic_logo_file_audio_error").attr("id",("sonic_logo_file_audio_error_"+index));
            $("#sonic_logo_count").val($("#sonicLogoTableBody").find("tr").length);
            console.log("sonicLogoAudioCounter|||:-"+sonicLogoAudioCounter);
            sonicLogoAudioCounter = index;
            $("#sonic_logo_audio_file_"+index).attr("onchange", "soncLogoAudio("+index+",event)");
        });
    },
    createRow: function(type){
        if(type == 'insert')
        {
            if(sonicLogoCounter >1)
            {
                sonicLogoAudioCounter++;
            }
        }
        else
        {
            sonicLogoAudioCounter = $("#sonicLogoTableBody").find("tr").length;
        }
        sonicLogoCounter++;
        console.log('sonicLogoCounter===='+sonicLogoCounter);
        //$('#totalRowCount').text(sonicLogoCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + sonicLogoCounter + '" id="tblRow_' + sonicLogoCounter + '">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3"><label for="section_6_title_' + sonicLogoCounter + '" class="col-form-label">Title:</label>';
        htmlText += '               <div class="input-group">';
        htmlText += '                   <input class="section_6_id" type="hidden" id="section_6_id_' + sonicLogoCounter + '" name="section_6_id_' + sonicLogoCounter + '" value="">';
        htmlText += '                   <input class="form_control_inner section_6_title" type="text" name="section_6_title_' + sonicLogoCounter + '" id="section_6_title_' + sonicLogoCounter + '" value="Sonic Logo" maxlength="255">';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-6 fr mb-4">';
        htmlText += '               <div style="display: flex; justify-content: space-between;">';
        htmlText += '                   <label for="sonic_logo_audio_file_' + sonicLogoCounter + '" class="col-form-label">Sonic Logo:</label>';
        htmlText += '                   <a class="btn_delRow" onclick="funsonicLogo.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a>';
        htmlText += '               </div>';
        htmlText += '               <div class="input-group" style="position: relative; top: -3px;">';
        htmlText += '                   <label for="sonic_logo_audio_file_' + sonicLogoCounter + '" style="width: 100%;">';
        htmlText += '                       <div class="div-musicTMimg-holder sonic_logo_audio_file">';
        htmlText += '                           <div class="btn btn-info btn-file"> <i class="fa fa-paperclip"></i> Upload';
        htmlText += '                               <input type="file" id="sonic_logo_audio_file_' + sonicLogoCounter + '" name="sonic_logo_audio_file_' + sonicLogoCounter + '" value="" onchange=soncLogoAudio("' + sonicLogoAudioCounter + '",event) />';
        htmlText += '                           </div>';
        htmlText += '                           <div class="clearfix"></div>';
        htmlText += '                           <div class="mtop10">';
        htmlText += '                               <audio id="sonic_logo_file_audio_' + sonicLogoCounter + '" controls class="hide">';
        htmlText += '                                   <source src="" id="sonic_logo_file_audio_src_' + sonicLogoCounter + '" />';
        htmlText += '                                   <input type="hidden" id="old_sonic_logo_audio_file_' + sonicLogoCounter + '" name="old_sonic_logo_audio_file_' + sonicLogoCounter + '"></input>';
        htmlText += '                               </audio>';
        htmlText += '                           </div>';
        htmlText += '                       </div>';
        htmlText += '                   </label>';
        htmlText += '                   <span id="sonic_logo_file_audio_error_' + sonicLogoAudioCounter + '"class="text-danger sonic_logo_file_audio_error hide">The sonic logo must be a file of type: mp3, wav, wma, aac, m4a.</span>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        //htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funsonicLogo.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#sonicLogoTableBody').append(htmlText);
        //console.log(sonicLogoCounter+":"+$("#sonicLogoTableBody").find("tr").length);
        funsonicLogo.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        //$(_currentRow).parent().parent().parent().remove();
        $(_currentRow).closest("tr").remove();
        funsonicLogo.updateIds();
    },

}


// Sonic Voice Block /Section 13sv

var sonicVoiceCounter = 1;
var sonicVoiceAudioCounter = 1;
var funsonicVoice = {
    updateIds: function(){
        $.each($('#sonicVoiceTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("section_13sv_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_13sv_id").attr("name",("section_13sv_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_13sv_id").attr("id",("section_13sv_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_13sv_title").attr("name",("section_13sv_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".section_13sv_title").attr("id",("section_13sv_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("sonic_voice_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("sonic_voice_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("sonic_voice_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").attr("id",("sonic_voice_file_audio_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("source").attr("id",("sonic_voice_file_audio_src_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("input").attr("name",("old_sonic_voice_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("audio").find("input").attr("id",("old_sonic_voice_audio_file_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find(".sonic_voice_file_audio_error").attr("id",("sonic_voice_file_audio_error_"+index));
            $("#sonic_voice_count").val($("#sonicVoiceTableBody").find("tr").length);
            console.log("sonicVoiceAudioCounter|||:-"+sonicVoiceAudioCounter);
            sonicVoiceAudioCounter = index;
            $("#sonic_voice_audio_file_"+index).attr("onchange", "soncVoiceAudio("+index+",event)");
        });
    },
    createRow: function(type){
        if(type == 'insert')
        {
            if(sonicVoiceCounter >1)
            {
                sonicVoiceAudioCounter++;
            }
        }
        else
        {
            sonicVoiceAudioCounter = $("#sonicVoiceTableBody").find("tr").length;
        }
        sonicVoiceCounter++;
        //$('#totalRowCount').text(sonicVoiceCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + sonicVoiceCounter + '" id="tblRow_' + sonicVoiceCounter + '">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3"><label for="section_13sv_title_' + sonicVoiceCounter + '" class="col-form-label">Title:</label>';
        htmlText += '               <div class="input-group">';
        htmlText += '                   <input class="section_13sv_id" type="hidden" id="section_13sv_id_' + sonicVoiceCounter + '" name="section_13sv_id_' + sonicVoiceCounter + '" value="">';
        htmlText += '                   <input class="form_control_inner section_13sv_title" type="text" name="section_13sv_title_' + sonicVoiceCounter + '" id="section_13sv_title_' + sonicVoiceCounter + '" value="Sonic Voice" maxlength="255">';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-6 fr mb-4">';
        htmlText += '               <div style="display: flex; justify-content: space-between;">';
        htmlText += '                   <label for="sonic_voice_audio_file_' + sonicVoiceCounter + '" class="col-form-label">Sonic Voice:</label>';
        htmlText += '                   <a class="btn_delRow" onclick="funsonicVoice.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a>';
        htmlText += '               </div>';
        htmlText += '               <div class="input-group" style="position: relative; top: -3px;">';
        htmlText += '                   <label for="sonic_voice_audio_file_' + sonicVoiceCounter + '" style="width: 100%;">';
        htmlText += '                       <div class="div-musicTMimg-holder sonic_voice_audio_file">';
        htmlText += '                           <div class="btn btn-info btn-file"> <i class="fa fa-paperclip"></i> Upload';
        htmlText += '                               <input type="file" id="sonic_voice_audio_file_' + sonicVoiceCounter + '" name="sonic_voice_audio_file_' + sonicVoiceCounter + '" value="" onchange=soncVoiceAudio("' + sonicVoiceAudioCounter + '",event) />';
        htmlText += '                           </div>';
        htmlText += '                           <div class="clearfix"></div>';
        htmlText += '                           <div class="mtop10">';
        htmlText += '                               <audio id="sonic_voice_file_audio_' + sonicVoiceCounter + '" controls class="hide">';
        htmlText += '                                   <source src="" id="sonic_voice_file_audio_src_' + sonicVoiceCounter + '" />';
        htmlText += '                                   <input type="hidden" id="old_sonic_voice_audio_file_' + sonicVoiceCounter + '" name="old_sonic_voice_audio_file_' + sonicVoiceCounter + '"></input>';
        htmlText += '                               </audio>';
        htmlText += '                           </div>';
        htmlText += '                       </div>';
        htmlText += '                   </label>';
        htmlText += '                   <span id="sonic_voice_file_audio_error_' + sonicVoiceAudioCounter + '"class="text-danger sonic_voice_file_audio_error hide">The sonic voice must be a file of type: mp3, wav, wma, aac, m4a.</span>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        //htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funsonicVoice.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#sonicVoiceTableBody').append(htmlText);
        //console.log(sonicVoiceCounter+":"+$("#sonicVoiceTableBody").find("tr").length);
        funsonicVoice.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        //$(_currentRow).parent().parent().parent().remove();
        $(_currentRow).closest("tr").remove();
        funsonicVoice.updateIds();
    },

}


//Sonic Usage Block / Section 7
var sonicUsageCounter = 1;
var funSonicUsage = {
    updateIds: function(){
        $.each($('#sonicUsageTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("cv_sonic_usage_legend_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "cv_sonic_usage_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "cv_sonic_usage_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "cv_sonic_usage_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "cv_sonic_usage_legend_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("cv_sonic_usage_legend_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("cv_sonic_usage_legend_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_sonic_usage_legend_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("cv_sonic_usage_legend_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("cv_sonic_usage_legend_number_"+index));
            $("#sonic_usage_count").val($("#sonicUsageTableBody").find("tr").length);
        });
    },
    createRow: function(){
        sonicUsageCounter++;
        //$('#totalRowCount').text(sonicUsageCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first cust-border-top" row-number="' + sonicUsageCounter + '" id="tblRow_' + sonicUsageCounter + '">';
        htmlText += '   <td>';
        //htmlText += '       <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '       <div class="mb-3">';
        htmlText += '           <div class="row">';
        htmlText += '               <div class="col-md-8">';
        htmlText += '                   <label for="cv_sonic_usage_legend_name_' + sonicUsageCounter + '" class="col-form-label">Sonic Usage Legend Name:</label>';
        htmlText += '                   <input type="text" class="card_inputs" name="cv_sonic_usage_legend_name_' + sonicUsageCounter + '" id="cv_sonic_usage_legend_name_' + sonicUsageCounter + '" placeholder="Enter legend name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '               </div>';
        htmlText += '               <div class="col-md-4">';
        htmlText += '                   <label for="cv_sonic_usage_legend_number_' + sonicUsageCounter + '" class="col-form-label">Sonic Usage Legend Number:</label>';
        htmlText += '                   <input type="text" name="cv_sonic_usage_legend_number_' + sonicUsageCounter + '" id="cv_sonic_usage_legend_number_' + sonicUsageCounter + '" class="card_inputs numZeroToHundred" maxlength="3" placeholder="Enter Legend number" />';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funSonicUsage.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';
        $('#sonicUsageTableBody').append(htmlText);
        $('#cv_sonic_usage_legend_name_0 option').clone().appendTo('#cv_sonic_usage_legend_name_'+ sonicUsageCounter);
        funSonicUsage.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funSonicUsage.updateIds();
    }
}

//Sonic Usage Industry Avg Block / Section 8
var sonicUsageIndustryAvgCounter = 1;
var funsonicUsageIndustryAvg = {
    updateIds: function(){
        $.each($('#sonicUsageIndustryAvgTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lname_holder").find("label").attr("for",("cv_sonic_usage_industry_avg_legend_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("onclick", 'limitChecker("custInput", "cv_sonic_usage_industry_avg_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("onchange", 'limitChecker("custInput", "cv_sonic_usage_industry_avg_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("onblur", 'limitChecker("custInput", "cv_sonic_usage_industry_avg_legend_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("onfocus", 'limitChecker("custInput", "cv_sonic_usage_industry_avg_legend_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("name",("cv_sonic_usage_industry_avg_legend_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lname_holder").find("input").attr("id",("cv_sonic_usage_industry_avg_legend_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lname_holder").find(".legend_id").attr("name",("cv_sonic_usage_industry_avg_legend_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lname_holder").find(".legend_id").attr("id",("cv_sonic_usage_industry_avg_legend_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lnum_holder").find("label").attr("for",("cv_sonic_usage_industry_avg_legend_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lnum_holder").find("input").attr("name",("cv_sonic_usage_industry_avg_legend_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lnum_holder").find("input").attr("id",("cv_sonic_usage_industry_avg_legend_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("div").find("label").attr("for",("cv_sonic_usage_industry_avg_legend_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("input").attr("name",("cv_sonic_usage_industry_avg_legend_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("input").attr("id",("cv_sonic_usage_industry_avg_legend_color_"+index));
            $("#sonic_usage_industry_avg_count").val($("#sonicUsageIndustryAvgTableBody").find("tr").length);
        });
    },
    createRow: function(){
        sonicUsageIndustryAvgCounter++;
        //$('#totalRowCount').text(sonicUsageCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + sonicUsageIndustryAvgCounter + '" id="tblRow_' + sonicUsageIndustryAvgCounter + '">';
        htmlText += '   <td>';
        //htmlText += '       <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 lname_holder mb-3">';
        htmlText += '               <label for="cv_sonic_usage_industry_avg_legend_name_' + sonicUsageIndustryAvgCounter + '" class="col-form-label">Sonic Usage Legend Name:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="cv_sonic_usage_industry_avg_legend_name_' + sonicUsageIndustryAvgCounter + '" id="cv_sonic_usage_industry_avg_legend_name_' + sonicUsageIndustryAvgCounter + '" placeholder="Enter legend name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '               <input class="legend_id" type="hidden" id="cv_sonic_usage_industry_avg_legend_id_' + sonicUsageIndustryAvgCounter + '" name="cv_sonic_usage_industry_avg_legend_id_' + sonicUsageIndustryAvgCounter + '" value="">';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 lnum_holder mb-3">';
        htmlText += '               <label for="cv_sonic_usage_industry_avg_legend_number_' + sonicUsageIndustryAvgCounter + '" class="col-form-label">Sonic Usage legend Number:</label>';
        htmlText += '               <input type="text" name="cv_sonic_usage_industry_avg_legend_number_' + sonicUsageIndustryAvgCounter + '" id="cv_sonic_usage_industry_avg_legend_number_' + sonicUsageIndustryAvgCounter + '" class="card_inputs numZeroToHundred" maxlength="3" placeholder="Enter Legend Number" />';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 lcolor_holder mb-3">';
        htmlText += '               <div><label for="cv_sonic_usage_industry_avg_legend_color_' + sonicUsageIndustryAvgCounter + '" class="col-form-label">Sonic Usage legend Color:</label>';
        htmlText += '               <input type="text" name="cv_sonic_usage_industry_avg_legend_color_' + sonicUsageIndustryAvgCounter + '" id="cv_sonic_usage_industry_avg_legend_color_' + sonicUsageIndustryAvgCounter + '" class="card_inputs colrpicker colorpicker-element" placeholder="Select Legend Color" /></div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funsonicUsageIndustryAvg.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';
        $('#sonicUsageIndustryAvgTableBody').append(htmlText);
        $('.colrpicker').colorpicker();
        funsonicUsageIndustryAvg.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funsonicUsageIndustryAvg.updateIds();
    }
}

//Most Popular Video Block / Section 9
var mostPopularVideoCounter = 1;
var funMostPopularVideo = {
    updateIds: function(){
        $.each($('#mostPopularVideosTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("cv_most_popular_video_title_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "cv_most_popular_video_title_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "cv_most_popular_video_title_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "cv_most_popular_video_title_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "cv_most_popular_video_title_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("cv_most_popular_video_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("cv_most_popular_video_title_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".video_id").attr("name",("cv_most_popular_video_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".video_id").attr("id",("cv_most_popular_video_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_most_popular_video_link_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("textarea").attr("name",("cv_most_popular_video_link_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("textarea").attr("id",("cv_most_popular_video_link_"+index));
            $("#most_popular_video_count").val($("#mostPopularVideosTableBody").find("tr").length);
        });
    },
    createRow: function(){
        $("#mostPopularVideosTableBody").find(".b9plus").removeAttr('onclick');
        mostPopularVideoCounter++;
        //$('#totalRowCount').text(sonicUsageCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + mostPopularVideoCounter + '" id="tblRow_' + mostPopularVideoCounter + '">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3">';
        htmlText += '               <label for="cv_most_popular_video_title_' + mostPopularVideoCounter + '" class="col-form-label">Most Popular Video Title:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="cv_most_popular_video_title_' + mostPopularVideoCounter + '" id="cv_most_popular_video_title_' + mostPopularVideoCounter + '" placeholder="Enter Most Popular Video Title" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '               <input class="video_id" type="hidden" id="cv_most_popular_video_id_' + mostPopularVideoCounter + '" name="cv_most_popular_video_id_' + mostPopularVideoCounter + '" value="">';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-6 fr mb-3">';
        htmlText += '               <label for="cv_most_popular_video_link_' + mostPopularVideoCounter + '" class="col-form-label">Most Popular Video Link:</label>';
        //htmlText += '               <input type="text" name="cv_most_popular_video_link_' + mostPopularVideoCounter + '" id="cv_most_popular_video_link_' + mostPopularVideoCounter + '" class="card_inputs" placeholder="Enter Most Popular Video Link" />';
        htmlText += '               <textarea name="cv_most_popular_video_link_' + mostPopularVideoCounter + '" id="cv_most_popular_video_link_' + mostPopularVideoCounter + '" class="card_inputs" placeholder="Enter Most Popular Video Link"></textarea>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funMostPopularVideo.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';
        $('#mostPopularVideosTableBody').append(htmlText);
        $('#cv_sonic_usage_legend_name_0 option').clone().appendTo('#cv_sonic_usage_legend_name_'+ mostPopularVideoCounter);
        setTimeout(function(){ $("#mostPopularVideosTableBody").find(".b9plus").attr('onclick','funMostPopularVideo.createRow();');},200);
        funMostPopularVideo.updateIds();
        //console.log("mostPopularVideoCounter:"+mostPopularVideoCounter);
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funMostPopularVideo.updateIds();
    }
}

//A Day In My Life Block / Section 10
/* var aDayInMyLifeCounter = 1;
var funaDayInMyLife = {
    updateIds: function(){
        $.each($('#aDayInMyLifeTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("name",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("id",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("name",("cv_a_day_in_my_life_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("id",("cv_a_day_in_my_life_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_a_day_in_my_life_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("name",("cv_a_day_in_my_life_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find("input").attr("id",("cv_a_day_in_my_life_color_"+index));
            $("#a_day_in_my_life_count").val($("#aDayInMyLifeTableBody").find("tr").length);
        });
    },
    createRow: function(){
        aDayInMyLifeCounter++;
        //$('#totalRowCount').text(aDayInMyLifeCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + aDayInMyLifeCounter + '" id="tblRow_' + aDayInMyLifeCounter + '">';
        htmlText += '   <td>';
        //htmlText += '       <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '       <div class="input-group mtop10">';
        htmlText += '           <div class="fl"><label for="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Name:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow" name="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '">';
        //htmlText += '                   <option value="0">Select Qualitative</option>';
        //htmlText += '                   <option value="1">Option 1</option>';
        htmlText += '               </select>';
        htmlText += '           </div>';
        htmlText += '           <div class="fr"><label for="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Number:</label>';
        htmlText += '               <input type="text" name="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" class="card_inputs numZeroToHundred" maxlength="3" placeholder="Number" />';
        htmlText += '               <label for="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Color:</label>';
        htmlText += '               <input type="text" name="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" class="card_inputs colrpicker colorpicker-element" placeholder="Color"/>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td><a class="btn_delRow" onclick="funaDayInMyLife.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></td>';
        htmlText += '</tr>';
        $('#aDayInMyLifeTableBody').append(htmlText);
        $('#cv_a_day_in_my_life_name_id_0 option').clone().appendTo('#cv_a_day_in_my_life_name_id_'+ aDayInMyLifeCounter);
        funaDayInMyLife.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().remove();
        funaDayInMyLife.updateIds();
    }
} */

//A Day In My Life Block / Section 10
var aDayInMyLifeCounter = 1;
var funaDayInMyLife = {
    updateIds: function(){
        $.each($('#aDayInMyLifeTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".life_id").attr("name",("cv_a_day_in_my_life_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".life_id").attr("id",("cv_a_day_in_my_life_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("name",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find("select").attr("id",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_a_day_in_my_life_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("cv_a_day_in_my_life_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("cv_a_day_in_my_life_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("label").attr("for",("cv_a_day_in_my_life_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("input").attr("name",("cv_a_day_in_my_life_color_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lcolor_holder").find("input").attr("id",("cv_a_day_in_my_life_color_"+index));
            $("#a_day_in_my_life_count").val($("#aDayInMyLifeTableBody").find("tr").length);
        });
    },
    createRow: function(){
        $("#aDayInMyLifeTableBody").find(".b10plus").removeAttr('onclick');
        aDayInMyLifeCounter++;
        //$('#totalRowCount').text(aDayInMyLifeCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + aDayInMyLifeCounter + '" id="tblRow_' + aDayInMyLifeCounter + '">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3"><input class="life_id" type="hidden" id="cv_a_day_in_my_life_id_' + aDayInMyLifeCounter + '" name="cv_a_day_in_my_life_id_' + aDayInMyLifeCounter + '" value=""><label for="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Name:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow" name="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_name_id_' + aDayInMyLifeCounter + '">';
        //htmlText += '                   <option value="0">Select Qualitative</option>';
        //htmlText += '                   <option value="1">Option 1</option>';
        htmlText += '               </select>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fr mb-3"><label for="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Number:</label>';
        htmlText += '               <input type="text" name="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_number_' + aDayInMyLifeCounter + '" class="card_inputs numZeroToHundred" maxlength="3" placeholder="Number" />';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 lcolor_holder mb-3">';
        htmlText += '               <label for="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" class="col-form-label">Legend Color:</label>';
        htmlText += '               <input type="text" name="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" id="cv_a_day_in_my_life_color_' + aDayInMyLifeCounter + '" class="card_inputs colrpicker colorpicker-element" placeholder="Legend Color" />';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funaDayInMyLife.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#aDayInMyLifeTableBody').append(htmlText);
        $('.colrpicker').colorpicker();
        //console.log(aDayInMyLifeCounter+":"+$("#aDayInMyLifeTableBody").find("tr").length);
        if(window.location.href.indexOf("/add-cv/")>1)
        {
            //aDayInMyLifeCounter = $("#aDayInMyLifeTableBody").find("tr").length;
            $('#cv_a_day_in_my_life_name_id_0 option').clone().appendTo('#cv_a_day_in_my_life_name_id_'+ aDayInMyLifeCounter);
            setTimeout(function()
            {
                console.log("aDayInMyLifeCounter:if"+aDayInMyLifeCounter);
                if($("#aDayInMyLifeTableBody").find("tr").length <9)
                {
                    $("#aDayInMyLifeTableBody").find(".b10plus").attr('onclick','funaDayInMyLife.createRow();');
                }
                else
                {
                    $("#aDayInMyLifeTableBody").find(".b10plus").css('cursor','not-allowed');
                }
            },200);
        }
        else
        {
            //console.log("in b10 else");
            aDayInMyLifeCounter = $("#aDayInMyLifeTableBody").find("tr").length - 1;
            setTimeout(function()
            {
                //console.log("in b10 else"+aDayInMyLifeCounter);
                $('#cv_a_day_in_my_life_name_id_0 option').clone().appendTo('#cv_a_day_in_my_life_name_id_'+ aDayInMyLifeCounter);
                if(aDayInMyLifeCounter <8)
                {
                    $("#aDayInMyLifeTableBody").find(".b10plus").attr('onclick','funaDayInMyLife.createRow();');
                }
                else
                {
                    $("#aDayInMyLifeTableBody").find(".b10plus").css('cursor','not-allowed');
                }
            },400);
        }
        //setTimeout(function(){$('#cv_a_day_in_my_life_name_id_0 option').clone().appendTo('#cv_a_day_in_my_life_name_id_'+ aDayInMyLifeCounter);},500);
        funaDayInMyLife.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        var aDayInMyLifeCnter = $("#aDayInMyLifeTableBody").find("tr").length;
        //console.log(aDayInMyLifeCnter);
        if(aDayInMyLifeCnter <9)
        {
            $("#aDayInMyLifeTableBody").find(".b10plus").attr('onclick','funaDayInMyLife.createRow();');
            $("#aDayInMyLifeTableBody").find(".b10plus").css('cursor','pointer');
        }
        else
        {
            $("#aDayInMyLifeTableBody").find(".b10plus").css('cursor','not-allowed');
        }
        funaDayInMyLife.updateIds();
    }
}


//Money Spent on Audio Block / Section 11
var msoaCounter = 1;
var funmsoa = {
    updateIds: function(){
        $.each($('.msoaHolder').find("[row-number]"), function(index, item){
            //console.log('ttt'+index);
            $(this).attr("row-number",(index));
            $(this).find(".msoa_id").attr("id",("msoa_id_"+index));
            $(this).find(".msoa_id").attr("name",("msoa_id_"+index));
            $(this).find(".msoa_number_hol").find("label").attr("for",("msoa_number_"+index));
            $(this).find(".msoa_description_hol").find("label").attr("for",("msoa_description_"+index));
            $(this).attr("class",("form-group msoa msoa_"+index));
            $(this).find(".txtnum").attr("name",("msoa_number_"+index));
            $(this).find(".txtnum").attr("id",("msoa_number_"+index));
            $(this).find(".msoatxtarea").find("textarea.txtara1").attr("name",("msoa_description_"+index));
            $(this).find(".msoatxtarea").find("textarea.txtara1").attr("id",("msoa_description_"+index));
            //$(this).find(".mb-3").closest("textarea").attr("id",("tnd_description_"+index));
            $("#msoa_count").val($(".msoaHolder").find(".msoa").length);
            //$('.txtara1').summernote();

        });
    },
    createRow: function(){
        msoaCounter++;
        //$('#totalRowCount').text(tndCounter - 1);
        var htmlText = '';
        htmlText += '<div class="form-group msoa msoa_'+msoaCounter+'" row-number="' + msoaCounter + '" style="position:relative;">';
        htmlText += '<input class="msoa_id" type="hidden" id="msoa_id_'+msoaCounter+'" name="msoa_id_'+msoaCounter+'" value="">';
        htmlText += '   <div class="row"><div class="clearfix"></div>';
        htmlText += '       <div class="col-md-12 mb-3 mt-3 msoa_number_hol">';
        htmlText += '           <label for="msoa_number_'+msoaCounter+'" class="col-form-label">Number:</label>';
        htmlText += '           <div style="width: 10%; float: right; text-align: right; margin-bottom: 2px;">';
        htmlText += '               <a class="btn_delRow" onclick="funmsoa.deleteRows(this);" style="margin:0px;"><i class="fa fa-times"></i></a>';
        htmlText += '           </div>';
        htmlText += '           <input class="form_control_inner txtnum numZeroToHundred" type="text" name="msoa_number_'+msoaCounter+'" id="msoa_number_'+msoaCounter+'" placeholder="Number" maxlength="3">';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="msoa_description_hol">';
        htmlText += '       <label for="msoa_description_'+msoaCounter+'" class="col-form-label">Description:</label>';
        htmlText += '       <div class="mb-3 msoatxtarea">';
        htmlText += '           <textarea class="txtara1" name="msoa_description_'+msoaCounter+'" id="msoa_description_'+msoaCounter+'" placeholder="Place some text here" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="clearfix"></div>';
        htmlText += '</div></div><div class="clear"></div>';

        $('.msoaHolder').append(htmlText);
        $('.txtara1').summernote();
        clearTxtAreaHtmlTags('msoa_description_'+msoaCounter);
        numberZeorToHundred();
        funmsoa.updateIds();
        $("html, body").animate({ scrollTop: $(document).height()-$(window).height()-200 });
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().parent().remove();
        funmsoa.updateIds();
    }
}

//Music Types Usage (On Average) / Section 13
var fBlockOfExpCounter = 1;
var fBlockOfExp = {
    updateIds: function(){
        $.each($('#fBlockOfExpTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("cv_esb_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("cv_efb_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".efb_id").attr("name",("cv_efb_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find(".efb_id").attr("id",("cv_efb_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("select").attr("name",("cv_efb_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("select").attr("id",("cv_efb_name_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("cv_efb_number_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("cv_efb_number_"+index));
            $("#efb_count").val($("#fBlockOfExpTableBody").find("tr").length);
            getNoMusicValueOnKeyUpPressBlur();
        });
    },
    createRow: function(){
        $("#fBlockOfExpTableBody").find(".b13plus").removeAttr('onclick');
        fBlockOfExpCounter++;
        //$('#totalRowCount').text(fBlockOfExpCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + fBlockOfExpCounter + '" id="tblRow_' + fBlockOfExpCounter + '">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3"><input class="efb_id" type="hidden" id="cv_efb_id_' + fBlockOfExpCounter + '" name="cv_efb_id_' + fBlockOfExpCounter + '" value=""><label for="cv_esb_name_id_' + fBlockOfExpCounter + '" class="col-form-label">Legend Name:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow" name="cv_efb_name_id_' + fBlockOfExpCounter + '" id="cv_efb_name_id_' + fBlockOfExpCounter + '">';
        //htmlText += '                   <option value="0">Select Experience</option>';
        //htmlText += '                   <option value="1">Option 1</option>';
        htmlText += '               </select>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-6 fr mb-3"><label for="cv_esb_number_' + fBlockOfExpCounter + '"  class="col-form-label">Legend Number:</label><input type="text" id="cv_efb_number_' + fBlockOfExpCounter + '" name="cv_efb_number_' + fBlockOfExpCounter + '" class="card_inputs numZeroToHundred sumSec16Numbers" maxlength="3" placeholder="Number" /></div>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="fBlockOfExp.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';
        // $('#fBlockOfExpTableBody').append(htmlText);
        $(htmlText).insertBefore($('#fBlockOfExpTableBody').find('tr:last'));
        var trLen = $("#fBlockOfExpTableBody").find("tr").length;
        var lastTrNum = trLen-2;
        setTimeout(function(){$('#cv_efb_name_id_0 option').clone().appendTo('#cv_efb_name_id_'+lastTrNum);},100);
        setTimeout(function(){$("#fBlockOfExpTableBody").find(".b13plus").attr('onclick','fBlockOfExp.createRow();');},200);
        fBlockOfExp.updateIds();
        numberZeorToHundred();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        fBlockOfExp.updateIds();
        getNoMusicValue();
    }
}

//Money Expenditure per year Block / Section 14
var mepyCounter = 1;
var funmepy = {
    updateIds: function(){
        $.each($('.mepyHolder').find("[row-number]"), function(index, item){
            //console.log('ttt'+index);
            $(this).attr("row-number",(index));
            $(this).find(".mepy_id").attr("id",("mepy_id_"+index));
            $(this).find(".mepy_id").attr("name",("mepy_id_"+index));
            $(this).find(".mepy_number_hol").find("label").attr("for",("mepy_number_"+index));
            $(this).find(".mepy_description_hol").find("label").attr("for",("mepy_description_"+index));
            $(this).attr("class",("form-group mepy mepy_"+index));
            $(this).find(".txtnum").attr("name",("mepy_number_"+index));
            $(this).find(".txtnum").attr("id",("mepy_number_"+index));
            $(this).find(".mepytxtarea").find("textarea.txtara1").attr("name",("mepy_description_"+index));
            $(this).find(".mepytxtarea").find("textarea.txtara1").attr("id",("mepy_description_"+index));
            //$(this).find(".mb-3").closest("textarea").attr("id",("tnd_description_"+index));
            $("#mepy_count").val($(".mepyHolder").find(".mepy").length);
            //$('.txtara1').summernote();

        });
    },
    createRow: function(){
        mepyCounter++;
        //$('#totalRowCount').text(tndCounter - 1);
        var htmlText = '';
        htmlText += '<div class="form-group mepy mepy_'+mepyCounter+'" row-number="' + mepyCounter + '" style="position:relative;">';
        htmlText += '<input class="mepy_id" type="hidden" id="mepy_id_'+mepyCounter+'" name="mepy_id_'+mepyCounter+'" value="">';
        htmlText += '   <div class="row"><div class="clearfix"></div>';
        htmlText += '       <div class="col-md-12 mb-3 mepy_number_hol">';
        htmlText += '           <label for="mepy_number_'+mepyCounter+'" class="col-form-label">Number:</label>';
        htmlText += '       <div style="width: 10%; float: right; text-align: right; margin-bottom: 2px;">';
        htmlText += '           <a class="btn_delRow" onclick="funmepy.deleteRows(this);" style="margin:0px;"><i class="fa fa-times"></i></a>';
        htmlText += '       </div>';
        htmlText += '           <input class="form_control_inner txtnum numZeroToHundred" type="text" name="mepy_number_'+mepyCounter+'" id="mepy_number_'+mepyCounter+'" placeholder="Number" maxlength="3">';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="mepy_description_hol">';
        htmlText += '       <label for="mepy_description_'+mepyCounter+'" class="col-form-label">Description:</label>';
        htmlText += '       <div class="mb-3 mepytxtarea">';
        htmlText += '           <textarea class="txtara1" name="mepy_description_'+mepyCounter+'" id="mepy_description_'+mepyCounter+'" placeholder="Place some text here" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="clearfix"></div>';
        htmlText += '</div></div><div class="clear"></div>';

        $('.mepyHolder').append(htmlText);
        $('.txtara1').summernote();
        clearTxtAreaHtmlTags('mepy_description_'+mepyCounter);
        numberZeorToHundred();
        funmepy.updateIds();
        $("html, body").animate({ scrollTop: $(document).height()-$(window).height()-200 });
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().parent().remove();
        funmepy.updateIds();
    }
}

//Money Expenditure per video Block / Section 15
var mepvCounter = 1;
var funmepv = {
    updateIds: function(){
        $.each($('.mepvHolder').find("[row-number]"), function(index, item){
            //console.log('ttt'+index);
            $(this).attr("row-number",(index));
            $(this).find(".mepv_id").attr("id",("mepv_id_"+index));
            $(this).find(".mepv_id").attr("name",("mepv_id_"+index));
            $(this).find(".mepv_number_hol").find("label").attr("for",("mepv_number_"+index));
            $(this).find(".mepv_description_hol").find("label").attr("for",("mepv_description_"+index));
            $(this).attr("class",("form-group mepv mepv_"+index));
            $(this).find(".txtnum").attr("name",("mepv_number_"+index));
            $(this).find(".txtnum").attr("id",("mepv_number_"+index));
            $(this).find(".mepvtxtarea").find("textarea.txtara1").attr("name",("mepv_description_"+index));
            $(this).find(".mepvtxtarea").find("textarea.txtara1").attr("id",("mepv_description_"+index));
            //$(this).find(".mb-3").closest("textarea").attr("id",("tnd_description_"+index));
            $("#mepv_count").val($(".mepvHolder").find(".mepv").length);
            //$('.txtara1').summernote();

        });
    },
    createRow: function(){
        mepvCounter++;
        //$('#totalRowCount').text(tndCounter - 1);
        var htmlText = '';
        htmlText += '<div class="form-group mepv mepv_'+mepvCounter+'" row-number="' + mepvCounter + '" style="position:relative;">';
        htmlText += '<input class="mepv_id" type="hidden" id="mepv_id_'+mepyCounter+'" name="mepv_id_'+mepyCounter+'" value="">';
        htmlText += '   <div class="row"><div class="clearfix"></div>';
        htmlText += '       <div class="col-md-12 mb-3 mepv_number_hol">';
        htmlText += '           <label for="mepv_number_'+mepvCounter+'" class="col-form-label">Number:</label>';
        htmlText += '       <div style="width: 10%; float: right; text-align: right; margin-bottom: 2px;">';
        htmlText += '           <a class="btn_delRow" onclick="funmepv.deleteRows(this);" style="margin:0px;"><i class="fa fa-times"></i></a>';
        htmlText += '       </div>';
        htmlText += '           <input class="form_control_inner txtnum numZeroToHundred" type="text" name="mepv_number_'+mepvCounter+'" id="mepv_number_'+mepvCounter+'" placeholder="Number" maxlength="3">';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="mepv_description_hol">';
        htmlText += '       <label for="mepv_description_'+mepvCounter+'" class="col-form-label">Description:</label>';
        htmlText += '       <div class="mb-3 mepvtxtarea">';
        htmlText += '           <textarea class="txtara1" name="mepv_description_'+mepvCounter+'" id="mepv_description_'+mepvCounter+'" placeholder="Place some text here" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>';
        htmlText += '       </div>';
        htmlText += '   </div>';
        htmlText += '   <div class="clearfix"></div>';
        htmlText += '</div></div><div class="clear"></div>';

        $('.mepvHolder').append(htmlText);
        $('.txtara1').summernote();
        clearTxtAreaHtmlTags('mepv_description_'+mepvCounter);
        numberZeorToHundred();
        funmepv.updateIds();
        $("html, body").animate({ scrollTop: $(document).height()-$(window).height()-200 });
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().parent().remove();
        funmepv.updateIds();
    }
}

//YouTube Channel / Section 16
if(location.href.indexOf("/add-cv/") > -1)
{
    var ychnCounter = 0;
}
else
{
    var ychnCounter = $("#youTubeChannelTableBody").find("tr").length-1;
}
var funYouTubeChannel = {
    updateIds: function(){
        $.each($('#youTubeChannelTableBody').find("[row-number]"), function(index, item){
            // console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("ychn_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "ychn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "ychn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "ychn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "ychn_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("ychn_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("ychn_name_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".lang").find("label").attr("for",("ychn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("name",("ychn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("id",("ychn_language_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("name",("ychn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("id",("ychn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("label").attr("for",("ychn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("div").attr("id",("datepickerYChannelStartDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("name",("ychn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("id",("ychn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("ychn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("div").attr("id",("datepickerYChannelEndDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("ychn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("ychn_end_date_"+index));
            $("#ychn_count").val($("#youTubeChannelTableBody").find("tr").length);

            $('#datepickerYChannelStartDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                endDate: '+0m'
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                //ychnCounterDec = ychnCounter-1;
                //console.log("datepickerYChannelEndDate_:"+ "datepickerYChannelEndDate_"+ychnCounterDec+"------"+ev.date);
                //$('#datepickerYChannelEndDate_'+ychnCounterDec).datepicker('setStartDate', ev.date);
                ychnCounterDec = ($("#youTubeChannelTableBody").find("tr").length)-1;
                //console.log("datepickerYChannelEndDate_:"+ "datepickerYChannelEndDate_"+ychnCounterDec+"------"+ev.date);
                $('#datepickerYChannelEndDate_'+index).datepicker('setStartDate', ev.date);
                var YChannelEndDateVal = $("#ychn_end_date_"+index).val();
                if(YChannelEndDateVal == ""){
                    console.log("start in ");
                        getFuturePastDate(ev.date,"yt",index,'start');
                }
            });

            $('#datepickerYChannelEndDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                //startDate: '-0m'
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                var YChannelStartDateVal = $("#ychn_start_date_"+index).val();
                if(YChannelStartDateVal == ""){
                    getFuturePastDate(ev.date,"yt",index,'end');
                }

            });
        });
    },
    createRow: function(){
        $("#youTubeChannelTableBody").find(".b16plus").removeAttr('onclick');
        ychnCounter++;
        //$('#totalRowCount').text(sonicUsageCounter - 1);
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + ychnCounter + '" id="tblRow_' + ychnCounter + '">';
        htmlText += '   <input class="chnID" type="hidden" id="ychn_id_' + ychnCounter + '" name="ychn_id_' + ychnCounter + '" value="">';
        htmlText += '   <td>';
        //htmlText += ' <div class="input-group"><input type="text" class="form-control" /></div>';
        //htmlText += '   <div class="cust-row-2">';
        htmlText += '       <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-3 fl mb-3">';
        htmlText += '               <label for="ychn_name_' + ychnCounter + '" class="col-form-label">Channel Display Name:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="ychn_name_' + ychnCounter + '" id="ychn_name_' + ychnCounter + '" placeholder="YouTube Channel Display Name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 lang mb-3 predecessorHolder">';
        htmlText += '               <label for="ychn_language_' + ychnCounter + '" class="col-form-label">Channel Language:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow language_dd" placeholder="Language" id="ychn_language_'+ ychnCounter + 'name="ychn_language_'+ ychnCounter +'">';
        htmlText += '               </select>';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 fm mb-3">';
        htmlText += '               <label for="ychn_start_date_' + ychnCounter + '" class="col-form-label">Start Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerYChannelStartDate_' + ychnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="ychn_start_date_' + ychnCounter + '" name="ychn_start_date_' + ychnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        //htmlText += '               <input class="video_id" type="hidden" id="ychn_start_date_' + ychnCounter + '" name="ychn_start_date_' + ychnCounter + '" value="">';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fr mb-3">';
        htmlText += '               <label for="ychn_end_date_' + ychnCounter + '" class="col-form-label">End Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerYChannelEndDate_' + ychnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="ychn_end_date_' + ychnCounter + '" name="ychn_end_date_' + ychnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        //htmlText += '               <input class="video_id" type="hidden" id="ychn_end_date_' + ychnCounter + '" name="ychn_end_date_' + ychnCounter + '" value=""></input>';
        htmlText += '           </div>';
        //htmlText += '       </div>';
        htmlText += '       </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funYouTubeChannel.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#youTubeChannelTableBody').append(htmlText);

        setTimeout(function(){
            $("#youTubeChannelTableBody").find(".b16plus").attr('onclick','funYouTubeChannel.createRow();');
            var languageOptions = $('#og_language').find('option').clone();
            //console.log(languageOptions,'#ychn_language_'+ ychnCounter);
            $('#ychn_language_'+ ($("#youTubeChannelTableBody").find("tr").length-1)).append(languageOptions);
            $(function() {
                window.fs_test = $('.language_dd').fSelect();
            });
        },200);


        //$('#cv_sonic_usage_legend_name_0 option').clone().appendTo('#cv_sonic_usage_legend_name_'+ ychnCounter);
        funYouTubeChannel.updateIds();
        //console.log("ychnCounter:"+ychnCounter);
        //$.each($('#youTubeChannelTableBody').find("[row-number]"), function(index, item){
        /* $('#datepickerYChannelStartDate_'+ychnCounter+', #datepickerYChannelEndDate_'+ychnCounter).datepicker({
            format: "mm-yyyy",
            autoclose: true,
            orientation: "bottom",
            viewMode: "months",
            minViewMode: "months"
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
        }); */
        //});
        //console.log("htmlText:"+htmlText);
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funYouTubeChannel.updateIds();
    }
}

//Instagram Channel / Section 17
if(location.href.indexOf("/add-cv/") > -1)
{
    var ichnCounter = 0;
}
else
{
    var ichnCounter = $("#instagramChannelTableBody").find("tr").length-1;
}
var funInstagramChannel = {
    updateIds: function(){
        $.each($('#instagramChannelTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("ichn_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "ichn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "ichn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "ichn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "ichn_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("ichn_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("ichn_name_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".lang").find("label").attr("for",("ichn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("name",("ichn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("id",("ichn_language_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("name",("ichn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("id",("ichn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("label").attr("for",("ichn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("div").attr("id",("datepickerIChannelStartDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("name",("ichn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("id",("ichn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("ichn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("div").attr("id",("datepickerIChannelEndDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("ichn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("ichn_end_date_"+index));
            $("#ichn_count").val($("#instagramChannelTableBody").find("tr").length);

            $('#datepickerIChannelStartDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                endDate: '+0m',
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                //ichnCounterDec = ichnCounter-1;
                //console.log("datepickerIChannelEndDate_:"+ "datepickerIChannelEndDate_"+ichnCounterDec+"------"+ev.date);
                //$('#datepickerIChannelEndDate_'+ichnCounterDec).datepicker('setStartDate', ev.date);
                ichnCounterDec = ($("#instagramChannelTableBody").find("tr").length)-1;
                //console.log("datepickerIChannelEndDate_:"+ "datepickerIChannelEndDate_"+ichnCounterDec+"------"+ev.date);
                $('#datepickerIChannelEndDate_'+index).datepicker('setStartDate', ev.date);
                var IChannelEndDate = $("#ichn_end_date_"+index).val();
                if(IChannelEndDate == ""){
                    getFuturePastDate(ev.date,"ig",index,'start');
                }
            });
            $('#datepickerIChannelEndDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                //startDate: new Date()
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                var IChannelStartDateVal = $("#ichn_start_date_"+index).val();
                if(IChannelStartDateVal == ""){
                    getFuturePastDate(ev.date,"ig",index,'end');
                }
            });
        });
    },
    createRow: function(){
        $("#instagramChannelTableBody").find(".b17plus").removeAttr('onclick');
        ichnCounter++;
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + ichnCounter + '" id="tblRow_' + ichnCounter + '">';
        htmlText += '   <input class="chnID" type="hidden" id="ichn_id_' + ichnCounter + '" name="ichn_id_' + ichnCounter + '" value="">';
        htmlText += '   <td>';
        htmlText += '       <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-3 fl mb-3">';
        htmlText += '               <label for="ichn_name_' + ichnCounter + '" class="col-form-label">Channel Display Name:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="ichn_name_' + ichnCounter + '" id="ichn_name_' + ichnCounter + '" placeholder="Instagram Channel Display Name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 lang mb-3 predecessorHolder">';
        htmlText += '               <label for="ichn_language_' + ichnCounter + '" class="col-form-label">Channel Language:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow language_dd" placeholder="Language" id="ichn_language_'+ ichnCounter + 'name="ichn_language_'+ ichnCounter + ' ">';
        htmlText += '               </select>';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 fm mb-3">';
        htmlText += '               <label for="ichn_start_date_' + ichnCounter + '" class="col-form-label">Start Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerIChannelStartDate_' + ichnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="ichn_start_date_' + ichnCounter + '" name="ichn_start_date_' + ichnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fr mb-3">';
        htmlText += '               <label for="ichn_end_date_' + ichnCounter + '" class="col-form-label">End Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerIChannelEndDate_' + ichnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="ichn_end_date_' + ichnCounter + '" name="ichn_end_date_' + ichnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funInstagramChannel.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#instagramChannelTableBody').append(htmlText);
        setTimeout(function(){
            $("#instagramChannelTableBody").find(".b17plus").attr('onclick','funInstagramChannel.createRow();');
            var languageOptions = $('#og_language').find('option').clone();
            console.log(languageOptions,'#ichn_language_'+ ichnCounter);
            $('#ichn_language_'+ ($("#instagramChannelTableBody").find("tr").length-1)).append(languageOptions);
            $(function() {
                window.fs_test = $('.language_dd').fSelect();
            });
        },200);
        funInstagramChannel.updateIds();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funInstagramChannel.updateIds();
    }
}


//TikTok Channel / Section 18
if(location.href.indexOf("/add-cv/") > -1)
{
    var tchnCounter = 0;
}
else
{
    var tchnCounter = $("#tiktokChannelTableBody").find("tr").length-1;
}
var funTikTokChannel = {
    updateIds: function(){
        $.each($('#tiktokChannelTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("tchn_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "tchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "tchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "tchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "tchn_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("tchn_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("tchn_name_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".lang").find("label").attr("for",("tchn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("name",("tchn_language_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".lang").find("select").attr("id",("tchn_language_"+index));

            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("name",("tchn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("id",("tchn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("label").attr("for",("tchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("div").attr("id",("datepickerTChannelStartDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("name",("tchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("id",("tchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("tchn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("div").attr("id",("datepickerTChannelEndDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("tchn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("tchn_end_date_"+index));
            $("#tchn_count").val($("#tiktokChannelTableBody").find("tr").length);

            $('#datepickerTChannelStartDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                endDate: '+0m',
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                // tchnCounterDec = tchnCounter-1;
                // console.log("datepickerTChannelEndDate_:"+ "datepickerTChannelEndDate_"+tchnCounterDec+"------"+ev.date);
                // $('#datepickerTChannelEndDate_'+tchnCounterDec).datepicker('setStartDate', ev.date);
                tchnCounterDec = ($("#tiktokChannelTableBody").find("tr").length)-1;
                //console.log("datepickerTChannelEndDate_:"+ "datepickerTChannelEndDate_"+tchnCounterDec+"------"+ev.date);
                $('#datepickerTChannelEndDate_'+index).datepicker('setStartDate', ev.date);
                var TChannelEndDateval = $("#tchn_end_date_"+index).val();
                if(TChannelEndDateval == ""){
                    getFuturePastDate(ev.date,"tt",index,'start');
                }

            });
            $('#datepickerTChannelEndDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                //startDate: new Date()
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                var TChannelStartDateVal = $("#tchn_start_date_"+index).val();
                if(TChannelStartDateVal == ""){
                    getFuturePastDate(ev.date,"tt",index,'end');
                }
            });
        });
    },
    createRow: function(){
        $("#tiktokChannelTableBody").find(".b18plus").removeAttr('onclick');
        tchnCounter++;
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + tchnCounter + '" id="tblRow_' + tchnCounter + '">';
        htmlText += '   <input class="chnID" type="hidden" id="tchn_id_' + tchnCounter + '" name="tchn_id_' + tchnCounter + '" value="">';
        htmlText += '   <td>';
        htmlText += '       <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-3 fl mb-3">';
        htmlText += '               <label for="tchn_name_' + tchnCounter + '" class="col-form-label">Channel Display Name:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="tchn_name_' + tchnCounter + '" id="tchn_name_' + tchnCounter + '" placeholder="TikTok Channel Display Name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 lang mb-3 predecessorHolder">';
        htmlText += '               <label for="tchn_language_' + tchnCounter + '" class="col-form-label">Channel Language:</label>';
        htmlText += '               <select class="card_inputs dropdownDownArrow language_dd" placeholder="Language" id="tchn_language_'+ tchnCounter + 'name="tchn_language_'+ tchnCounter +'">';
        htmlText += '               </select>';
        htmlText += '           </div>';

        htmlText += '           <div class="col-md-3 fm mb-3">';
        htmlText += '               <label for="tchn_start_date_' + tchnCounter + '" class="col-form-label">Start Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerTChannelStartDate_' + tchnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="tchn_start_date_' + tchnCounter + '" name="tchn_start_date_' + tchnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fr mb-3">';
        htmlText += '               <label for="tchn_end_date_' + tchnCounter + '" class="col-form-label">End Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerTChannelEndDate_' + tchnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="tchn_end_date_' + tchnCounter + '" name="tchn_end_date_' + tchnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funTikTokChannel.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#tiktokChannelTableBody').append(htmlText);

        setTimeout(function(){
            $("#tiktokChannelTableBody").find(".b18plus").attr('onclick','funTikTokChannel.createRow();');
            var languageOptions = $('#og_language').find('option').clone();
            console.log(languageOptions,'#tchn_language_'+ tchnCounter);
            $('#tchn_language_'+ ($("#tiktokChannelTableBody").find("tr").length-1)).append(languageOptions);
            $(function() {
                window.fs_test = $('.language_dd').fSelect();
            });
        },200);
        funTikTokChannel.updateIds();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funTikTokChannel.updateIds();
    }
}





//Twitter Channel / Section 19
if(location.href.indexOf("/add-cv/") > -1)
{
    var twtchnCounter = 0;
}
else
{
    var twtchnCounter = $("#twitterChannelTableBody").find("tr").length-1;
}
var funTwitterChannel = {
    updateIds: function(){
        $.each($('#twitterChannelTableBody').find("[row-number]"), function(index, item){
            //console.log(index, item);
            $(this).attr("row-number",(index));
            $(this).attr("id",("tblRow_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("label").attr("for",("twtchn_name_"+index));
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onclick", 'limitChecker("custInput", "twtchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onchange", 'limitChecker("custInput", "twtchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onblur", 'limitChecker("custInput", "twtchn_name_'+index+'")');
            $(this).find("id",("tblRow_"+index)).find(".fl").find("input").attr("onfocus", 'limitChecker("custInput", "twtchn_name_'+index+'")');
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("name",("twtchn_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fl").find("input").attr("id",("twtchn_name_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("name",("twtchn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".chnID").attr("id",("twtchn_id_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("label").attr("for",("twtchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("div").attr("id",("datepickerTWTChannelStartDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("name",("twtchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fm").find("input").attr("id",("twtchn_start_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("label").attr("for",("twtchn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("div").attr("id",("datepickerTWTChannelEndDate_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("name",("twtchn_end_date_"+index));
            $(this).attr("id",("tblRow_"+index)).find(".fr").find("input").attr("id",("twtchn_end_date_"+index));
            $("#twtchn_count").val($("#twitterChannelTableBody").find("tr").length);

            $('#datepickerTWTChannelStartDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                endDate: '+0m',
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                // tchnCounterDec = tchnCounter-1;
                // console.log("datepickerTChannelEndDate_:"+ "datepickerTChannelEndDate_"+tchnCounterDec+"------"+ev.date);
                // $('#datepickerTChannelEndDate_'+tchnCounterDec).datepicker('setStartDate', ev.date);
                twtchnCounterDec = ($("#twitterChannelTableBody").find("tr").length)-1;
                //console.log("datepickerTChannelEndDate_:"+ "datepickerTChannelEndDate_"+tchnCounterDec+"------"+ev.date);
                $('#datepickerTWTChannelEndDate_'+index).datepicker('setStartDate', ev.date);
                var TWTChannelEndDateval = $("#twtchn_end_date_"+index).val();
                if(TWTChannelEndDateval == ""){
                    getFuturePastDate(ev.date,"twt",index,'start');
                }
            });
            $('#datepickerTWTChannelEndDate_'+index).datepicker({
                format: "mm-yyyy",
                autoclose: true,
                orientation: "bottom",
                viewMode: "months",
                minViewMode: "months",
                //startDate: new Date()
            }).on('changeDate', function (ev) {
                $(this).datepicker('hide');
                var TWTChannelStartDateVal = $("#twtchn_start_date_"+index).val();
                if(TWTChannelStartDateVal == ""){
                    getFuturePastDate(ev.date,"twt",index,'end');
                }
            });
        });
    },
    createRow: function(){
        $("#twitterChannelTableBody").find(".b19plus").removeAttr('onclick');
        twtchnCounter++;
        var htmlText = '';
        htmlText += '<tr class="first" row-number="' + twtchnCounter + '" id="tblRow_' + twtchnCounter + '">';
        htmlText += '   <input class="chnID" type="hidden" id="twtchn_id_' + twtchnCounter + '" name="twtchn_id_' + twtchnCounter + '" value="">';
        htmlText += '   <td>';
        htmlText += '       <div class="cust-row-2">';
        htmlText += '       <div class="row">';
        htmlText += '           <div class="col-md-6 fl mb-3">';
        htmlText += '               <label for="twtchn_name_' + twtchnCounter + '" class="col-form-label">Channel Display Name:</label>';
        htmlText += '               <input type="text" class="card_inputs" name="twtchn_name_' + twtchnCounter + '" id="twtchn_name_' + twtchnCounter + '" placeholder="Twitter Channel Display Name" maxlength="255" onclick="" onchange="" onblur="" onfocus="" >';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fm mb-3">';
        htmlText += '               <label for="twtchn_start_date_' + twtchnCounter + '" class="col-form-label">Start Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerTWTChannelStartDate_' + twtchnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="twtchn_start_date_' + twtchnCounter + '" name="twtchn_start_date_' + twtchnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '           <div class="col-md-3 fr mb-3">';
        htmlText += '               <label for="twtchn_end_date_' + twtchnCounter + '" class="col-form-label">End Date: (MM-YYYY)</label>';
        htmlText += '               <div class="input-group date" data-provide="datepicker" id="datepickerTWTChannelEndDate_' + twtchnCounter + '">';
        htmlText += '                   <input type="text" class="form-control-datepicker card_inputs" id="twtchn_end_date_' + twtchnCounter + '" name="twtchn_end_date_' + twtchnCounter + '" onchange="" onblur="" placeholder="MM-YYYY" value="" readonly/>';
        htmlText += '                   <div class="input-group-addon input-group-addon-cust"> <span class="input-group-text input-group-text-cust"> <i class="far fa-calendar-alt"></i> </span> </div>';
        htmlText += '               </div>';
        htmlText += '           </div>';
        htmlText += '       </div>';
        htmlText += '       </div>';
        htmlText += '   </td>';
        htmlText += '   <td style="text-align: right; width:38px;"><label>&nbsp;</label><div><a class="btn_delRow" onclick="funTwitterChannel.deleteRows(this);" style="position: relative; top: 0px;"><i class="fa fa-times"></i></a></div></td>';
        htmlText += '</tr>';

        $('#twitterChannelTableBody').append(htmlText);


        setTimeout(function(){ $("#twitterChannelTableBody").find(".b19plus").attr('onclick','funTwitterChannel.createRow();');},200);
        funTwitterChannel.updateIds();
    },
    deleteRows: function(_currentRow){
        $(_currentRow).parent().parent().parent().remove();
        funTwitterChannel.updateIds();
    }
}

// Start Loaders
function addLoader() {
    if(window.location.href.indexOf("edit-brand-cv")>-1)
    {
        $("#sidebar-overlay").css({"z-index": "1051", "background-color": "rgba(0,0,0,.5)"});
        $("#custCvLoader .overlay").css("background-color", "rgba(0,0,0,.5)");
    }
    $("#custLoader").append(getLoader());
    $("#custCvLoader").append(getLoader());
}
function getLoader() {
    return $("#scriptLoader").html();
}
function removeLoader(selector) {
    $(selector).find(".overlay, .loading-img").remove();
}
function getLoaderSmall() {
    return $("#scriptLoaderSmall").html();
}
function removeLoaderSmall(selector) {
    $(selector).find(".overlay, .loading-img-small").remove();
}

function limitChecker(type, id){
    //console.log("type:"+type);
    if(type == "custTextArea"){
        //console.log("in custTextArea:"+id);
        $("#"+id).on('input propertychange', function() {
            CharLimit(id, 512);
        });
    }
    else {
        //console.log("in custInput:"+id);
        $("#"+id).on('input propertychange', function() {
            CharLimit(id, 255);
        });
    }
}
function CharLimit(id, maxChar) {
    var len = $("#"+id).val().length;
    if (len > maxChar) {
        //console.log("id:"+id+" maxchar:"+maxChar);
        $("#"+id).val($("#"+id).val().substring(0, maxChar));
    }
}

$("#about_description").on("summernote.paste",function(e,ne) {

    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
    ne.preventDefault();
    document.execCommand('insertText', false, bufferText);

});

$("#about_key_findings").on("summernote.paste",function(e,ne) {

    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
    ne.preventDefault();
    document.execCommand('insertText', false, bufferText);

});

$("#msoa_description_0").on("summernote.paste",function(e,ne) {

    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
    ne.preventDefault();
    document.execCommand('insertText', false, bufferText);

});

$("#mepy_description_0").on("summernote.paste",function(e,ne) {

    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
    ne.preventDefault();
    document.execCommand('insertText', false, bufferText);

});

$("#mepv_description_0").on("summernote.paste",function(e,ne) {

    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
    ne.preventDefault();
    document.execCommand('insertText', false, bufferText);

});

function clearTxtAreaHtmlTags(id)
{
    $("#"+id).on("summernote.paste",function(e,ne) {
        var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('Text');
        ne.preventDefault();
        document.execCommand('insertText', false, bufferText);
    });
}

//Preview CV from Insert Update/Edit
function previewCVData()
{
    if($("#cv_name").val() != '')
    {
        var cvName = $("#cv_name").val();
    }
    else
    {
        var cvName = "NA";
    }

    /* if($("#cv_banner_desktop_preview").attr("src") != '' && $("#cv_banner_desktop_preview").attr("src") != undefined)
    {
        var cvLogoPreview = $("#cv_banner_desktop_preview").attr("src");
    } */
    if($("#cv_logo_preview").attr("src") != '' && $("#cv_logo_preview").attr("src") != undefined)
    {
        var noImageName = "desktop/";
        if(winWidth > 640 && winWidth <= 1024)
        {
            noImageName = "ipad/";
        }
        else if(winWidth <= 640)
        {
            noImageName = "mobile/";
        }
        else
        {
            noImageName = "desktop/";
        }
        var cvLogoPreview = $("#cv_logo_preview").attr("src").replace("/cv_logos/thumbnail/","/cv_banners/"+noImageName);
    }
    else
    {
        var winWidth = $(window).width();
        var noImageName = "no-banner-1600x410.jpg";
        if(winWidth > 640 && winWidth <= 1024)
        {
            noImageName = "no-banner-1024x262.jpg";
        }
        else if(winWidth <= 640)
        {
            noImageName = "no-banner-640x260.jpg";
        }
        else
        {
            noImageName = "no-banner-1600x410.jpg";
        }
        var cvLogoPreview = "../public/images/cv_banners/"+noImageName;
    }

    //overall ranking
    if($("#section_2_title").val() != '')
    {
        var section2Title = $("#section_2_title").val();
    }
    else
    {
        var section2Title = "NA";
    }
    if($("#ranking").val() != '')
    {
        if($("#ranking").val() < 10)
        {
            var ranking = "0"+$("#ranking").val();
        }
        else
        {
            var ranking = $("#ranking").val();
        }
    }
    else
    {
        var ranking = "<span class='naTextfont'>NA</span>";
    }

    //FAVORITE MUSIC GENRES
    if($("#section_3_title").val() != '')
    {
        var section3Title = $("#section_3_title").val();
    }
    else
    {
        var section3Title = "NA";
    }

    //about me
    if($("#section_4_title").val() != '')
    {
        var section4Title = $("#section_4_title").val();
    }
    else
    {
        var section4Title = "NA";
    }
    if($("#about_description").val() != '')
    {
        var aboutDescription = $("#about_description").val();
    }
    else
    {
        var aboutDescription = "<span class='naTextfont'>NA</span>";
    }

    if($("#about_key_findings").val() != '')
    {
        var aboutKeyFindings = $("#about_key_findings").val();
    }
    else
    {
        var aboutKeyFindings = "<span class='naTextfont'>NA</span>";
    }

    //social media links
    if($("#smDataCount").val() != '' || $("#smDataCount").val() != 0)
    {
        var smDataCount = $("#smDataCount").val();
        var smlist = '';
        for(var smi = 0; smi<smDataCount; smi++)
        {
            if($("#smTrIcon_"+smi).parent().find("img").attr("src") != '' && $("#smTrIcon_"+smi).parent().find("img").attr("src") != undefined)
            {
                smlist += '<li><a href="'+$("#smTrUrl_"+smi).val()+'" target="_blank"><span class="link"><img src="'+$("#smTrIcon_"+smi).parent().find("img").attr("src")+'" alt=""></span></a></li>';
            }
        }
    }
    else
    {
        var smlist = '<span class="naTextfont">NA</span>';
    }

    //Sonic Logo
    if($("#section_6_title").val() != '' && $("#section_6_title").val() != undefined)
    {
        var section6Title = $("#section_6_title").val();
    }
    else
    {
        var section6Title = "Sonic Logo";
    }
    if($("#sonic_logo_file_audio_src_0").attr("src") != '')
    {
        var sonicLogoFileAudioSrc = '<span class="audio-player-button" onclick=playPauseAudio("sec6Audio")></span><div class="audio-player"><audio id="sec6Audio"><source src="'+$("#sonic_logo_file_audio_src_0").attr("src")+'">Your browser does not support the audio element.</audio></div>';
    }
    else
    {
        var sonicLogoFileAudioSrc = "<span class='naTextfont'>&nbsp;</span>";
    }

    //SONIC LOGO USAGE
    if($("#section_7_title").val() != '')
    {
        var section7Title = $("#section_7_title").val();
    }
    else
    {
        var section7Title = "NA";
    }


    //SONIC LOGO USAGE (INDUSTRY AVERAGE)
    /* if($("#section_8_title").val() != '')
    {
        var section8Title = $("#section_8_title").val();
    }
    else
    {
        var section8Title = "NA";
    } */


    //MOST POPULAR VIDEOS
    if($("#section_9_title").val() != '')
    {
        var section9Title = $("#section_9_title").val();
    }
    else
    {
        var section9Title = "NA";
    }

    //MOST POPULAR VIDEOS
    if($("#most_popular_video_count").val() != '')
    {
        var mostPopularVideoCount = $("#most_popular_video_count").val();
        var mostPopularVideolist = '';

        if($("#cv_most_popular_video_link_0").val() != '' && $("#cv_most_popular_video_title_0").val() != '')
        {
            for(var mpvi = 0; mpvi<mostPopularVideoCount; mpvi++)
            {
                if($("#cv_most_popular_video_link_"+mpvi).val() != '')
                {
                    var cv_most_popular_video_link = $("#cv_most_popular_video_link_"+mpvi).val();
                    /* if(video_link.indexOf("watch?v=")>0)
                    {
                        var cv_most_popular_video_link = video_link.replace("watch?v=", "embed/");
                    }
                    else
                    {
                        var cv_most_popular_video_link = $("#cv_most_popular_video_link_"+mpvi).val();
                    } */

                }
                else
                {
                    var cv_most_popular_video_link = "#";
                }

                if($("#cv_most_popular_video_title_"+mpvi).val() != '')
                {
                    if($("#cv_most_popular_video_title_"+mpvi).val().length > 70)
                    {
                        var b9VideoTitle = $("#cv_most_popular_video_title_"+mpvi).val().substring(0,70)+'....';
                    }
                    else
                    {
                        var b9VideoTitle = $("#cv_most_popular_video_title_"+mpvi).val();
                    }
                    var cv_most_popular_video_title = b9VideoTitle;
                }
                else
                {
                    var cv_most_popular_video_title = "NA";
                }

                mostPopularVideolist +=     '<div>';
                mostPopularVideolist +=           '<div class="p-1">';
                mostPopularVideolist +=                 '<div class="video_holder mt-2" style="text-align:center;">';
                mostPopularVideolist +=                     cv_most_popular_video_link;
                //mostPopularVideolist +=                      '<iframe class="video_link_area" src="'+cv_most_popular_video_link+'" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
                //mostPopularVideolist +='<iframe src="https://www.youtube.com/embed/UGW01ttsfpQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
                mostPopularVideolist +=                 '</div>';
                mostPopularVideolist +=                 '<div class="clearfix"></div>';
                mostPopularVideolist +=            '</div>';
                mostPopularVideolist +=             '<div class="clearfix"></div>';
                mostPopularVideolist +=             '<span class="video_caption" title="'+$("#cv_most_popular_video_title_"+mpvi).val()+'">'+cv_most_popular_video_title+'</span>';
                mostPopularVideolist +=     '</div>';

                setTimeout(function(){
                    if($(window).width() >992)
                    {
                        var lpSection06Inner = $(".lp_sonic_logo_and_video_height").height()+40;
                        var lpSection09Inner = $(".lp_sonic_logo_and_video_height").height()+40;
                        if(lpSection06Inner > lpSection09Inner)
                        {
                            $(".lp_sonic_logo_and_video_height").css("height",lpSection06Inner);
                            getMostPopVideoHeight(lpSection06Inner);
                        }
                        else
                        {
                            $(".lp_sonic_logo_and_video_height").css("height",lpSection09Inner);
                            getMostPopVideoHeight(lpSection09Inner);
                        }
                    }
                    function getMostPopVideoHeight(currentHeight){
                        var displayCVMostPopVideoHeight = $(".previewMostPopVideo").height();
                        var ptopDiff = currentHeight - displayCVMostPopVideoHeight;
                        var ptop = ptopDiff/2;
                        $(".displayCVMostPopVideoPDiv").css("margin-top",ptop-50);
                    }
                }, 1000);

            }
            setTimeout(function(){
                $(".video_holder").find("iframe").attr("width","");
                $(".video_holder").find("iframe").attr("height","");
                $(".video_holder").find("iframe").addClass("video_link_area");
                $('.previewMostPopVideo').slick(
                    {
                        dots: true,
                        autoplay: false,
                        autoplaySpeed: 5000,
                        pauseOnHover: true,
                    }
                );
                $('.previewMostPopVideo').on('beforeChange', function(event, slick, currentSlide, nextSlide){
                    var current = $(slick.$slides[currentSlide]);
                    current.html(current.html());

                });

                /* $(".previewMostPopVideo").slick({
                    dots: true,
                    infinite: true,
                    variableWidth: true,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    autoplay: true,
                    autoplaySpeed: 5000,
                    pauseOnHover: true,

                    responsive: [
                    {
                        breakpoint: 1024,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    },
                    {
                        breakpoint: 800,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    },
                    {
                        breakpoint: 600,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    },
                    {
                        breakpoint: 480,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    }]
                }); */
            },500);
        }
        else
        {
            var mostPopularVideolist = '<div class="mt-4"><span class="naTextfont">NA</span></div>';
        }
    }


    /* //A DAY IN MY LIFE
    if($("#section_10_title").val() != '')
    {
        var section10Title = $("#section_10_title").val();
    }
    else
    {
        var section10Title = "NA";
    } */

    /* //Money Spent On Audio
    if($("#section_11_title").val() != '')
    {
        var section11Title = $("#section_11_title").val();
    }
    else
    {
        var section11Title = "NA";
    }
    if($("#msoa_count").val() != '')
    {
        if($("#msoa_number_0").val() != '' && $("#msoa_number_0").val() != undefined)
        {
            if($( "#industry_name" ).val() != 0 && $( "#industry_name" ).val() != undefined)
            {
                var msoaUrl = $("#msoaUrl").val()+'/'+$( "#industry_name" ).val();
                var b11Avg = '';
                $.ajax({
                    type: "GET",
                    url: msoaUrl,
                    data: "",
                    success: function(data) {
                        //console.log("b11_sum_data_array"+data);
                        if(data != '' && data != undefined)
                        {
                            var b11AllCvData = 0;
                            for(var i = 0; i<data.length; i++)
                            {
                                b11AllCvData = b11AllCvData+parseInt(data[i]);
                            }
                            b11Avg = $("#msoa_number_0").val() * 100 / b11AllCvData;
                        }
                    },
                    complete: function(){
                        //console.log("b11Avg"+b14Avg);
                        if(b11Avg != '' && b11Avg != undefined)
                        {
                            //$("#msoaAvg").text(parseFloat(b11Avg).toFixed(2)+"%");
                            $(".lp_section_11_count").html('<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count" id="msoaAvg">'+parseFloat(b11Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                        }
                        else
                        {
                            //$("#msoaAvg").text("NA");
                            $(".lp_section_11_count").html('<span class="naTextfont" id="msoaAvg">NA</span>');
                        }
                    }
                });
            }
        }
        else
        {
            setTimeout(function(){$(".lp_section_11_count").html('<span class="naTextfont" id="msoaAvg">NA</span>');},200);
        }
    }
    else
    {
        setTimeout(function(){$(".lp_section_11_count").html('<span class="naTextfont" id="msoaAvg">NA</span>');},200);
    }

    //Social Media Stats
    if($("#section_12_title").val() != '')
    {
        var section12Title = $("#section_12_title").val();
    }
    else
    {
        var section12Title = "NA";
    }
    if($("#smsDataCount").val() != '' || $("#smsDataCount").val() != 0)
    {

        var smsDataCount = $("#smsDataCount").val();
        var smslist = '';
        for(var smsi = 0; smsi<smsDataCount; smsi++)
        {
            if($("#smsTrTxt_"+smsi).val() != '' && $("#smsTrTxt_"+smsi).val() != undefined)
            {
                if($("#smsTrTxt_"+smsi).val().length > 50)
                {
                    var b12LinkTxt = $("#smsTrTxt_"+smsi).val().substring(0,50)+'....';
                }
                else
                {
                    var b12LinkTxt = $("#smsTrTxt_"+smsi).val();
                }
            }
            else
            {
                var b12LinkTxt = '';
            }
            if($("#smsTrIcon_"+smsi).parent().find("img").attr("src") !='' && $("#smsTrIcon_"+smsi).parent().find("img").attr("src")!=undefined)
            {
                smslist += '<li title="'+kFormatter($("#smsTrNumber_"+smsi).val())+' '+$("#smsTrTxt_"+smsi).val()+'"><table class="stats_table"><tr><td><span class="stats_icon"><img src="'+$("#smsTrIcon_"+smsi).parent().find("img").attr("src")+'" alt=""></span></td> <td><span class="stats_count">'+kFormatter($("#smsTrNumber_"+smsi).val())+'</span></td> <td><span class="stats_txt">'+b12LinkTxt+'</span></td></tr></table></li>';
            }
        }
    }
    else
    {
        var smslist = '<li><span class="naTextfont">NA</span></li>';
    } */

    //Music Types Usage (On Average)
    if($("#section_13_title").val() != '')
    {
        var section13Title = $("#section_13_title").val();
    }
    else
    {
        var section13Title = "NA";
    }

    //MUSIC EXPENDITURE (PER YEAR)
    if($("#section_14_title").val() != '')
    {
        var section14Title = $("#section_14_title").val();
    }
    else
    {
        var section14Title = "NA";
    }
    if($("#mepy_count").val() != '')
    {
        if($("#mepy_number_0").val() != '' && $("#mepy_number_0").val() != undefined)
        {
            if($( "#industry_name" ).val() != 0 && $( "#industry_name" ).val() != undefined)
            {
                var mepvUrl = $("#mepyUrl").val()+'/'+$( "#industry_name" ).val();
                var b14Avg = '', b14indAvg = '', b14indPublishedCVSum = '', b14indPublishedCVCount = '';
                $.ajax({
                    type: "GET",
                    url: mepvUrl,
                    data: "",
                    success: function(data) {
                        //console.log("b14_sum_data_array"+data);
                        if(data != '' && data != undefined)
                        {
                            /* var b14AllCvData = 0;
                            for(var i = 0; i<data.length; i++)
                            {
                                b14AllCvData = b14AllCvData+parseInt(data[i]);
                            } */
                            b14indPublishedCVSum = data.split("_")[0];
                            //console.log("b14indPublishedCVSum"+b14indPublishedCVSum);
                            b14indPublishedCVCount = data.split("_")[1];
                            //console.log("b14indPublishedCVCount"+b14indPublishedCVCount);
                            b14indAvg = b14indPublishedCVSum / b14indPublishedCVCount;
                            //console.log("b14indAvg"+parseFloat(b14indAvg).toFixed());
                            // b14Avg = $("#mepy_number_0").val() * 100 / b14AllCvData;
                            b14Avg = ($("#mepy_number_0").val() - parseFloat(b14indAvg).toFixed()) / parseFloat(b14indAvg).toFixed()*100;
                        }
                    },
                    complete: function(){
                        //console.log("b14Avg"+b14Avg);
                        if(b14Avg != '' && b14Avg != undefined)
                        {
                            // $(".lp_section_14_count").html('<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg">'+parseFloat(b14Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                            if(Math.sign(b14Avg) > 0)
                            {
                                $(".lp_section_14_count").html('<img src="../public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                // $("#sec14Val").val("plus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                            }
                            else if(Math.sign(b14Avg) < 0)
                            {
                                $(".lp_section_14_count").html('<img src="../public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                // $("#sec14Val").val("minus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                            }
                            else
                            {
                                $(".lp_section_14_count").html('<span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                // $("#sec14Val").val("equal_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                            }
                        }
                    }
                });
            }
        }
    }

    //MUSIC EXPENDITURE (PER VIDEO)
    if($("#section_15_title").val() != '')
    {
        var section15Title = $("#section_15_title").val();
    }
    else
    {
        var section15Title = "NA";
    }
    if($("#mepv_count").val() != '')
    {
        if($("#mepv_number_0").val() != '' && $("#mepv_number_0").val() != undefined)
        {
            if($( "#industry_name" ).val() != 0 && $( "#industry_name" ).val() != undefined)
            {
                var mepvUrl = $("#mepvUrl").val()+'/'+$( "#industry_name" ).val();
                var b15Avg = '', b15indAvg = '', b15indPublishedCVSum = '', b15indPublishedCVCount = '';
                $.ajax({
                    type: "GET",
                    url: mepvUrl,
                    data: "",
                    success: function(data) {
                        //console.log("b15_sum_data_array"+data);
                        if(data != '' && data != undefined)
                        {
                           /*  var b15AllCvData = 0;
                            for(var i = 0; i<data.length; i++)
                            {
                                b15AllCvData = b15AllCvData+parseInt(data[i]);
                            } */
                            b15indPublishedCVSum = data.split("_")[0];
                            // console.log("b15indPublishedCVSum"+b15indPublishedCVSum);
                            b15indPublishedCVCount = data.split("_")[1];
                            // console.log("b15indPublishedCVCount"+b15indPublishedCVCount);
                            b15indAvg = b15indPublishedCVSum / b15indPublishedCVCount;
                            // console.log("b15indAvg"+parseFloat(b15indAvg).toFixed());
                            b15Avg = ($("#mepv_number_0").val() - parseFloat(b15indAvg).toFixed()) / parseFloat(b15indAvg).toFixed()*100;
                            //b15Avg = $("#mepv_number_0").val() * 100 / b15AllCvData;
                        }
                    },
                    complete: function(){
                        //console.log("b15Avg"+b15Avg);
                        if(b15Avg != '' && b15Avg != undefined)
                        {
                            // $(".lp_section_15_count").html('<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg">'+parseFloat(b15Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                            if(Math.sign(b15Avg) > 0)
                            {
                                $(".lp_section_15_count").html('<img src="../public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                $("#sec15Val").val("plus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                            }
                            else if(Math.sign(b15Avg) < 0)
                            {
                                $(".lp_section_15_count").html('<img src="../public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                $("#sec15Val").val("minus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                            }
                            else
                            {
                                $(".lp_section_15_count").html('<span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                $("#sec15Val").val("equal_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                            }
                        }
                    }
                });
            }
        }
    }

    BootstrapDialog.show({
        id: "previewCV",
        title: "Preview Snapshot",
        //type: getDialogType("PRIMARY"),
        size: BootstrapDialog.SIZE_WIDE,
        message: function () {
            var $message = $('<div></div>');
            var html = '';

            html += '<section class="content">';
            html +=     '<div class="container-fluid" style="padding: 0px;">';
            html +=         '<div class="lp_body" style="margin-bottom: 0px;">';
            html +=             '<div class="lpbody_col" style="padding: 0px;">';

            //html +=                 '<div class="row">';
            // Banner
            html +=                     '<div class="lp_section_01_col">';
            html +=                         '<div class="p-1">';
            html +=                             '<div class="lp_section_01_inner" style="background-color: #ffffff;  border: 2px solid '+themeColor+';">';
            html +=                                 '<div class="lp_section_01">';
            html +=                                     '<a target="_blank" href="#" title="">';
            html +=                                         '<div class="" style="margin: auto;max-width: 1600px; width: 100%; max-height: 410px; overflow: hidden; background-color: #ffffff;">';
            html +=                                             '<div class="brand_logo">';
            html +=                                                 '<img src="'+cvLogoPreview+'" alt="" class="logo">';
            html +=                                             '</div>';
            html +=                                         '</div>';
            html +=                                     '</a>';
            html +=                                     '<div class="clearfix"></div>';
            html +=                                 '</div>';
            html +=                                 '<div class="clearfix"></div>';
            //html +=                                 '<h4 class="lp_section_01_caption mt-2">'+cvName+'</h4>';
            html +=                                 '<div class="brand_logoDiv_captionDiv"><h4 class="lp_section_01_caption">'+cvName+'</h4></div>';
            html +=                                 '<div class="clearfix"></div>';
            html +=                             '</div>';
            html +=                             '<div class="clearfix"></div>';
            html +=                         '</div>';
            html +=                         '<div class="clearfix"></div>';
            html +=                     '</div>';

            html +=                     '<div class="clearfix"></div>';

            // About me & Social Media
            if($("#about_description").val() != '' && $("#about_key_findings").val() != '')
            {
                html +=                     '<div class="lp_section_03_col aboutContent mt-3" style="float:left">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_03_inner border-dotted">';
                html +=                                 '<h1 class="lp_section_title">'+section4Title+'</h1>';
                html +=                                 '<div class="lp_section_04">'+aboutDescription+'</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                                 '<div class="lp_section_5 mt-3">';
                html +=                                     '<ul class="list">';
                html +=                                         smlist;
                html +=                                     '</ul>';
                html +=                                 '</div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';

                html +=                     '<div class="lp_section_03_col keyFindingContent mt-3" style="float:left">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_03_inner border-dotted">';
                html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                html +=                                 '<div class="lp_section_04">'+aboutKeyFindings+'</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';
            }
            else
            {
                if($("#about_description").val() != '')
                {
                    html +=                     '<div class="lp_section_03_col fullCol mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_03_inner border-dotted">';
                    html +=                                 '<h1 class="lp_section_title">'+section4Title+'</h1>';
                    html +=                                 '<div class="lp_section_04">'+aboutDescription+'</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                                 '<div class="lp_section_5 mt-3">';
                    html +=                                     '<ul class="list">';
                    html +=                                         smlist;
                    html +=                                     '</ul>';
                    html +=                                 '</div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                }
                if($("#about_key_findings").val() != '')
                {
                    html +=                     '<div class="lp_section_03_col fullCol mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_03_inner border-dotted">';
                    html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                    html +=                                 '<div class="lp_section_04">'+aboutKeyFindings+'</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                }
            }

            html +=                     '<div class="clearfix"></div>';

            // Genres
            if($("#ranking").val().replaceAll(" ","") !='' && $("#top3Genre").val() !='')
            {
                html +=                     '<div class="lp_section_02_col mt-3">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                html +=                                 '<div class="lp_section_03">';
                html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                     '<ul class="list mtlist mt-3">';
                var top3GenreArr = $("#top3Genre").val().split(",");
                for(var i= 0; i<top3GenreArr.length; i++)
                {
                    html +=                                     '<li>';
                    html +=                                         '<div class="icon_hol_parent"><span class="icon_hol"><img src="../public/images/favourite_music_genres/thumbnail/'+top3GenreArr[i].split('_')[0]+'.png"></span></div>';
                    html +=                                         '<h4 class="lp_section_03_caption mt-3" style="text-transform: capitalize;">'+top3GenreArr[i].split('_')[0]+'</h4>';
                    html +=                                     '</li>';
                }
                html +=                                     '</ul>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';
                // Overall Ranking
                html +=                     '<div class="lp_section_02_col mt-3">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';
                html +=                                 '<div class="lp_section_02_count">';
                html +=                                     '<div class="lp_section_02_count_inner brandCV_OverallRanking">';
                html +=                                         '<span class="count">'+$("#ranking").val();

                if($("#ranking").val() !='' && $("#pRanking").val() !='')
                {
                    //alert($("#ranking").val()+"||"+$("#pRanking").val());
                    if(parseInt($("#ranking").val()) > parseInt($("#pRanking").val()))
                    {

                        html +=                                         '<sup class="sup_counts">';
                        html +=                                             '<img src="../public/images/lp-section-02-minus-red.png">'+(parseInt($("#ranking").val())-parseInt($("#pRanking").val()))+' <img src="../public/images/lp-section-02-arrowdown-red.png" alt="">';
                        html +=                                         '</sup>';
                        html +=                                     '</span>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="overallRYearCompared">';
                        html +=                                         'Ranking in Best Audio Brands '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                        html +=                                     '</span>';
                    }
                    else if(parseInt($("#ranking").val()) < parseInt($("#pRanking").val()))
                    {
                        html +=                                         '<sup class="sup_counts">';
                        html +=                                             '<img src="../public/images/lp-section-02-plus.png">'+(parseInt($("#pRanking").val())-parseInt($("#ranking").val()))+' <img src="../public/images/lp-section-02-arrow.png" alt="">';
                        html +=                                         '</sup>';
                        html +=                                     '</span>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="overallRYearCompared">';
                        html +=                                         'Ranking in Best Audio Brands '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                        html +=                                     '</span>';
                    }
                    else if(parseInt($("#ranking").val()) == parseInt($("#pRanking").val()))
                    {
                        html +=                                         '<sup class="sup_counts">';
                        html +=                                             '<img src="../public/images/lp-section-02-same.png" alt="" style="height: 18px;">';
                        html +=                                         '</sup>';
                        html +=                                     '</span>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="overallRYearCompared">';
                        html +=                                         'No position change in the Best Audio Brands Ranking '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                        html +=                                     '</span>';
                    }
                }
                else
                {
                    html +=                                         '<sup class="sup_counts">';
                    html +=                                             '<img src="../public/images/lp-section-02-new.png" class="new_cv" alt="">';
                    html +=                                         '</sup>';
                    html +=                                     '</span>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                     '<span class="overallRYearCompared">';
                    html +=                                         'New Entry to the Best Audio Brands Ranking '+$("#cv_date").val().split("-")[1];
                    html +=                                     '</span>';
                }
                html +=                                         '<div class="clearfix"></div>';
                html +=                                     '</div>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';
                html +=                     '<div class="clearfix"></div>';
                //html +=                 '</div>';
            }
            else
            {
                if($("#ranking").val().replaceAll(" ","") !='' && $("#top3Genre").val() == '')
                {
                    // Overall Ranking
                    html +=                     '<div class="lp_section_02_col mt-3" style="width:100%;">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                    html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';
                    html +=                                 '<div class="lp_section_02_count">';
                    html +=                                     '<div class="lp_section_02_count_inner brandCV_OverallRanking">';
                    html +=                                         '<span class="count">'+$("#ranking").val();

                    if($("#ranking").val() !='' && $("#pRanking").val() !='')
                    {
                        //alert($("#ranking").val()+"||"+$("#pRanking").val());
                        if(parseInt($("#ranking").val()) > parseInt($("#pRanking").val()))
                        {

                            html +=                                         '<sup class="sup_counts">';
                            html +=                                             '<img src="../public/images/lp-section-02-minus-red.png">'+(parseInt($("#ranking").val())-parseInt($("#pRanking").val()))+' <img src="../public/images/lp-section-02-arrowdown-red.png" alt="">';
                            html +=                                         '</sup>';
                            html +=                                     '</span>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<span class="overallRYearCompared">';
                            html +=                                         'Ranking in Best Audio Brands '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                            html +=                                     '</span>';
                        }
                        else if(parseInt($("#ranking").val()) < parseInt($("#pRanking").val()))
                        {
                            html +=                                         '<sup class="sup_counts">';
                            html +=                                             '<img src="../public/images/lp-section-02-plus.png">'+(parseInt($("#pRanking").val())-parseInt($("#ranking").val()))+' <img src="../public/images/lp-section-02-arrow.png" alt="">';
                            html +=                                         '</sup>';
                            html +=                                     '</span>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<span class="overallRYearCompared">';
                            html +=                                         'Ranking in Best Audio Brands '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                            html +=                                     '</span>';
                        }
                        else if(parseInt($("#ranking").val()) == parseInt($("#pRanking").val()))
                        {
                            html +=                                         '<sup class="sup_counts">';
                            html +=                                             '<img src="../public/images/lp-section-02-same.png" alt="" style="height: 18px;">';
                            html +=                                         '</sup>';
                            html +=                                     '</span>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<span class="overallRYearCompared">';
                            html +=                                         'No position change in the Best Audio Brands Ranking '+$("#cv_date").val().split("-")[1]+', compared to '+$("#parentCvYear").val();
                            html +=                                     '</span>';
                        }
                    }
                    else
                    {
                        html +=                                         '<sup class="sup_counts">';
                        html +=                                             '<img src="../public/images/lp-section-02-new.png" class="new_cv" alt="">';
                        html +=                                         '</sup>';
                        html +=                                     '</span>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="overallRYearCompared">';
                        html +=                                         'New Entry to the Best Audio Brands Ranking '+$("#cv_date").val().split("-")[1];
                        html +=                                     '</span>';
                    }
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                    html +=                     '<div class="clearfix"></div>';
                    //html +=                 '</div>';
                }

                if($("#ranking").val().replaceAll(" ","") =='' && $("#top3Genre").val() !='')
                {
                    html +=                     '<div class="lp_section_02_col mt-3" style="width:100%;">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                    html +=                                 '<div class="lp_section_03">';
                    html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                     '<ul class="list mtlist mt-3">';
                    var top3GenreArr = $("#top3Genre").val().split(",");
                    for(var i= 0; i<top3GenreArr.length; i++)
                    {
                        html +=                                     '<li>';
                        html +=                                         '<div class="icon_hol_parent"><span class="icon_hol"><img src="../public/images/favourite_music_genres/thumbnail/'+top3GenreArr[i].split('_')[0]+'.png"></span></div>';
                        html +=                                         '<h4 class="lp_section_03_caption mt-3" style="text-transform: capitalize;">'+top3GenreArr[i].split('_')[0]+'</h4>';
                        html +=                                     '</li>';
                    }
                    html +=                                     '</ul>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                }
            }

            html +=                 '<div class="clearfix"></div>';

            if(mostPopularVideolist != '' && $("#cv_most_popular_video_link_0").val() != '' && $("#sonic_usage_count").val() != '')
            {
                // Sonic Logo
                //html +=                 '<div class="row mt-3">';
                html +=                     '<div class="lp_section_06_col mt-3">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_06_inner border-dotted lp_sonic_logo_and_video_height">';
                html +=                                 '<div class="lp_section_title_060708"><h1 class="lp_section_title">'+section6Title+'</h1></div>';
                html +=                                 '<div class="mt-2 audio-icon-holder">';
                html +=                                     sonicLogoFileAudioSrc;
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                // Sonic Logo Usage
                html +=                                 '<div class="lp_section_07_col lp_section_7">';
                html +=                                     '<div class="p-1">';
                html +=                                         '<div class="lp_section_07_inner mt-4">';
                html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">'+section7Title+'</h1></div>';
                html +=                                             '<div class="mt-4">';
                html +=                                                 '<!-- DONUT CHART -->';
                html +=                                                 '<div class="lp_section_07_01" style="text-align:center;">';
                // html +=                                                     '<div class="col-md-12">';
                // html +=                                                         '<canvas id="pieChart" class="custPieChart" style=""></canvas>';
                // html +=                                                     '</div>';
                html +=                                                     '<div class="col-md-12">';
                html +=                                                         '<div id="brandCVPieDiv1">';
                html +=                                                             '<div id="brandCVPie1" style="width: 250px; height: 250px;"></div>';
                html +=                                                         '</div>';
                html +=                                                     '</div>';
                html +=                                                     '<div class="clearfix"></div>';
                html +=                                                 '</div>';
                html +=                                                 '<div class="clearfix"></div>';
                html +=                                             '</div>';
                html +=                                             '<div class="clearfix"></div>';
                html +=                                         '</div>';
                html +=                                         '<div class="clearfix"></div>';
                html +=                                     '</div>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                // Sonic Logo Usage (Industry Average)
                html +=                                 '<div class="lp_section_08_col lp_section_8">';
                html +=                                     '<div class="p-1 lp_divSonicLogoUsage">';
                html +=                                         '<div class="lp_section_08_inner mt-4">';
                html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic logo usage (industry average)</h1></div>';
                html +=                                             '<div class="mt-4">';
                html +=                                                 '<!-- DONUT CHART -->';
                html +=                                                 '<div class="lp_section_07_02" style="text-align:center;">';
                // html +=                                                     '<div class="col-md-12">';
                // html +=                                                         '<canvas id="donutChart0" class="donut0"></canvas>';
                // html +=                                                     '</div>';
                html +=                                                     '<div class="col-md-12">';
                html +=                                                         '<div id="brandCVPieDiv2">';
                html +=                                                             '<div id="brandCVPie2" style="width: 250px; height: 250px;"></div>';
                html +=                                                         '</div>';
                html +=                                                     '</div>';
                html +=                                                 '</div>';
                html +=                                                 '<div class="clearfix"></div>';
                html +=                                             '</div>';
                html +=                                             '<div class="clearfix"></div>';
                html +=                                         '</div>';
                html +=                                         '<div class="clearfix"></div>';
                html +=                                     '</div>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';
                // Most Popular Videos
                html +=                     '<div class="lp_section_09_col mt-3">';
                html +=                         '<div class="p-1">';
                html +=                             '<div class="lp_section_09_inner border-dotted lp_sonic_logo_and_video_height">';
                html +=                                 '<div><h1 class="lp_section_title">'+section9Title+'</h1></div>';
                html +=                                 '<div class="displayCVMostPopVideoPDiv">';
                html +=                                     '<section class="previewMostPopVideo slider mt-2">';
                html +=                                         mostPopularVideolist;
                html +=                                     '</section>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
                html +=                     '</div>';
                html +=                     '<div class="clearfix"></div>';
                //html +=                 '</div>';
            }
            else
            {

                if(mostPopularVideolist == '' && $("#sonic_usage_count").val() != '')
                {
                    // Sonic Logo
                    //html +=                 '<div class="row mt-3">';
                    html +=                     '<div class="lp_section_06_col mt-3" style="width:100%">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_06_inner border-dotted lp_sonic_logo_and_video_height">';
                    html +=                                 '<div class="lp_section_title_060708"><h1 class="lp_section_title">'+section6Title+'</h1></div>';
                    html +=                                 '<div class="mt-2 audio-icon-holder">';
                    html +=                                     sonicLogoFileAudioSrc;
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    // Sonic Logo Usage
                    html +=                                 '<div class="lp_section_07_col lp_section_7">';
                    html +=                                     '<div class="p-1">';
                    html +=                                         '<div class="lp_section_07_inner mt-4">';
                    html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">'+section7Title+'</h1></div>';
                    html +=                                             '<div class="mt-4">';
                    html +=                                                 '<!-- DONUT CHART -->';
                    html +=                                                 '<div class="lp_section_07_01" style="text-align:center;">';
                    // html +=                                                     '<div class="col-md-12">';
                    // html +=                                                         '<canvas id="pieChart" class="custPieChart" style=""></canvas>';
                    // html +=                                                     '</div>';
                    html +=                                                     '<div class="col-md-12">';
                    html +=                                                         '<div id="brandCVPieDiv1">';
                    html +=                                                             '<div id="brandCVPie1" style="width: 250px; height: 250px;"></div>';
                    html +=                                                         '</div>';
                    html +=                                                     '</div>';
                    html +=                                                     '<div class="clearfix"></div>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    // Sonic Logo Usage (Industry Average)
                    html +=                                 '<div class="lp_section_08_col lp_section_8">';
                    html +=                                     '<div class="p-1 lp_divSonicLogoUsage">';
                    html +=                                         '<div class="lp_section_08_inner mt-4">';
                    html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic logo usage (industry average)</h1></div>';
                    html +=                                             '<div class="mt-4">';
                    html +=                                                 '<!-- DONUT CHART -->';
                    html +=                                                 '<div class="lp_section_07_02" style="text-align:center;">';
                    // html +=                                                     '<div class="col-md-12">';
                    // html +=                                                         '<canvas id="donutChart0" class="donut0"></canvas>';
                    // html +=                                                     '</div>';
                    html +=                                                     '<div class="col-md-12">';
                    html +=                                                         '<div id="brandCVPieDiv2">';
                    html +=                                                             '<div id="brandCVPie2" style="width: 250px; height: 250px;"></div>';
                    html +=                                                         '</div>';
                    html +=                                                     '</div>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                    //html +=                 '</div>';
                }
                if(mostPopularVideolist != '' && $("#sonic_usage_count").val() == '')
                {
                    // Sonic Logo
                    //html +=                 '<div class="row mt-3">';                    // Most Popular Videos
                    html +=                     '<div class="lp_section_09_col mt-3" style="width:100%">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_09_inner border-dotted lp_sonic_logo_and_video_height">';
                    html +=                                 '<div><h1 class="lp_section_title">'+section9Title+'</h1></div>';
                    html +=                                 '<div class="displayCVMostPopVideoPDiv">';
                    html +=                                     '<section class="previewMostPopVideo slider mt-2">';
                    html +=                                         mostPopularVideolist;
                    html +=                                     '</section>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                    html +=                     '<div class="clearfix"></div>';
                    //html +=                 '</div>';
                }
            }

            html +=                 '<div class="clearfix"></div>';

            /*html +=                 '<div class="mt-3 lp_section_101112 row">';
            //html +=                 '<div class="row">';
             // A Day In My Life
            html +=                     '<div class="lp_section_10_col lp_section_10">';
            html +=                         '<div class="p-1">';

            if($("#a_day_in_my_life_count").val() <= 10)
            {
                html +=                             '<div class="lp_section_101112_inner lp_section_1011 border-dotted lp_aDayInMyLife_socialMediaS_height_10Rec lp_aDayInMyLife_socialMediaS_height_10_Rec">';
            }
            else
            {
                html +=                             '<div class="lp_section_101112_inner lp_section_1011 border-dotted lp_aDayInMyLife_socialMediaS_height_15Rec">';
            }

            html +=                                 '<div class="inner_section lp_sec10_title">';
            html +=                                     '<h1 class="lp_section_title">'+section10Title+'</h1>';
            // html +=                                     '<div class="mt-4">';
            // html +=                                         '<canvas id="donutChart1" class="donut1"></canvas>';
            // html +=                                         '<div id="legendsDisplayCV" class="legendsDisplayInDiv"></div>';
            // html +=                                     '</div>';
            html +=                                     '<div class="mt-4">';
            html +=                                         '<div id="brandCVPieDiv3" class="brandCVPie3WH brandCVPieVAlign">';
            html +=                                             '<div id="brandCVPie3"></div>';
            html +=                                         '</div>';
            html +=                                     '</div>';
            html +=                                     '<div class="clearfix"></div>';
            html +=                                 '</div>';
            html +=                                 '<div class="clearfix"></div>';
            html +=                             '</div>';
            html +=                             '<div class="clearfix"></div>';
            html +=                         '</div>';
            html +=                         '<div class="clearfix"></div>';
            html +=                     '</div>'; */
            /* html +=                  '<div class="col-md-6 lp_section_101112_bg">';
            html +=                         '<div class="clearfix"></div>';
            html +=                     '</div>'; */
            /* // Social Media Stats
            html +=                     '<div class="lp_section_1112_col">';
            html +=                         '<div class="lp_section_1112">';
            html +=                             '<div class="p-1">';

            if($("#a_day_in_my_life_count").val() <= 10)
            {
                html +=                             '<div class="lp_section_101112_inner lp_section_1012 border-dotted lp_aDayInMyLife_socialMediaS_height_10Rec lp_aDayInMyLife_socialMediaS_height_10_Rec">';
            }
            else
            {
                html +=                             '<div class="lp_section_101112_inner lp_section_1012 border-dotted lp_aDayInMyLife_socialMediaS_height_15Rec">';
            }

            html +=                                     '<div class="lp_section_12">';
            html +=                                         '<div class="inner_section">';
            html +=                                             '<h1 class="lp_section_title">'+section12Title+'</h1>';
            html +=                                             '<div class="lp_section_12_list mt-4">';
            html +=                                                 '<ul class="list">';
            html +=                                                     smslist;
            html +=                                                 '</ul>';
            html +=                                                 '<div class="clearfix"></div>';
            html +=                                             '</div>';
            html +=                                             '<div class="clearfix"></div>';
            html +=                                         '</div>';
            html +=                                         '<div class="clearfix"></div>';
            html +=                                     '</div>';
            html +=                                     '<div class="clearfix"></div>';
            html +=                                 '</div>';
            html +=                                 '<div class="clearfix"></div>';
            html +=                             '</div>';
            html +=                             '<div class="clearfix"></div>';
            html +=                         '</div>';
            html +=                         '<div class="clearfix"></div>';
            html +=                     '</div>';
            html +=                     '<div class="clearfix"></div>';
            html +=                 '</div>';

            html +=                 '<div class="clearfix"></div>';
            html +=                 '<div class="lp_section_131415">';
            html +=                     '<div class="row">'; */
           /*  html +=                     '<div class="col-md-6 lp_section_131415_bg">';
            html +=                         '<div class="clearfix"></div>';
            html +=                         '</div>'; */

            if($("#efb_count").val() != '' && $("#cv_efb_number_0").val() != '' && $("#mepv_number_0").val() != '' && $("#mepy_number_0").val() != '')
            {
                // MUSIC TYPES USAGE (ON AVERAGE)
                html +=                         '<div class="lp_section_13_col lp_section_13 mt-3">';
                html +=                             '<div class="p-1">';
                html +=                                 '<div class="lp_section_131415_inner border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                html +=                                     '<div class="inner_section lp_section_14_body">';
                html +=                                         '<h1 class="lp_section_title">Music Types Usage (On Average)</h1>';
                html +=                                         '<div>';
                html +=                                             '<div class="chart">';
                html +=                                                 '<canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>';
                html +=                                             '</div>';
                html +=                                             '<div class="clearfix"></div>';
                html +=                                         '</div>';
                html +=                                         '<div class="clearfix"></div>';
                html +=                                     '</div>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                     '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';

                html +=                         '<div class="lp_section_1415_col mt-3">';
                html +=                             '<div class="lp_section_1415">';
                html +=                                 '<div class="p-1">';
                html +=                                     '<div class="lp_section_1315 border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                // Music Expenditure (Per Year)
                html +=                                         '<div class="lp_section_14">';
                html +=                                             '<div class="inner_section lp_section_14_body">';
                html +=                                                 '<h1 class="lp_section_title">'+section14Title+'</h1>';
                html +=                                                 '<div class="lp_section_14_count" title="Compared to Industry Average">';
            //html +=                                                    '<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count">'+mepyiNumber+'</span>';
                html +=                                                 '</div>';
                html +=                                                 '<div class="clearfix"></div>';
                html +=                                             '</div>';
                html +=                                             '<div class="clearfix"></div>';
                html +=                                         '</div>';
                // Music Expenditure (Per Video)
                html +=                                         '<div class="lp_section_15">';
                html +=                                             '<div class="inner_section lp_section_14_body">';
                html +=                                                 '<h1 class="lp_section_title">'+section15Title+'</h1>';
                html +=                                                 '<div class="lp_section_15_count" title="Compared to Industry Average">';
                //html +=                                                   '<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg"></span>';
                html +=                                                 '</div>';
                html +=                                                 '<div class="clearfix"></div>';
                html +=                                             '</div>';
                html +=                                             '<div class="clearfix"></div>';
                html +=                                         '</div>';
                html +=                                         '<div class="clearfix"></div>';
                html +=                                         '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                html +=                                     '</div>';
                html +=                                     '<div class="clearfix"></div>';
                html +=                                 '</div>';
                html +=                                 '<div class="clearfix"></div>';
                html +=                             '</div>';
                html +=                             '<div class="clearfix"></div>';
                html +=                         '</div>';
                html +=                         '<div class="clearfix"></div>';
            }
            else
            {
                if($("#efb_count").val() != '' && $("#mepv_number_0").val() == '' && $("#mepy_number_0").val() == '')
                {
                    if($("#cv_efb_number_0").val() == '' && $("#efb_count").val() == 2)
                    {
                    }
                    else
                    {
                        // MUSIC TYPES USAGE (ON AVERAGE)
                        html +=                         '<div class="lp_section_13_col lp_section_13 mt-3" style="width:100%">';
                        html +=                             '<div class="p-1">';
                        html +=                                 '<div class="lp_section_131415_inner border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                        html +=                                     '<div class="inner_section lp_section_14_body">';
                        html +=                                         '<h1 class="lp_section_title">Music Types Usage (On Average)</h1>';
                        html +=                                         '<div>';
                        html +=                                             '<div class="chart">';
                        html +=                                                 '<canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>';
                        html +=                                             '</div>';
                        html +=                                             '<div class="clearfix"></div>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                    }

                }
                if($("#cv_efb_number_0").val() == '' && $("#mepv_number_0").val() != '' && $("#mepy_number_0").val() != '')
                {
                    html +=                         '<div class="lp_section_1415_col mt-3" style="width:100%">';
                    html +=                             '<div class="lp_section_1415">';
                    html +=                                 '<div class="p-1">';
                    html +=                                     '<div class="lp_section_1315 border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                    // Music Expenditure (Per Year)
                    html +=                                         '<div class="lp_section_14">';
                    html +=                                             '<div class="inner_section lp_section_14_body">';
                    html +=                                                 '<h1 class="lp_section_title">'+section14Title+'</h1>';
                    html +=                                                 '<div class="lp_section_14_count" title="Compared to Industry Average">';
                //html +=                                                    '<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count">'+mepyiNumber+'</span>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    // Music Expenditure (Per Video)
                    html +=                                         '<div class="lp_section_15">';
                    html +=                                             '<div class="inner_section lp_section_14_body">';
                    html +=                                                 '<h1 class="lp_section_title">'+section15Title+'</h1>';
                    html +=                                                 '<div class="lp_section_15_count" title="Compared to Industry Average">';
                    //html +=                                                   '<img src="../public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg"></span>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                         '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                }
            }

            html +=                     '</div>';
            html +=                     '<div class="clearfix"></div>';
            html +=                 '</div>';

            html +=                 '<div class="clearfix"></div>';
            html +=             '</div>';
            html +=         '</div>';
            html +=         '<div class="clearfix"></div>';
            html +=     '</div>';
            html += '</section>';

            $message.append(html);

            return $message;
        },
        closeByBackdrop: !1,
        closable: !0,
        buttons: [
             {
                label: "Close",
                cssClass: 'btn btn-primary btn-sm btn-cust pull-right',
                action: function (dialog) {
                    dialog.close();
                }
            }
        ],
        onshown: function (dialogRef) {

            if($("#about_description").val() != '' && $("#about_key_findings").val() != '')
            {
                var aboutContentHeight = $(".aboutContent").find(".lp_section_03_inner").height();
                var keyFindingContentHeight = $(".keyFindingContent").find(".lp_section_03_inner").height();
                if(aboutContentHeight > keyFindingContentHeight)
                {
                    $(".lp_section_03_col").find(".lp_section_03_inner").css("height",aboutContentHeight+50);
                }
                else
                {
                    $(".lp_section_03_col").find(".lp_section_03_inner").css("height",keyFindingContentHeight+50);
                }
            }


            /* if($(window).width() > 992) {

                var lpSection1011 = $(".lp_section_1011").height()+80;
                var lpSection1012  = $(".lp_section_1012").height()+80;
                if(lpSection1011 > lpSection1012)
                {
                    $(".lp_aDayInMyLife_socialMediaS_height_10Rec").css("height",lpSection1011);
                    $(".lp_aDayInMyLife_socialMediaS_height_15Rec").css("height",lpSection1011);
                }
                else
                {
                    $(".lp_aDayInMyLife_socialMediaS_height_10Rec").css("height",lpSection1012);
                    $(".lp_aDayInMyLife_socialMediaS_height_15Rec").css("height",lpSection1012);
                }
            } */
        }
    });

    //FAVORITE MUSIC GENRES
    if($("#cv_music_taste_name_ids").val() != '')
    {
        var cvMusicTasteNameIds = $("#cv_music_taste_name_ids").val();
        //var cvMusicTaste = '';
        var mtUrl = $("#mtUrl").val()+'/'+cvMusicTasteNameIds;
        $.ajax({
            type: "GET",
            url: mtUrl,
            data: "",
            success: function(mtlistdata) {
                //console.log(mtlistdata);
                //$message.append(data);
                //cvMusicTaste = data;
                $(".mtlist").append(mtlistdata);
            }
        });
    }
    else
    {
        setTimeout(function(){
            $(".mtlist").append('<li><span class="naTextfont">NA</span></li>');
        },200);

    }


    //A DAY IN MY LIFE
    /* if($("#a_day_in_my_life_count").val() != '')
    {
        var aDayInMyLifeCount = $("#a_day_in_my_life_count").val();;
        // var datasets10BgColorArray = ['#efb119', '#e56e25', '#f18a1f', '#3ba3d2', '#4eb966', '#6c757d', '#3c8dbc', '#f012be', '#001f3f', '#3f0000'];
        //var datasets10BgColorArray = ['#B78600','#D29B00','#E6A900','#F3B300','#FFCD63','#FFD792','#FFE0B0','#FFE7C6'];
        var datasets10BgColorNames = $("#sec10DatasetsBgColorNames").val();
        //console.log("datasets10BgColorNames"+datasets10BgColorNames);
        var datasets10BgColorArray = datasets10BgColorNames.split(",");
        var donutData10LabelsID = [];
        var donutData10Labels = [];
        var datasetsData10 = [];
        var datasets10BgColor = [];
        var datasets10Border = [];
        for(var adimli = 0; adimli<aDayInMyLifeCount; adimli++)
        {
            donutData10LabelsID.push($("#cv_a_day_in_my_life_name_id_"+adimli).val());
            datasetsData10.push($("#cv_a_day_in_my_life_number_"+adimli).val());
            if($("#cv_a_day_in_my_life_color_"+adimli).val() !='')
            {
                datasets10BgColor.push($("#cv_a_day_in_my_life_color_"+adimli).val());
            }
            else
            {
                datasets10BgColor.push(datasets10BgColorArray[adimli]);
            }
            datasets10Border.push(0);
        }

        if(datasetsData10 != '')
        {
            var adimlUrl = $("#adimlUrl").val()+'/'+donutData10LabelsID;

            $.ajax({
                type: "GET",
                url: adimlUrl,
                data: "",
                success: function(data) {
                    //console.log(data);
                    donutData10Labels = data;
                },
                complete: function(){
                    //setTimeout(function(){
                        var b10datasetsDataArr = [];

                        for(var i=0; i<aDayInMyLifeCount; i++)
                        {
                            b10datasetsDataArr.push({"label": donutData10Labels[i], "value": parseInt(datasetsData10[i])});
                        }

                        var brandCVPieData3 =  b10datasetsDataArr;
                        var brandCVPie3;

                        var brandCVPieOuterRadius = "";
                        var brandCVPie3WinWidth = $(window).width();
                        if (brandCVPie3WinWidth <= 1250 && brandCVPie3WinWidth >= 1200) {
                            brandCVPieOuterRadius = "60%";
                        }
                        else if (brandCVPie3WinWidth <= 1199 && brandCVPie3WinWidth >= 993) {
                            brandCVPieOuterRadius = "50%";
                        }
                        else if (brandCVPie3WinWidth <= 549) {
                            brandCVPieOuterRadius = "50%"
                        }
                        else {
                            brandCVPieOuterRadius = "80%"
                        }

                        var brandCVPieUpdate3 = function () {
                            if (brandCVPie3) brandCVPie3.destroy();
                            var div3W = $("#brandCVPieDiv3").width();
                            var div3H = $("#brandCVPieDiv3").height();
                            //var size = Math.min(innerHeight, innerWidth) / 2;
                            var size = Math.min(div3W, div3H);
                            var opt =  {
                                data: {
                                    content: brandCVPieData3,
                                },
                                size: {
                                    pieInnerRadius: "40%",
                                    pieOuterRadius: brandCVPieOuterRadius,
                                    canvasHeight: div3H,
                                    canvasWidth: div3W,
                                },
                                labels: {
                                    outer: {
                                        pieDistance: 15
                                    },
                                    mainLabel: {
                                        font: "RobotoMonoRegular",
                                        color: "#000000",
                                        fontSize: 12
                                    },
                                    percentage: {
                                        font: "RobotoMonoRegular",
                                        color: "#000000",
                                        decimalPlaces: 0,
                                        fontSize: 12
                                    },
                                    value: {
                                        font: "RobotoMonoRegular",
                                        color: "#000000",
                                        fontSize: 12
                                    },
                                    lines: {
                                        enabled: true,
                                        style: "straight",
                                        color: "#8f9092"
                                    }
                                },
                                tooltips:{
                                    enabled:false,
                                    type:"placeholder",
                                    string:"{label}:{percentage}%",
                                    style:{padding:5}
                                },
                                misc: {
                                    gradient: {
                                        enabled: false,
                                        percentage: 100
                                    },
                                    pieCenterOffset: {
                                        x: 10,
                                        y: 0
                                    },
                                    colors: {
                                        segments: b10datasetsbgColorData,
                                        segmentStroke: "#8b8c90"
                                    },
                                    canvaspadding:{
                                        top:0,
                                        right:0,
                                        bottom:0,
                                        left:0
                                    }
                                }

                            };
                            brandCVPie3 = new d3pie("brandCVPie3", opt);
                        };
                        brandCVPieUpdate3();
                        window.addEventListener('resize', brandCVPieUpdate3);

                        // Start Code of Render Legends In Div
                        //var ctx = $('#donutChart1').get(0).getContext('2d');
                        var myLegendContainer = document.getElementById("legendsDisplayCV");
                        // generate HTML legend
                        myLegendContainer.innerHTML = donutChart.generateLegend();
                        // bind onClick event to all LI-tags of the legend
                        var legendItems = myLegendContainer.getElementsByTagName('li');
                        for (var i = 0; i < legendItems.length; i += 1) {
                            legendItems[i].addEventListener("click", legendClickCallback, false);
                        }

                        function legendClickCallback(event) {
                            event = event || window.event;

                            var target = event.target || event.srcElement;
                            while (target.nodeName !== 'LI') {
                                target = target.parentElement;
                            }
                            var parent = target.parentElement;
                            var chartId = parseInt(parent.classList[0].split("-")[0], 10);
                            var chart = Chart.instances[chartId];
                            var index = Array.prototype.slice.call(parent.children).indexOf(target);
                            var meta = chart.getDatasetMeta(0);
                            console.log(index);
                            var item = meta.data[index];

                            if (item.hidden === null || item.hidden === false) {
                                item.hidden = true;
                                target.classList.add('hidden');
                            } else {
                                target.classList.remove('hidden');
                                item.hidden = null;
                            }
                            chart.update();
                        }
                        // End Code of Render Legends In Div
                    //},200);


                }

            });
        }
        else
        {
            setTimeout(function(){$(".lp_sec10_title").find("div.mt-4").html("<span class='naTextfont'>NA</span>")},200);

        }
    }
    else
    {
        setTimeout(function(){$(".lp_sec10_title").find("div.mt-4").html("<span class='naTextfont'>NA</span>")},200);
        if($("#section_10_bg_image_preview").attr("src") != '' && $("#section_10_bg_image_preview").attr("src") != undefined)
        {
            var section10BgImagePreview = $("#section_10_bg_image_preview").attr("src");
            //console.log(section10BgImagePreview);
            $(".lp_section_101112_bg").css({'background': 'url('+ section10BgImagePreview + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
        }
        else
        {
            var folderName = $("#industry_name").val();
            var section10BgImageNames = $("#sec10BGImageNames").val();
            var section10BgImageArray = section10BgImageNames.split(",");
            //console.log("section10BgImageArray"+section10BgImageArray);
            //var section10BgImageArray = ['01.jpg','02.jpg','03.jpg','04.jpg','05.jpg','06.jpg','07.jpg','08.jpg','09.jpg','10.jpg'];
            var section10BgImagePreview = "../public/images/section_10_bg_images/default/"+folderName+"/"+section10BgImageArray[Math.floor(Math.random() * section10BgImageArray.length)];
            var d = new Date();
            var n = d.getMilliseconds();
            //console.log(section10BgImagePreview+'?bi='+ n);
            setTimeout(function(){$(".lp_section_101112_bg").css({'background': 'url('+ section10BgImagePreview+'?bi='+ n + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});},200);
        }
        lpSection10ImgHeight();
    } */



    //Music Types Usage (On Average)
    if($("#efb_count").val() != '')
    {
        var efbCount = $("#efb_count").val();
        var barChartLabelsID = [];
        var barChartLabels = [];
        var barChartDatasetsData = [];
        var borderWidthData = [];
        for(var efbi = 0; efbi<efbCount; efbi++)
        {
            barChartLabelsID.push($("#cv_efb_name_id_"+efbi).val());
            barChartDatasetsData.push($("#cv_efb_number_"+efbi).val());
            borderWidthData.push(0);
        }
        console.log("barChartLabelsID",barChartLabelsID +"| barChartDatasetsData",barChartDatasetsData);
        if(barChartDatasetsData != '')
        {
            var mtuoaUrl = $("#mtuoaUrl").val()+'/'+barChartLabelsID;

            $.ajax({
                type: "GET",
                url: mtuoaUrl,
                data: "",
                success: function(data) {
                    console.log(data);
                    barChartLabels = data;
                },
                complete: function(){
                    //setTimeout(function(){
                        var winWBarChartDisplayCV = $(window).width();
                        var fontSBarChartDisplayCV = 14;
                        var yAxesRotationBarChartDisplayCV = 0;
                        if(winWBarChartDisplayCV < 768) {
                            fontSBarChartDisplayCV = 12;
                            yAxesRotationBarChartDisplayCV = 45;
                        }
                        else {
                            fontSBarChartDisplayCV = 14;
                            yAxesRotationBarChartDisplayCV = 0;
                        }

                        var areaChartData = {
                            labels  : barChartLabels,
                            datasets: [
                                {
                                    label               : 'On Average',
                                    backgroundColor     : themeColor,
                                    borderColor         : themeColor,
                                    pointRadius          : false,
                                    pointColor          : themeColor,
                                    pointStrokeColor    : 'rgba(60,141,188,1)',
                                    pointHighlightFill  : '#fff',
                                    pointHighlightStroke: 'rgba(60,141,188,1)',
                                    data                : barChartDatasetsData,
                                    borderWidth: borderWidthData
                                }
                            ]
                        }

                        var barChartData = jQuery.extend(true, {}, areaChartData)
                        var temp0 = areaChartData.datasets[0]
                        //var temp1 = areaChartData.datasets[1]
                        barChartData.datasets[0] = temp0
                        //barChartData.datasets[1] = temp0

                        var barChartOptions = {
                            responsive              : true,
                            maintainAspectRatio     : false,
                            datasetFill             : false,
                            indexAxis               : 'y',
                            title: {
                                display: true,
                                text: 'Predicted world population (millions) in 2050'
                            },
                            elements: {
                                bar: {
                                    borderWidth: 2,
                                }
                            },
                            layout: {
                                padding: {
                                    right: 45
                                }
                            },
                            scales: {
                                x: {
                                    beginAtZero: true,
                                    grid: {
                                        display: false,
                                        borderColor: '#A1A1A1'
                                    },
                                    ticks: {
                                        font: {
                                            size: fontSBarChartDisplayCV,
                                            family: 'RobotoMonoLight',
                                            padding: 30
                                        },
                                        color: '#F1F1F1'
                                    }
                                },
                                y: {
                                    beginAtZero: true,
                                    grid: {
                                        display: false,
                                        borderColor: '#A1A1A1'
                                    },
                                    ticks: {
                                        font: {
                                            size: fontSBarChartDisplayCV,
                                            family: 'RobotoMonoLight',
                                            padding: 30
                                        },
                                        color: '#F1F1F1'
                                    }
                                }
                            },
                            plugins: {
                                datalabels: {
                                    display: true,
                                    formatter: (val, context) => (`${val}%`),
                                    anchor: 'end',
                                    align: 'end',
                                    labels: {
                                        value: {
                                            color: '#ffffff'
                                        }
                                    }
                                },
                                legend: {
                                    display: true,
                                    position: 'bottom',
                                    labels: {
                                        font: {
                                            size: fontSBarChartDisplayCV,
                                            family: 'RobotoMonoLight',
                                            padding: 30
                                        },
                                        color: '#ffffff'
                                    }

                                },
                                title: {
                                    display: false,
                                    text: 'Music Types Usage'
                                }
                            }

                        }
                        const ctx = document.getElementById('barChart').getContext('2d');
                        Chart.register(ChartDataLabels);
                        const barChart = new Chart(ctx, {
                            type: 'bar',
                            plugins: [ChartDataLabels],
                            data: barChartData,
                            options: barChartOptions,

                        });
                    //},200);
                }

            });
        }
        else
        {
            //setTimeout(function(){$(".lp_section_13").find("div.chart").html("<span class='naTextfont mtop15rem'>NA</span>")},200);
            /* if($("#section_13_bg_image_preview").attr("src") != '' && $("#section_13_bg_image_preview").attr("src") != undefined)
            {
                var section13BgImagePreview = $("#section_13_bg_image_preview").attr("src");
                $(".lp_section_131415_bg").css({'background': 'url('+ section13BgImagePreview + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
            }
            else
            {
                var folderName = $("#industry_name").val();
                var section13BgImageNames = $("#sec13BGImageNames").val();
                var section13BgImageArray = section13BgImageNames.split(",");
                //console.log("section13BgImageArray"+section13BgImageArray);
                //var section13BgImageArray = ['01.jpg','02.jpg','03.jpg','04.jpg','05.jpg','06.jpg','07.jpg','08.jpg','09.jpg','10.jpg'];
                var section13BgImagePreview = "../public/images/section_13_bg_images/default/"+folderName+"/"+section13BgImageArray[Math.floor(Math.random() * section13BgImageArray.length)];
                //console.log(section13BgImagePreview);
                var d = new Date();
                var n = d.getMilliseconds();
                setTimeout(function(){$(".lp_section_131415_bg").css({'background': 'url('+ section13BgImagePreview +'?bi='+ n + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});},200);
            }
            lpSection13ImgHeight(); */
        }
    }
    else
    {
        //setTimeout(function(){$(".lp_section_13").find("div.chart").html("<span class='naTextfont mtop15rem'>NA</span>")},200);
        /* if($("#section_13_bg_image_preview").attr("src") != '' && $("#section_13_bg_image_preview").attr("src") != undefined)
        {
            var section13BgImagePreview = $("#section_13_bg_image_preview").attr("src");
            $(".lp_section_131415_bg").css({'background': 'url('+ section13BgImagePreview + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
        }
        else
        {
            var folderName = $("#industry_name").val();
            var section13BgImageNames = $("#sec13BGImageNames").val();
            var section13BgImageArray = section13BgImageNames.split(",");
            //console.log("section13BgImageArray"+section13BgImageArray);
            //var section13BgImageArray = ['01.jpg','02.jpg','03.jpg','04.jpg','05.jpg','06.jpg','07.jpg','08.jpg','09.jpg','10.jpg'];
            var section13BgImagePreview = "../public/images/section_13_bg_images/default/"+folderName+"/"+section13BgImageArray[Math.floor(Math.random() * section13BgImageArray.length)];
            //console.log(section13BgImagePreview);
            var d = new Date();
            var n = d.getMilliseconds();
            setTimeout(function(){$(".lp_section_131415_bg").css({'background': 'url('+ section13BgImagePreview +'?bi='+ n + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});},200);
        }
        lpSection13ImgHeight(); */
    }

    //SONIC LOGO USAGE
    if($("#sonic_usage_count").val() != '')
    {
        var sonicUsageCount = $("#sonic_usage_count").val();
        var dataSetsContent = [];
        for(var sui = 0; sui<sonicUsageCount; sui++)
        {
            dataSetsContent.push($("#cv_sonic_usage_legend_number_"+sui).val());
        }

        if(dataSetsContent != ' , ' &&  dataSetsContent != ',')
        {
            setTimeout(function(){
                var pieChartBgColorNames = $("#pieChartSec78BgColor").val();
                if(dataSetsContent[0]==0 && dataSetsContent[1]!=0)
                {
                    var pieChartBgColorArrayB7 = ['#a7a8a9', '#a7a8a9'];
                }
                else
                {
                    var pieChartBgColorArrayB7 = pieChartBgColorNames.split(",");
                }
                //var pieChartBgColorArray = pieChartBgColorNames.split(",");
                var brandCVPieData1 = [
                    { label: "Yes", value: parseInt(dataSetsContent[0])},
                    { label: "No", value: parseInt(dataSetsContent[1]) }
                ];
                var brandCVPie1;

                var brandCVPieUpdate1 = function () {
                    if (brandCVPie1) brandCVPie1.destroy();
                    var div1W = $("#brandCVPieDiv1").width();
                    var div1H = $("#brandCVPieDiv1").height();
                    //var size = Math.min(innerHeight, innerWidth) / 2;
                    var size = Math.min(div1W, div1H);
                    var opt =  {
                        data: {
                            content: brandCVPieData1
                        },
                        size: {
                            pieInnerRadius: "40%",
                            pieOuterRadius: "65%",
                            canvasHeight: size,
                            canvasWidth: size,
                        },
                        labels: {
                            outer: {
                                pieDistance: 10
                            },
                            mainLabel: {
                                font: "RobotoMonoRegular",
                                color: "#F1F1F1",
                                fontSize: 12
                            },
                            percentage: {
                                font: "RobotoMonoRegular",
                                color: "#070706",
                                decimalPlaces: 0,
                                fontSize: 12
                            },
                            value: {
                                font: "RobotoMonoRegular",
                                color: "#070706",
                                fontSize: 12
                            },
                            lines: {
                                enabled: true,
                                style: "straight",
                                color: "#A1A1A1"
                            }
                        },
                        misc: {
                            gradient: {
                                enabled: false,
                                percentage: 100
                            },
                            pieCenterOffset: {
                                x: 0,
                                y: 0
                            },
                            colors: {
                                segments: pieChartBgColorArrayB7,
                                segmentStroke: "#8b8c90"
                            }
                        }
                    };
                    brandCVPie1 = new d3pie("brandCVPie1", opt);
                };

                brandCVPieUpdate1();
                window.addEventListener('resize', brandCVPieUpdate1);
            },500);
        }
        else
        {
            setTimeout(function(){$(".lp_section_07_01").find("div").html("<span class='naTextfont'>NA</span>")},200);
        }
        if($( "#industry_name" ).val() != 0 && $( "#industry_name" ).val() != undefined)
        {
            var suiaUrl = $("#suiaUrl").val()+'/'+$( "#industry_name" ).val();
            var sce8DataSetsContent = [];
            $.ajax({
                type: "GET",
                url: suiaUrl,
                data: "",
                success: function(data) {
                    //console.log("insudtry_yes_avg_data_array"+data['insudtry_yes_avg_data_array']+"--:--insudtry_no_avg_data_array"+data['insudtry_no_avg_data_array']);

                    if(data['insudtry_yes_avg_data_array'] != '' && data['insudtry_yes_avg_data_array'] != undefined && data['insudtry_no_avg_data_array'] != '' && data['insudtry_no_avg_data_array'] != undefined)
                    {
                        var sce8DataSetsYesContent = 0;
                        var sce8DataSetsYesContentCount = data['insudtry_yes_avg_data_array'].length;
                        for(var i = 0; i<data['insudtry_yes_avg_data_array'].length; i++)
                        {
                            sce8DataSetsYesContent = sce8DataSetsYesContent+parseInt(data['insudtry_yes_avg_data_array'][i]);
                        }
                        //console.log("sce8DataSetsYesContent"+sce8DataSetsYesContent);
                        var sce8DataSetsYesContentValue = sce8DataSetsYesContent/sce8DataSetsYesContentCount;
                        sce8DataSetsContent.push(parseFloat(sce8DataSetsYesContentValue).toFixed(2));

                        var sce8DataSetsNoContent = 0;
                        var sce8DataSetsNoContentCount = data['insudtry_no_avg_data_array'].length;
                        for(var b = 0; b<data['insudtry_no_avg_data_array'].length; b++)
                        {
                            sce8DataSetsNoContent = sce8DataSetsNoContent+parseInt(data['insudtry_no_avg_data_array'][b]);
                        }
                        //console.log("sce8DataSetsNoContent"+sce8DataSetsNoContent);
                        var sce8DataSetsNoContentValue = sce8DataSetsNoContent/sce8DataSetsNoContentCount;
                        sce8DataSetsContent.push(parseFloat(sce8DataSetsNoContentValue).toFixed(2));
                        //console.log("sce8DataSetsContent"+sce8DataSetsContent);
                    }
                },
                complete: function(){
                    if(sce8DataSetsContent !='' && sce8DataSetsContent !=undefined)
                    {
                        var pieChartBgColorNames = $("#pieChartSec78BgColor").val()
                        if(sce8DataSetsContent[0]==0 && sce8DataSetsContent[1]!=0)
                        {
                            var pieChartBgColorArrayB8 = ['#a7a8a9', '#a7a8a9'];
                        }
                        else
                        {
                            var pieChartBgColorArrayB8 = pieChartBgColorNames.split(",");
                        }
                        //var pieChartBgColorArray = pieChartBgColorNames.split(",");
                        // Pie Chart 2
                        var brandCVPieData2 = [
                            { label: "Yes", value: parseFloat(sce8DataSetsContent[0]) },
                            { label: "No", value: parseFloat(sce8DataSetsContent[1]) }
                        ];

                        var brandCVPie2;

                        var brandCVPieUpdate2 = function () {
                            if (brandCVPie2) brandCVPie2.destroy();
                            var div2W = $("#brandCVPieDiv2").width();
                            var div2H = $("#brandCVPieDiv2").height();
                            //var size = Math.min(innerHeight, innerWidth) / 2;
                            var size = Math.min(div2W, div2H);
                            var opt =  {
                                data: {
                                    content: brandCVPieData2,
                                },
                                size: {
                                    pieInnerRadius: "40%",
                                    pieOuterRadius: "65%",
                                    canvasHeight: size,
                                    canvasWidth: size,
                                },
                                labels: {
                                    outer: {
                                        pieDistance: 10
                                    },
                                    mainLabel: {
                                        font: "RobotoMonoRegular",
                                        color: "#F1F1F1",
                                        fontSize: 12
                                    },
                                    percentage: {
                                        font: "RobotoMonoRegular",
                                        color: "#070706",
                                        decimalPlaces: 0,
                                        fontSize: 12
                                    },
                                    value: {
                                        font: "RobotoMonoRegular",
                                        color: "#070706",
                                        fontSize: 12
                                    },
                                    lines: {
                                        enabled: true,
                                        style: "straight",
                                        color: "#A1A1A1"
                                    }
                                },
                                misc: {
                                    gradient: {
                                        enabled: false,
                                        percentage: 100
                                    },
                                    pieCenterOffset: {
                                        x: 0,
                                        y: 0
                                    },
                                    colors: {
                                        segments: pieChartBgColorArrayB8,
                                        segmentStroke: "#8b8c90"
                                    }
                                }
                            };
                            brandCVPie2 = new d3pie("brandCVPie2", opt);
                        };
                        brandCVPieUpdate2();
                        window.addEventListener('resize', brandCVPieUpdate2);
                    }
                    else
                    {
                        setTimeout(function(){$(".lp_section_07_02").find("div").html("<span class='naTextfont'>NA</span>")},200);
                    }
                }
            });
        }
    }
    /* else
    {
        setTimeout(function(){$(".lp_section_07_01").find("div").html("<span class='naTextfont'>NA</span>")},200);
        setTimeout(function(){$(".lp_section_07_02").find("div").html("<span class='naTextfont'>NA</span>")},200);
    }  */
}

function kFormatter(num) {
    return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : Math.sign(num)*Math.abs(num)
}
$(window).resize(function(){
    lpSection10ImgHeight();
    lpSection13ImgHeight();
});
lpSection10ImgHeight();
function lpSection10ImgHeight(){
    var windW = $(window).width();
    if(windW >= 992) {
        var sectionHeight = $(".lp_section_10").height();
        $(".lp_section_101112_bg").css("height", sectionHeight);
    }
    else {
        $(".lp_section_101112_bg").removeAttr("style");
    }
}
lpSection13ImgHeight();
function lpSection13ImgHeight(){
    var windW = $(window).width();
    if(windW >= 992) {
        var sectionHeight = $(".lp_section_13").height();
        $(".lp_section_131415_bg").css("height", sectionHeight);
    }
    else {
        $(".lp_section_131415_bg").removeAttr("style");
    }
}

function previewCV(cvID,type)
{
    var ajxUrl = $("#cvPreviewPopupUrl").val()+"/"+cvID;
    var resData = [];
    $.ajax({
        type: "GET",
        url: ajxUrl,
        data: "",
        success: function(data) {
            //console.log(data);
            resData = data;
        },
        complete: function(){

            //MOST POPULAR VIDEOS
            if(resData[8] != '')
            {
                for(var mpvi = 0; mpvi<resData[8].length; mpvi++)
                {
                    if(resData[8][mpvi]['b9_video_link'] != '' && resData[8][mpvi]['b9_video_link'] != null)
                    {
                        var cv_most_popular_video_link = resData[8][mpvi]['b9_video_link'];
                    }
                    else
                    {
                        var cv_most_popular_video_link = "#";
                    }

                    if(resData[8][mpvi]['b9_video_title'] != '' && resData[8][mpvi]['b9_video_title'] != null)
                    {
                        if(resData[8][mpvi]['b9_video_title'].length > 70)
                        {
                            var b9VideoTitle = resData[8][mpvi]['b9_video_title'].substring(0,70)+'....';
                        }
                        else
                        {
                            var b9VideoTitle = resData[8][mpvi]['b9_video_title'];
                        }
                        var cv_most_popular_video_title = b9VideoTitle;
                    }
                    else
                    {
                        var cv_most_popular_video_title = "NA";
                    }

                    mostPopularVideolist +=     '<div>';
                    mostPopularVideolist +=             '<div class="p-1">';
                    mostPopularVideolist +=                 '<div class="video_holder mt-2">';
                    mostPopularVideolist +=                     cv_most_popular_video_link;
                    //mostPopularVideolist +=                      '<iframe class="video_link_area" src="'+cv_most_popular_video_link+'" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
                    //mostPopularVideolist +='<iframe src="https://www.youtube.com/embed/UGW01ttsfpQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
                    mostPopularVideolist +=                 '</div>';
                    mostPopularVideolist +=                 '<div class="clearfix"></div>';
                    mostPopularVideolist +=             '</div>';
                    mostPopularVideolist +=             '<div class="clearfix"></div>';
                    mostPopularVideolist +=             '<span class="video_caption" title="'+resData[8][mpvi]['b9_video_title']+'">'+cv_most_popular_video_title+'</span>';
                    mostPopularVideolist +=     '</div>';

                    setTimeout(function(){
                        if($(window).width() >992)
                        {
                            var lpSection06Inner = $(".lp_sonic_logo_and_video_height").height()+40;
                            var lpSection09Inner = $(".lp_sonic_logo_and_video_height").height()+40;
                            if(lpSection06Inner > lpSection09Inner)
                            {
                                $(".lp_sonic_logo_and_video_height").css("height",lpSection06Inner);
                                getMostPopVideoHeight(lpSection06Inner);
                            }
                            else
                            {
                                $(".lp_sonic_logo_and_video_height").css("height",lpSection09Inner);
                                getMostPopVideoHeight(lpSection09Inner);
                            }
                        }
                        function getMostPopVideoHeight(currentHeight){
                            var displayCVMostPopVideoHeight = $(".previewPublishMostPopVideos").height();
                            var ptopDiff = currentHeight - displayCVMostPopVideoHeight;
                            var ptop = ptopDiff/2;
                            //$(".displayCVMostPopVideoPDiv").css("margin-top",ptop-60);
                        }
                    }, 1000);
                }
                setTimeout(function(){
                    $(".video_holder").find("iframe").attr("width","");
                    $(".video_holder").find("iframe").attr("height","");
                    $(".video_holder").find("iframe").addClass("video_link_area");
                    $('.previewPublishMostPopVideos').slick(
                        {
                            dots: true,
                            autoplay: false,
                            autoplaySpeed: 5000,
                            pauseOnHover: true,
                        }
                    );
                    $('.previewPublishMostPopVideos').on('beforeChange', function(event, slick, currentSlide, nextSlide){
                        var current = $(slick.$slides[currentSlide]);
                        current.html(current.html());

                    });
                    /* $(".previewPublishMostPopVideos").slick({
                        dots: true,
                        infinite: true,
                        variableWidth: true,
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        autoplay: true,
                        autoplaySpeed: 5000,
                        pauseOnHover: true,

                        responsive: [
                        {
                            breakpoint: 1024,
                            settings: {
                                slidesToShow: 1,
                                slidesToScroll: 1
                            }
                        },
                        {
                            breakpoint: 800,
                            settings: {
                                slidesToShow: 1,
                                slidesToScroll: 1
                            }
                        },
                        {
                            breakpoint: 600,
                            settings: {
                                slidesToShow: 1,
                                slidesToScroll: 1
                            }
                        },
                        {
                            breakpoint: 480,
                            settings: {
                                slidesToShow: 1,
                                slidesToScroll: 1
                            }
                        }]
                    }); */
                },500);
            }
            else
            {
                var mostPopularVideolist = '<div><div class="p-4"><div class="video_holder naTextfont">NA</div></div></div>';
            }

            BootstrapDialog.show({
                id: "previewCV",
                title: "Preview Snapshot",
                //type: getDialogType("PRIMARY"),
                size: BootstrapDialog.SIZE_WIDE,
                message: function () {
                    var $message = $('<div></div>');
                    var html = '';

                    html += '<section class="content">';
                    html +=     '<div class="container-fluid" style="padding: 0px;">';
                    html +=         '<div class="lp_body" style="margin-bottom: 0px;">';
                    html +=             '<div class="lpbody_col" style="padding: 0px;">';
                    html +=                 '<div class="row">';
                    html +=                     '<div class="lp_section_01_col">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_01_inner" style="background-color: #ffffff;  border: 2px solid '+themeColor+';">';
                    html +=                                 '<div class="lp_section_01">';
                    html +=                                     '<a target="_blank" href="#" title="">';
                    html +=                                         '<div class=""  style="margin: auto;max-width: 1600px; width: 100%; max-height: 410px; overflow: hidden; background-color: #ffffff;">';
                    html +=                                             '<div class="brand_logo">';
                    if(resData[0]['cv_banner_desktop'] != '' && resData[0]['cv_banner_desktop'] != null )
                    {
                        html +=                                             '<picture>';
                        html +=                                                 '<source media="(min-width:1024px)" srcset="public/images/cv_banners/desktop/'+resData[0]['cv_banner_desktop']+'">';
                        html +=                                                 '<source media="(min-width:640px)" srcset="public/images/cv_banners/ipad/'+resData[0]['cv_banner_ipad']+'">';
                        html +=                                                 '<img src="public/images/cv_banners/mobile/'+resData[0]['cv_banner_mobile']+'" alt=""  class="logo">';
                        html +=                                             '</picture>';
                    }
                    else
                    {
                        html +=                                             '<picture>';
                        html +=                                                 '<source media="(min-width:1024px)" srcset="public/images/cv_banners/no-banner-1600x410.jpg">';
                        html +=                                                 '<source media="(min-width:640px)" srcset="public/images/cv_banners/no-banner-1024x262.jpg">';
                        html +=                                                 '<img src="public/images/cv_banners/no-banner-640x260.jpg" alt=""  class="logo">';
                        html +=                                             '</picture>';
                    }
                    html +=                                             '</div>';
                    html +=                                         '</div>';
                    html +=                                     '</a>';
                    html +=                                 '<div class="clearfix"></div>';
                    /* html +=                                     '<div class="lp_floating_menu">';
                    html +=                                         '<div class="inner">';
                    html +=                                             '<a target="_blank" class="link"><img src="public/images/lp_icon_switch.png" alt="" class="img"></a>';
                    html +=                                             '<a target="_blank" class="link"><img src="public/images/lp_icon_share.png" alt="" class="img"></a>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                     '</div>'; */
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    if(resData[0]['cv_name'] != '' && resData[0]['cv_name'] != null)
                    {
                        html +=                                 '<div class="brand_logoDiv_captionDiv"><h4 class="lp_section_01_caption">'+resData[0]['cv_name']+'</h4></div>';
                    }
                    else
                    {
                        html +=                                 '<div class="brand_logoDiv_captionDiv"><h4 class="lp_section_01_caption">NA</h4></div>';
                    }
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                    /*html +=                     '<div class="lp_section_03_col mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_03_inner border-dotted">';

                     if(resData[3]!= '' && resData[3]!= null)
                    {
                        if(resData[3]['b4_title'] != '' && resData[3]['b4_title'] != null)
                        {
                            html +=                                 '<h1 class="lp_section_title">'+resData[3]['b4_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                 '<h1 class="lp_section_title">About Me</h1>';
                        }
                        if(resData[3]['b4_description'] != '' && resData[3]['b4_description'] != null)
                        {
                            html +=                                 '<div class="lp_section_04">'+resData[3]['b4_description']+'</div>';
                        }
                        else
                        {
                            html +=                                 '<div class="lp_section_04"><span class="naTextfont">NA</span></div>';
                        }
                    }
                    else
                    {
                        html +=                                 '<h1 class="lp_section_title">About Me</h1>';
                        html +=                                 '<div class="lp_section_04"><span class="naTextfont">NA</span></div>';
                    }
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                     '<div class="lp_section_5 mt-3">';
                    html +=                                         '<ul class="list">';
                    if(resData[4] != '')
                    {
                        for(var smi = 0; smi<resData[4].length; smi++)
                        {
                            html +=                                     '<li><a href="'+resData[2]['b5_link']+'" target="_blank"><span class="link"><img src="public/images/social_media_icons/'+resData[4][smi]['b5_icon_name']+'" alt=""></span></a></li>';
                        }
                    }
                    else
                    {
                        html +=                                         '<li><span class="naTextfont">NA</span></li>';
                    }
                    //html +=                                         smlist;
                    html +=                                         '</ul>';
                    html +=                                     '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="lp_section_03_col mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_03_inner border-dotted">';

                    if(resData[3]!= '' && resData[3]!= null && resData[3]['b4_key_findings'] != '' && resData[3]['b4_key_findings'] != null)
                    {
                        html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                        html +=                                 '<div class="lp_section_04">'+resData[3]['b4_key_findings']+'</div>';
                    }
                    else
                    {
                        html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                        html +=                                 '<div class="lp_section_04"><span class="naTextfont">NA</span></div>';
                    }

                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>'; */

                    if(resData[3]!= '' && resData[3]!= null)
                    {
                        if(resData[3]['b4_description'] != '' && resData[3]['b4_description'] != null && resData[3]['b4_key_findings'] != '' && resData[3]['b4_key_findings'] != null)
                        {
                            html +=                     '<div class="lp_section_03_col aboutContent mt-3">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_03_inner border-dotted">';
                            html +=                                 '<h1 class="lp_section_title">About Me</h1>';
                            html +=                                 '<div class="lp_section_04">'+resData[3]['b4_description']+'</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<div class="lp_section_5 mt-3">';
                            html +=                                         '<ul class="list">';
                            if(resData[4] != '')
                            {
                                for(var smi = 0; smi<resData[4].length; smi++)
                                {
                                    html +=                                     '<li><a href="'+resData[2]['b5_link']+'" target="_blank"><span class="link"><img src="public/images/social_media_icons/'+resData[4][smi]['b5_icon_name']+'" alt=""></span></a></li>';
                                }
                            }
                            html +=                                         '</ul>';
                            html +=                                     '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';

                            html +=                     '<div class="lp_section_03_col keyFindingContent mt-3">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_03_inner border-dotted">';
                            html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                            html +=                                 '<div class="lp_section_04">'+resData[3]['b4_key_findings']+'</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';
                        }
                        else
                        {
                            if(resData[3]['b4_description'] != '' && resData[3]['b4_description'] != null && (resData[3]['b4_key_findings'] == '' || resData[3]['b4_key_findings'] == null))
                            {
                                html +=                     '<div class="lp_section_03_col mt-3" style="width:100%">';
                                html +=                         '<div class="p-1">';
                                html +=                             '<div class="lp_section_03_inner border-dotted">';
                                html +=                                 '<h1 class="lp_section_title">About Me</h1>';
                                html +=                                 '<div class="lp_section_04">'+resData[3]['b4_description']+'</div>';
                                html +=                                     '<div class="clearfix"></div>';
                                html +=                                     '<div class="lp_section_5 mt-3">';
                                html +=                                         '<ul class="list">';
                                if(resData[4] != '')
                                {
                                    for(var smi = 0; smi<resData[4].length; smi++)
                                    {
                                        html +=                                     '<li><a href="'+resData[2]['b5_link']+'" target="_blank"><span class="link"><img src="public/images/social_media_icons/'+resData[4][smi]['b5_icon_name']+'" alt=""></span></a></li>';
                                    }
                                }
                                html +=                                         '</ul>';
                                html +=                                     '</div>';
                                html +=                                 '<div class="clearfix"></div>';
                                html +=                             '</div>';
                                html +=                             '<div class="clearfix"></div>';
                                html +=                         '</div>';
                                html +=                         '<div class="clearfix"></div>';
                                html +=                     '</div>';
                            }

                            if(resData[3]['b4_description'] == '' || resData[3]['b4_description'] == null && (resData[3]['b4_key_findings'] != '' && resData[3]['b4_key_findings'] != null))
                            {
                                html +=                     '<div class="lp_section_03_col mt-3" style="width:100%">';
                                html +=                         '<div class="p-1">';
                                html +=                             '<div class="lp_section_03_inner border-dotted">';
                                html +=                                 '<h1 class="lp_section_title">Key Findings</h1>';
                                html +=                                 '<div class="lp_section_04">'+resData[3]['b4_key_findings']+'</div>';
                                html +=                                 '<div class="clearfix"></div>';
                                html +=                             '</div>';
                                html +=                             '<div class="clearfix"></div>';
                                html +=                         '</div>';
                                html +=                         '<div class="clearfix"></div>';
                                html +=                     '</div>';
                            }
                        }
                    }

                    // Genres
                    if(resData[1]!= '' && resData[1]!= null && resData[17]!= '' && resData[17]!= null)
                    {
                        html +=                     '<div class="lp_section_02_col mt-3">';
                        html +=                         '<div class="p-1">';
                        html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                        html +=                                 '<div class="lp_section_03">';
                        html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<ul class="list mtlist mt-3">';
                        var top3GenreArr = resData[17];
                        for(var i= 0; i<top3GenreArr.length; i++)
                        {
                            html +=                                     '<li>';
                            html +=                                         '<div class="icon_hol_parent"><span class="icon_hol"><img src="public/images/favourite_music_genres/thumbnail/'+top3GenreArr[i].split('_')[0]+'.png"></span></div>';
                            html +=                                         '<h4 class="lp_section_03_caption mt-3" style="text-transform: capitalize;">'+top3GenreArr[i].split('_')[0]+'</h4>';
                            html +=                                     '</li>';
                        }
                        html +=                                     '</ul>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>';
                        // Overall Ranking
                        html +=                     '<div class="lp_section_02_col mt-3">';
                        html +=                         '<div class="p-1">';
                        html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                        html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';
                        html +=                                 '<div class="lp_section_02_count">';
                        html +=                                     '<div class="lp_section_02_count_inner brandCV_OverallRanking">';
                        html +=                                         '<span class="count">'+resData[1]['sr_no'];

                        if(resData[1]['sr_no'] !='' && resData[1]['sr_no'] != null && resData[16]['sr_no'] !='' && resData[16]['sr_no'] != null)
                        {
                            //alert($("#ranking").val()+"||"+$("#pRanking").val());
                            if(parseInt(resData[1]['sr_no']) > parseInt(resData[16]['sr_no']))
                            {

                                html +=                                         '<sup class="sup_counts">';
                                html +=                                             '<img src="public/images/lp-section-02-minus-red.png">'+(parseInt(resData[1]['sr_no'])-parseInt(resData[16]['sr_no']))+' <img src="public/images/lp-section-02-arrowdown-red.png" alt="">';
                                html +=                                         '</sup>';
                                html +=                                     '</span>';
                                html +=                                     '<div class="clearfix"></div>';
                                html +=                                     '<span class="overallRYearCompared">';
                                html +=                                         'Ranking in Best Audio Brands '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                html +=                                     '</span>';
                            }
                            else if(parseInt(resData[1]['sr_no']) < parseInt(resData[16]['sr_no']))
                            {
                                html +=                                         '<sup class="sup_counts">';
                                html +=                                             '<img src="public/images/lp-section-02-plus.png">'+(parseInt(resData[16]['sr_no'])-parseInt(resData[1]['sr_no']))+' <img src="public/images/lp-section-02-arrow.png" alt="">';
                                html +=                                         '</sup>';
                                html +=                                     '</span>';
                                html +=                                     '<div class="clearfix"></div>';
                                html +=                                     '<span class="overallRYearCompared">';
                                html +=                                         'Ranking in Best Audio Brands '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                html +=                                     '</span>';
                            }
                            else if(parseInt(resData[1]['sr_no']) == parseInt(resData[16]['sr_no']))
                            {
                                html +=                                         '<sup class="sup_counts">';
                                html +=                                             '<img src="public/images/lp-section-02-same.png" alt="" style="height: 18px;">';
                                html +=                                         '</sup>';
                                html +=                                     '</span>';
                                html +=                                     '<div class="clearfix"></div>';
                                html +=                                     '<span class="overallRYearCompared">';
                                html +=                                         'No position change in the Best Audio Brands Ranking '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                html +=                                     '</span>';
                            }
                        }
                        else
                        {
                            html +=                                         '<sup class="sup_counts">';
                            html +=                                             '<img src="public/images/lp-section-02-new.png" alt="">';
                            html +=                                         '</sup>';
                            html +=                                     '</span>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<span class="overallRYearCompared">';
                            html +=                                         'New Entry to the Best Audio Brands Ranking '+resData[0]['cv_year'];
                            html +=                                     '</span>';
                        }
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>';
                        html +=                     '<div class="clearfix"></div>';
                        html +=                 '</div>';
                    }
                    else
                    {
                        if(resData[1]!= '' && resData[1]!= null && (resData[17] == '' || resData[17]== null))
                        {
                            // Overall Ranking
                            html +=                     '<div class="lp_section_02_col mt-3" style="width:100%;">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                            html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';
                            html +=                                 '<div class="lp_section_02_count">';
                            html +=                                     '<div class="lp_section_02_count_inner brandCV_OverallRanking">';
                            html +=                                         '<span class="count">'+resData[1]['sr_no'];

                            if(resData[1]['sr_no'] !='' && resData[1]['sr_no'] != null && resData[16]['sr_no'] !='' && resData[16]['sr_no'] != null)
                            {
                                //alert($("#ranking").val()+"||"+$("#pRanking").val());
                                if(parseInt(resData[1]['sr_no']) > parseInt(resData[16]['sr_no']))
                                {

                                    html +=                                         '<sup class="sup_counts">';
                                    html +=                                             '<img src="public/images/lp-section-02-minus-red.png">'+(parseInt(resData[1]['sr_no'])-parseInt(resData[16]['sr_no']))+' <img src="public/images/lp-section-02-arrowdown-red.png" alt="">';
                                    html +=                                         '</sup>';
                                    html +=                                     '</span>';
                                    html +=                                     '<div class="clearfix"></div>';
                                    html +=                                     '<span class="overallRYearCompared">';
                                    html +=                                         'Ranking in Best Audio Brands '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                    html +=                                     '</span>';
                                }
                                else if(parseInt(resData[1]['sr_no']) < parseInt(resData[16]['sr_no']))
                                {
                                    html +=                                         '<sup class="sup_counts">';
                                    html +=                                             '<img src="public/images/lp-section-02-plus.png">'+(parseInt(resData[16]['sr_no'])-parseInt(resData[1]['sr_no']))+' <img src="public/images/lp-section-02-arrow.png" alt="">';
                                    html +=                                         '</sup>';
                                    html +=                                     '</span>';
                                    html +=                                     '<div class="clearfix"></div>';
                                    html +=                                     '<span class="overallRYearCompared">';
                                    html +=                                         'Ranking in Best Audio Brands '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                    html +=                                     '</span>';
                                }
                                else if(parseInt(resData[1]['sr_no']) == parseInt(resData[16]['sr_no']))
                                {
                                    html +=                                         '<sup class="sup_counts">';
                                    html +=                                             '<img src="public/images/lp-section-02-same.png" alt="" style="height: 18px;">';
                                    html +=                                         '</sup>';
                                    html +=                                     '</span>';
                                    html +=                                     '<div class="clearfix"></div>';
                                    html +=                                     '<span class="overallRYearCompared">';
                                    html +=                                         'No position change in the Best Audio Brands Ranking '+resData[0]['cv_year']+', compared to '+resData[16]['cv_year'];
                                    html +=                                     '</span>';
                                }
                            }
                            else
                            {
                                html +=                                         '<sup class="sup_counts">';
                                html +=                                             '<img src="public/images/lp-section-02-new.png" alt="">';
                                html +=                                         '</sup>';
                                html +=                                     '</span>';
                                html +=                                     '<div class="clearfix"></div>';
                                html +=                                     '<span class="overallRYearCompared">';
                                html +=                                         'New Entry to the Best Audio Brands Ranking '+resData[0]['cv_year'];
                                html +=                                     '</span>';
                            }
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';
                            html +=                     '<div class="clearfix"></div>';
                            html +=                 '</div>';
                        }

                        if((resData[1] == '' || resData[1]== null) && resData[1] != '' && resData[1]!= null)
                        {
                            html +=                     '<div class="lp_section_02_col mt-3" style="width:100%;">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                            html +=                                 '<div class="lp_section_03">';
                            html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<ul class="list mtlist mt-3">';
                            var top3GenreArr = resData[17];
                            for(var i= 0; i<top3GenreArr.length; i++)
                            {
                                html +=                                     '<li>';
                                html +=                                         '<div class="icon_hol_parent"><span class="icon_hol"><img src="public/images/favourite_music_genres/thumbnail/'+top3GenreArr[i].split('_')[0]+'.png"></span></div>';
                                html +=                                         '<h4 class="lp_section_03_caption mt-3" style="text-transform: capitalize;">'+top3GenreArr[i].split('_')[0]+'</h4>';
                                html +=                                     '</li>';
                            }
                            html +=                                     '</ul>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';
                        }
                    }

                    /* html +=                     '<div class="lp_section_02_col mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                    html +=                                 '<div class="lp_section_03">';
                    if(resData[2] != '')
                    {
                        if(resData[2][0]['b3_title'] != '' && resData[2][0]['b3_title'] != null)
                        {
                            html +=                                     '<h1 class="lp_section_title">'+resData[2][0]['b3_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                        }
                    }
                    else
                    {
                        html +=                                     '<h1 class="lp_section_title">Favorite Music Genres</h1>';
                    }
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                     '<ul class="list mtlist mt-3"></ul>';
                    if(resData[15] != '' && resData[15] != null)
                    {
                        var mtUrl = $("#mtUrl").val()+'/'+resData[15];

                        $.ajax({
                            type: "GET",
                            url: mtUrl,
                            data: "",
                            success: function(mtlistdata) {
                                //console.log(mtlistdata);
                                //$message.append(data);
                                //cvMusicTaste = data;

                                $(".mtlist").append(mtlistdata.replace(/..\/public\/images/g, 'public/images'));
                            }
                        });
                    }
                    else
                    {
                        setTimeout(function(){
                            $(".mtlist").append('<li><span class="naTextfont">NA</span></li>');
                        },200);
                    }
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="lp_section_02_col mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_02_inner border-dotted lp_genres_and_ranking_height">';
                    if(resData[1] != '' && resData[1] != null)
                    {
                        html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';

                        if(resData[1]['sr_no'] != '' && resData[1]['sr_no'] != null)
                        {
                            if(resData[1]['sr_no']<10 && resData[1]['sr_no']!=0)
                            {
                                html +=                                 '<div class="lp_section_02_count"><div class="lp_section_02_count_inner brandCV_OverallRanking" style="text-align:center;"><span class="count">0'+resData[1]['sr_no']+'</span></div></div>';
                            }
                            else
                            {
                                html +=                                 '<div class="lp_section_02_count"><div class="lp_section_02_count_inner brandCV_OverallRanking" style="text-align:center;"><span class="count">'+resData[1]['sr_no']+'</span></div></div>';
                            }
                        }
                        else
                        {
                            html +=                                 '<div class="lp_section_02_count"><span class="naTextfont">NA</span></div>';
                        }
                    }
                    else
                    {
                        html +=                                 '<h1 class="lp_section_title">Best in Audio Brands Ranking</h1>';
                        html +=                                 '<div class="lp_section_02_count"><span class="naTextfont">NA</span></div>';
                    }

                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="clearfix"></div>';
                    html +=                 '</div>'; */
                    html +=                 '<div class="clearfix"></div>';
                    /* html +=                 '<div class="row mt-3">';
                    html +=                     '<div class="lp_section_06_col lp_section_6">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_06_inner border-dotted lp_sonic_logo_and_video_height">';
                    if(resData[5] != '' && resData[5] != null)
                    {
                        if(resData[5]['b6_title'] != '' && resData[5]['b6_title'] != null)
                        {
                            html +=                         '<div class="lp_section_title_060708"><h1 class="lp_section_title">'+resData[5]['b6_title']+'</h1></div>';
                        }
                        else
                        {
                            html +=                         '<div class="lp_section_title_060708"><h1 class="lp_section_title">Sonic Logo</h1></div>';
                        }
                        if(resData[5]['b6_name'] != '' && resData[5]['b6_name'] != null)
                        {
                            html +=                         '<div class="mt-2 audio-icon-holder">';
                            html +=                             '<span class="audio-player-button" onclick=playPauseAudio("sec6Audio")></span> <div class="audio-title">NO SONIC LOGO</div>';
                            html +=                             '<div class="audio-player">';
                            html +=                                 '<audio id="sec6Audio">';
                            html +=                                     '<source src="public/audios/cv_audios/'+resData[5]['b6_name']+'">';
                            html +=                                     'Your browser does not support the audio element.';
                            html +=                                 '</audio>';
                            html +=                             '</div>';
                            html +=                         '</div>';
                        }
                        else
                        {
                            html +=                         '<div class="mt-2 audio-icon-holder"><span class="naTextfont">NA</span></div>';
                        }
                    }
                    else
                    {
                        html +=                             '<div class="lp_section_title_060708"><h1 class="lp_section_title">Sonic Logo</h1></div>';
                        html +=                             '<div class="mt-2 audio-icon-holder"><span class="naTextfont">NA</span></div>';
                    }
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                                 '<div class="lp_section_07_col lp_section_7">';
                    html +=                                     '<div class="p-1">';
                    html +=                                         '<div class="lp_section_07_inner mt-4">';
                    if(resData[6] != '' && resData[6] != null)
                    {
                        if(resData[6][0]['b7_title'] != '' && resData[6][0]['b7_title'] != null)
                        {
                            html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">'+resData[6][0]['b7_title']+'</h1></div>';
                        }
                        else
                        {
                            html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage</h1></div>';
                        }
                    }
                    else
                    {
                        html +=                                         '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage</h1></div>';
                    }
                    html +=                                             '<div class="mt-4">';
                    html +=                                                 '<!-- DONUT CHART -->';
                    html +=                                                 '<div class="lp_section_07_01" style="text-align:center;">';
                    // html +=                                                     '<div class="col-md-12">';
                    // html +=                                                         '<canvas id="pieChart" class="custPieChart"></canvas>';
                    // html +=                                                     '</div>';
                    html +=                                                     '<div class="col-md-12">';
                    html +=                                                         '<div id="brandCVPieDiv1">';
                    html +=                                                             '<div id="brandCVPie1" style="width: 250px; height: 250px;"></div>';
                    html +=                                                     '</div>';
                    html +=                                                     '</div>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';

                    html +=                                 '<div class="lp_section_08_col lp_section_8">';
                    html +=                                     '<div class="p-1 lp_divSonicLogoUsage">';
                    html +=                                         '<div class="lp_section_08_inner mt-4">';
                    html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">SONIC LOGO USAGE (INDUSTRY AVERAGE)</h1></div>';
                    // if(resData[7] != '')
                    // {
                    //     if(resData[7][0]['b8_title'] !='' && resData[7][0]['b8_title'] != null)
                    //     {
                    //         html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title">'+resData[7][0]['b8_title']+'</h1></div>';
                    //     }
                    //     else
                    //     {
                    //         html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title">NA</h1></div>';
                    //     }
                    // }
                    // else
                    // {
                    //     html +=                                         '<div class="lp_section_title_060708"><h1 class="lp_section_title">NA</h1></div>';
                    // }
                    html +=                                             '<div class="mt-4">';
                    html +=                                                 '<!-- DONUT CHART -->';
                    html +=                                                 '<div class="lp_section_07_02" style="text-align:center;">';
                    // html +=                                                     '<div class="col-md-12">';
                    // html +=                                                         '<canvas id="donutChart0" class="donut0"></canvas>';
                    // html +=                                                     '</div>';
                    html +=                                                     '<div class="col-md-12">';
                    html +=                                                         '<div id="brandCVPieDiv2">';
                    html +=                                                             '<div id="brandCVPie2" style="width: 250px; height: 250px;"></div>';
                    html +=                                                         '</div>';
                    html +=                                                     '</div>';
                    html +=                                                     '<div class="clearfix"></div>';
                    html +=                                                 '</div>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="lp_section_09_col lp_section_9">';
                    html +=                         '<div class="p-1">';

                    html +=                             '<div class="lp_section_09_inner border-dotted lp_sonic_logo_and_video_height">';
                    if(resData[8] != '' && resData[8] != null)
                    {
                        if(resData[8][0]['b9_title'] != '' && resData[8][0]['b9_title'] != null)
                        {
                            html +=                         '<h1 class="lp_section_title">'+resData[8][0]['b9_title']+'</h1>';
                        }
                        else
                        {
                            html +=                         '<h1 class="lp_section_title">Most Popular Videos</h1>';
                        }
                    }
                    else
                    {
                        html +=                             '<h1 class="lp_section_title">Most Popular Videos</h1>';
                    }
                    html +=                                 '<div class="displayCVMostPopVideoPDiv">';
                    html +=                                     '<section class="previewPublishMostPopVideos slider mt-2">';
                    html +=                                         mostPopularVideolist;
                    html +=                                     '</section>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="clearfix"></div>';
                    html +=                 '</div>'; */


                    if(resData[6] != '' && resData[6] != null && resData[8] != '' && resData[8] != null)
                    {
                        //html +=                 '<div class="row mt-3">';
                        html +=                     '<div class="lp_section_06_col mt-3">';
                        html +=                         '<div class="p-1">';
                        html +=                             '<div class="lp_section_06_inner border-dotted lp_sonic_logo_and_video_height">';
                        html +=                         '<div class="lp_section_title_060708"><h1 class="lp_section_title">Sonic Logo</h1></div>';
                        if(resData[5] != '' && resData[5] != null)
                        {
                            html +=                         '<div class="mt-2 audio-icon-holder">';
                            html +=                             '<span class="audio-player-button" onclick=playPauseAudio("sec6Audio")></span> <div class="audio-title">Main Sonic Logo</div>';
                            html +=                             '<div class="audio-player">';
                            html +=                                 '<audio id="sec6Audio">';
                            html +=                                     '<source src="public/audios/cv_audios/'+resData[5]['b6_name']+'">';
                            html +=                                     'Your browser does not support the audio element.';
                            html +=                                 '</audio>';
                            html +=                             '</div>';
                            html +=                         '</div>';
                        }
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                                 '<div class="lp_section_07_col lp_section_7">';
                        html +=                                     '<div class="p-1">';
                        html +=                                         '<div class="lp_section_07_inner mt-4">';
                        html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage</h1></div>';
                        html +=                                             '<div class="mt-4">';
                        html +=                                                 '<!-- DONUT CHART -->';
                        html +=                                                 '<div class="lp_section_07_01" style="text-align:center;">';
                        html +=                                                     '<div class="col-md-12">';
                        html +=                                                         '<div id="brandCVPieDiv1">';
                        html +=                                                             '<div id="brandCVPie1" style="width: 250px; height: 250px;"></div>';
                        html +=                                                     '</div>';
                        html +=                                                     '</div>';
                        html +=                                                 '</div>';
                        html +=                                                 '<div class="clearfix"></div>';
                        html +=                                             '</div>';
                        html +=                                             '<div class="clearfix"></div>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';

                        html +=                                 '<div class="lp_section_08_col lp_section_8">';
                        html +=                                     '<div class="p-1 lp_divSonicLogoUsage">';
                        html +=                                         '<div class="lp_section_08_inner mt-4">';
                        html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage (Industry Average)</h1></div>';
                        html +=                                             '<div class="mt-4">';
                        html +=                                                 '<!-- DONUT CHART -->';
                        html +=                                                 '<div class="lp_section_07_02" style="text-align:center;">';
                        html +=                                                     '<div class="col-md-12">';
                        html +=                                                         '<div id="brandCVPieDiv2">';
                        html +=                                                             '<div id="brandCVPie2" style="width: 250px; height: 250px;"></div>';
                        html +=                                                         '</div>';
                        html +=                                                     '</div>';
                        html +=                                                     '<div class="clearfix"></div>';
                        html +=                                                 '</div>';
                        html +=                                                 '<div class="clearfix"></div>';
                        html +=                                             '</div>';
                        html +=                                             '<div class="clearfix"></div>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>';

                        html +=                     '<div class="lp_section_09_col mt-3">';
                        html +=                         '<div class="p-1">';

                        html +=                             '<div class="lp_section_09_inner border-dotted lp_sonic_logo_and_video_height">';
                        html +=                                 '<div><h1 class="lp_section_title">Most Popular Videos</h1></div>';
                        html +=                                 '<div class="displayCVMostPopVideoPDiv">';
                        html +=                                     '<section class="previewPublishMostPopVideos slider mt-2">';
                        html +=                                         mostPopularVideolist;
                        html +=                                     '</section>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>';

                        html +=                     '<div class="clearfix"></div>';
                        //html +=                 '</div>';
                    }
                    else
                    {
                        if(resData[6] != '' && resData[6] != null && (resData[8] == '' || resData[8] == null))
                        {
                            //html +=                 '<div class="row mt-3">';
                            html +=                     '<div class="lp_section_06_col mt-3" style="width: 100%;">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_06_inner border-dotted lp_sonic_logo_and_video_height">';
                            html +=                         '<div class="lp_section_title_060708"><h1 class="lp_section_title">Sonic Logo</h1></div>';
                            if(resData[5] != '' && resData[5] != null)
                            {
                                html +=                         '<div class="mt-2 audio-icon-holder">';
                                html +=                             '<span class="audio-player-button" onclick=playPauseAudio("sec6Audio")></span> <div class="audio-title">Main Sonic Logo</div>';
                                html +=                             '<div class="audio-player">';
                                html +=                                 '<audio id="sec6Audio">';
                                html +=                                     '<source src="public/audios/cv_audios/'+resData[5]['b6_name']+'">';
                                html +=                                     'Your browser does not support the audio element.';
                                html +=                                 '</audio>';
                                html +=                             '</div>';
                                html +=                         '</div>';
                            }
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                                 '<div class="lp_section_07_col lp_section_7">';
                            html +=                                     '<div class="p-1">';
                            html +=                                         '<div class="lp_section_07_inner mt-4">';
                            html +=                                     '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage</h1></div>';
                            html +=                                             '<div class="mt-4">';
                            html +=                                                 '<!-- DONUT CHART -->';
                            html +=                                                 '<div class="lp_section_07_01" style="text-align:center;">';
                            html +=                                                     '<div class="col-md-12">';
                            html +=                                                         '<div id="brandCVPieDiv1">';
                            html +=                                                             '<div id="brandCVPie1" style="width: 250px; height: 250px;"></div>';
                            html +=                                                     '</div>';
                            html +=                                                     '</div>';
                            html +=                                                 '</div>';
                            html +=                                                 '<div class="clearfix"></div>';
                            html +=                                             '</div>';
                            html +=                                             '<div class="clearfix"></div>';
                            html +=                                         '</div>';
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';

                            html +=                                 '<div class="lp_section_08_col lp_section_8">';
                            html +=                                     '<div class="p-1 lp_divSonicLogoUsage">';
                            html +=                                         '<div class="lp_section_08_inner mt-4">';
                            html +=                                             '<div class="lp_section_title_060708"><h1 class="lp_section_title sonicLogoUsagesTitle">Sonic Logo Usage (Industry Average)</h1></div>';
                            html +=                                             '<div class="mt-4">';
                            html +=                                                 '<!-- DONUT CHART -->';
                            html +=                                                 '<div class="lp_section_07_02" style="text-align:center;">';
                            html +=                                                     '<div class="col-md-12">';
                            html +=                                                         '<div id="brandCVPieDiv2">';
                            html +=                                                             '<div id="brandCVPie2" style="width: 250px; height: 250px;"></div>';
                            html +=                                                         '</div>';
                            html +=                                                     '</div>';
                            html +=                                                     '<div class="clearfix"></div>';
                            html +=                                                 '</div>';
                            html +=                                                 '<div class="clearfix"></div>';
                            html +=                                             '</div>';
                            html +=                                             '<div class="clearfix"></div>';
                            html +=                                         '</div>';
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';
                            html +=                     '<div class="clearfix"></div>';
                            //html +=                 '</div>';
                        }

                        if((resData[6] == '' || resData[6] == null) && resData[8] != '' && resData[8] != null)
                        {
                            //html +=                 '<div class="row mt-3">';
                            html +=                     '<div class="lp_section_09_col mt-3" style="width: 100%;">';
                            html +=                         '<div class="p-1">';

                            html +=                             '<div class="lp_section_09_inner border-dotted lp_sonic_logo_and_video_height">';
                            html +=                                 '<div><h1 class="lp_section_title">Most Popular Videos</h1></div>';
                            html +=                                 '<div class="displayCVMostPopVideoPDiv">';
                            html +=                                     '<section class="previewPublishMostPopVideos slider mt-2">';
                            html +=                                         mostPopularVideolist;
                            html +=                                     '</section>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>';

                            html +=                     '<div class="clearfix"></div>';
                            //html +=                 '</div>';
                        }
                    }
                    html +=                 '<div class="clearfix"></div>';

                    /* html +=                 '<div class="mt-3 lp_section_101112 row">';
                    //html +=                   '<div class="row">';
                    html +=                     '<div class="lp_section_10_col lp_section_10">';
                    html +=                         '<div class="p-1">';

                    if(resData[11].length <= 10)
                    {
                        html +=                             '<div class="lp_section_101112_inner lp_section_1011 border-dotted lp_aDayInMyLife_socialMediaS_height_10Rec lp_aDayInMyLife_socialMediaS_height_10_Rec">';
                    }
                    else
                    {
                        html +=                             '<div class="lp_section_101112_inner lp_section_1011 border-dotted lp_aDayInMyLife_socialMediaS_height_15Rec">';
                    }
                    html +=                                 '<div class="inner_section lp_sec10_title">';
                    if(resData[9] != '' && resData[9] != null)
                    {
                        if(resData[9][0]['b10_title'] != '' && resData[9][0]['b10_title'] != null)
                        {
                            html +=                             '<h1 class="lp_section_title">'+resData[9][0]['b10_title']+'</h1>';
                        }
                        else
                        {
                            html +=                             '<h1 class="lp_section_title">A Day In My Life</h1>';
                        }
                    }
                    else
                    {
                        html +=                                 '<h1 class="lp_section_title">A Day In My Life</h1>';
                    }
                    // html +=                                     '<div class="mt-4">';
                    // html +=                                         '<canvas id="donutChart1" class="donut1"></canvas>';
                    // html +=                                         '<div id="legendsDisplayCV" class="legendsDisplayInDiv"></div>';
                    // html +=                                     '</div>';
                    html +=                                     '<div class="mt-4">';
                    html +=                                         '<div id="brandCVPieDiv3" class="brandCVPie3WH brandCVPieVAlign">';
                    html +=                                             '<div id="brandCVPie3"></div>';
                    html +=                                         '</div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                //    html +=                   '<div class="col-md-6 lp_section_101112_bg">';
                //     html +=                         '<div class="clearfix"></div>';
                //     html +=                     '</div>';
                //     html +=                     '<div class="clearfix"></div>';
                //     html +=                     '</div>';

                    html +=                     '<div class="lp_section_1112_col">';
                    html +=                         '<div class="lp_section_1112">';
                    html +=                             '<div class="p-1">';

                    if(resData[11].length <= 10)
                    {
                        html +=                             '<div class="lp_section_101112_inner lp_section_1012 border-dotted lp_aDayInMyLife_socialMediaS_height_10Rec lp_aDayInMyLife_socialMediaS_height_10_Rec">';
                    }
                    else
                    {
                        html +=                             '<div class="lp_section_101112_inner lp_section_1012 border-dotted lp_aDayInMyLife_socialMediaS_height_15Rec">';
                    }
                    html +=                                     '<div class="lp_section_11 hide">';
                    html +=                                         '<div class="inner_section">';
                    if(resData[10] != '' && resData[10] != null)
                    {
                        if(resData[10][0]['b11_title'] != '' && resData[10][0]['b11_title'] != null)
                        {
                            html +=                                     '<h1 class="lp_section_title">'+resData[10][0]['b11_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                     '<h1 class="lp_section_title">Money Spent On Audio</h1>';
                        }
                    }
                    else
                    {
                        html +=                                         '<h1 class="lp_section_title">Money Spent On Audio</h1>';
                    }
                    html +=                                             '<div class="lp_section_11_count mt-2" title="Compared to Industry Average">';
                    if(resData[10] != '' && resData[10] != null)
                    {
                        if(resData[10][0]['b11_number'] != '' && resData[10][0]['b11_number'] != null)
                        {
                            var msoaUrl = $("#msoaUrl").val()+'/'+resData[0]['industry_id'];
                            var b11Avg = '';
                            $.ajax({
                                type: "GET",
                                url: msoaUrl,
                                data: "",
                                success: function(data) {
                                    //console.log("b11_sum_data_array"+data);
                                    if(data != '' && data != undefined)
                                    {
                                        var b11AllCvData = 0;
                                        for(var i = 0; i<data.length; i++)
                                        {
                                            b11AllCvData = b11AllCvData+parseInt(data[i]);
                                        }
                                        b11Avg = resData[10][0]['b11_number'] * 100 / b11AllCvData;
                                    }
                                },
                                complete: function(){
                                    //console.log("b11Avg"+b11Avg);
                                    if(b11Avg != '' && b11Avg != undefined)
                                    {
                                        //$("#msoaUrl").text(parseFloat(b11Avg).toFixed(2)+"%");
                                        $(".lp_section_11_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="msoaUrl">'+parseFloat(b11Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                    }
                                    else
                                    {
                                        //$("#msoaUrl").text("NA");
                                        $(".lp_section_11_count").html('<span class="naTextfont" id="b11Avg">NA</span>');
                                    }
                                }
                            });
                            //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="msoaUrl"></span>';
                        }
                        else
                        {
                            html +=                                         '<span class="naTextfont">NA</span>';
                        }
                    }
                    else
                    {
                        html +=                                             '<span class="naTextfont">NA</span>';
                    }

                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="lp_section_12">';
                    html +=                                         '<div class="inner_section">';
                    if(resData[11] != '' && resData[11] != null)
                    {
                        if(resData[11][0]['b12_title'] != '' && resData[11][0]['b12_title'] != null)
                        {
                            html +=                                     '<h1 class="lp_section_title">'+resData[11][0]['b12_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                     '<h1 class="lp_section_title">Social Media Stats</h1>';
                        }
                    }
                    else
                    {
                        html +=                                         '<h1 class="lp_section_title">Social Media Stats</h1>';
                    }
                    html +=                                             '<div class="lp_section_12_list mt-4">';
                    html +=                                                 '<ul class="list">';
                    if(resData[11] != '' && resData[11] != null)
                    {
                        for(var smsi = 0; smsi<resData[11].length; smsi++)
                        {
                            if(resData[11][smsi]['b12_link_txt'] != '' && resData[11][smsi]['b12_link_txt'] != null)
                            {
                                if(resData[11][smsi]['b12_link_txt'].length > 50)
                                {
                                    var b12LinkTxt = resData[11][smsi]['b12_link_txt'].substring(0,50)+'....';
                                }
                                else
                                {
                                    var b12LinkTxt = resData[11][smsi]['b12_link_txt'];
                                }
                            }
                            else
                            {
                                var b12LinkTxt = '';
                            }
                            html +=                                             '<li title="'+kFormatter(resData[11][smsi]['b12_link_number'])+' '+resData[11][smsi]['b12_link_txt']+'"><table class="stats_table"><tr><td><span class="stats_icon"><img src="public/images/social_media_icons/'+resData[11][smsi]['b12_icon_name']+'" alt=""></span></td> <td><span class="stats_count">'+kFormatter(resData[11][smsi]['b12_link_number'])+'</span></td> <td><span class="stats_txt">'+b12LinkTxt+'</span></td></tr></table></li>';
                        }
                    }
                    else
                    {
                        html +=                                                 '<li><span class="naTextfont">NA</span></li>';
                    }
                    //html +=                                                   smslist;
                    html +=                                                 '</ul>';
                    html +=                                                 '<div class="clearfix"></div>';
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';
                    html +=                     '<div class="clearfix"></div>';
                    html +=                 '</div>';


                    html +=                 '<div class="clearfix"></div>'; */

                    if(resData[12] != '' && resData[12] != null && resData[13] != '' && resData[13] != null && resData[14] != '' && resData[14] != null)
                    {
                        //html +=                 '<div class="row">';
                        /* html +=                     '<div class="col-md-6 lp_section_131415_bg">';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>'; */
                        html +=                     '<div class="lp_section_13_col lp_section_13 mt-3">';
                        html +=                         '<div class="p-1">';
                        html +=                             '<div class="lp_section_131415_inner border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                        html +=                                 '<div class="inner_section lp_section_14_body">';
                        html +=                                     '<h1 class="lp_section_title">Music Types Usage (On Average)</h1>';
                        html +=                                     '<div>';
                        html +=                                         '<div class="chart naTextfont naTextfont-fullWidth">';
                        html +=                                             '<canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                                 '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        html +=                     '</div>';

                        html +=                     '<div class="lp_section_1415_col mt-3">';
                        html +=                         '<div class="lp_section_1415">';
                        html +=                             '<div class="p-1">';
                        html +=                                 '<div class="lp_section_1315 border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                        html +=                                     '<div class="lp_section_14">';
                        html +=                                         '<div class="inner_section lp_section_14_body">';
                        html +=                                             '<h1 class="lp_section_title">Music Expenditure (Per Year)</h1>';
                        html +=                                             '<div class="lp_section_14_count" title="Compared to Industry Average">';
                            if(resData[13] != '' && resData[13] != null)
                            {
                                if(resData[13][0]['b14_number'] != '' && resData[13][0]['b14_number'] != null)
                                {
                                    var mepvUrl = $("#mepyUrl").val()+'/'+resData[0]['industry_id'];
                                    var b14Avg = '', b14indAvg = '', b14indPublishedCVSum = '', b14indPublishedCVCount = '';
                                    $.ajax({
                                        type: "GET",
                                        url: mepvUrl,
                                        data: "",
                                        success: function(data) {
                                            //console.log("b14_sum_data_array"+data);
                                            if(data != '' && data != undefined)
                                            {
                                                /* var b14AllCvData = 0;
                                                for(var i = 0; i<data.length; i++)
                                                {
                                                    b14AllCvData = b14AllCvData+parseInt(data[i]);
                                                } */
                                                b14indPublishedCVSum = data.split("_")[0];
                                                console.log("b14indPublishedCVSum"+b14indPublishedCVSum);
                                                b14indPublishedCVCount = data.split("_")[1];
                                                console.log("b14indPublishedCVCount"+b14indPublishedCVCount);
                                                b14indAvg = b14indPublishedCVSum / b14indPublishedCVCount;
                                                console.log("b14indAvg"+parseFloat(b14indAvg).toFixed());
                                                // b14Avg = resData[13][0]['b14_number'] * 100 / b14AllCvData;
                                                b14Avg = (resData[13][0]['b14_number'] - parseFloat(b14indAvg).toFixed()) / parseFloat(b14indAvg).toFixed()*100;

                                            }
                                        },
                                        complete: function(){
                                            //console.log("b14Avg"+b14Avg);
                                            if(b14Avg != '' && b14Avg != undefined)
                                            {
                                                //$(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg">'+parseFloat(b14Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                if(Math.sign(b14Avg) > 0)
                                                {
                                                    $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    // $("#sec14Val").val("plus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                }
                                                else if(Math.sign(b14Avg) < 0)
                                                {
                                                    $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    // $("#sec14Val").val("minus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                }
                                                else
                                                {
                                                    $(".lp_section_14_count").html('<span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    // $("#sec14Val").val("equal_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                }
                                            }

                                        }
                                    });
                                    //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg"></span>';
                                }

                            }
                        html +=                                             '</div>';
                        html +=                                             '<div class="clearfix"></div>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';

                        html +=                                     '<div class="lp_section_15">';
                        html +=                                         '<div class="inner_section lp_section_14_body">';
                        html +=                                             '<h1 class="lp_section_title">Music Expenditure (Per Video)</h1>';
                        html +=                                             '<div class="lp_section_15_count" title="Compared to Industry Average">';
                            if(resData[14] !='' && resData[14] != null)
                            {
                                if(resData[14][0]['b15_number'] != '' && resData[14][0]['b15_number'] != null)
                                {
                                    var mepvUrl = $("#mepvUrl").val()+'/'+resData[0]['industry_id'];
                                    var b15Avg = '', b15indAvg = '', b15indPublishedCVSum = '', b15indPublishedCVCount = '';
                                    $.ajax({
                                        type: "GET",
                                        url: mepvUrl,
                                        data: "",
                                        success: function(data) {
                                            //console.log("b15_sum_data_array"+data);
                                            if(data != '' && data != undefined)
                                            {
                                                /* var b15AllCvData = 0;
                                                for(var i = 0; i<data.length; i++)
                                                {
                                                    b15AllCvData = b15AllCvData+parseInt(data[i]);
                                                } */
                                                b15indPublishedCVSum = data.split("_")[0];
                                                // console.log("b15indPublishedCVSum"+b15indPublishedCVSum);
                                                b15indPublishedCVCount = data.split("_")[1];
                                                // console.log("b15indPublishedCVCount"+b15indPublishedCVCount);
                                                b15indAvg = b15indPublishedCVSum / b15indPublishedCVCount;
                                                // console.log("b15indAvg"+parseFloat(b15indAvg).toFixed());
                                                b15Avg = (resData[14][0]['b15_number'] - parseFloat(b15indAvg).toFixed()) / parseFloat(b15indAvg).toFixed()*100;
                                                //b15Avg = resData[14][0]['b15_number'] * 100 / b15AllCvData;
                                            }
                                        },
                                        complete: function(){
                                            //console.log("b15Avg"+b15Avg);
                                            if(b15Avg != '' && b15Avg != undefined)
                                            {
                                                //$(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg">'+parseFloat(b15Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                if(Math.sign(b15Avg) > 0)
                                                {
                                                    $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    $("#sec15Val").val("plus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                }
                                                else if(Math.sign(b15Avg) < 0)
                                                {
                                                    $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    $("#sec15Val").val("minus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                }
                                                else
                                                {
                                                    $(".lp_section_15_count").html('<span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    $("#sec15Val").val("equal_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                }
                                            }

                                        }
                                    });
                                    //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg"></span>';
                                }
                            }
                        html +=                                             '</div>';
                        html +=                                         '</div>';
                        html +=                                         '<div class="clearfix"></div>';
                        html +=                                     '</div>';
                        html +=                                     '<div class="clearfix"></div>';
                        html +=                                     '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                        html +=                                 '</div>';
                        html +=                                 '<div class="clearfix"></div>';
                        html +=                             '</div>';
                        html +=                             '<div class="clearfix"></div>';
                        html +=                         '</div>';
                        html +=                         '<div class="clearfix"></div>';
                        //html +=                     '</div>';
                    }
                    else
                    {
                        if(resData[12] != '' && resData[12] != null && (resData[13] == '' || resData[13] == null || resData[14] == '' || resData[14] == null))
                        {
                            //html +=                 '<div class="row">';
                            /* html +=                     '<div class="col-md-6 lp_section_131415_bg">';
                            html +=                         '<div class="clearfix"></div>';
                            html +=                     '</div>'; */
                            html +=                     '<div class="lp_section_13_col lp_section_13 mt-3" style="width: 100%">';
                            html +=                         '<div class="p-1">';
                            html +=                             '<div class="lp_section_131415_inner border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                            html +=                                 '<div class="inner_section lp_section_14_body">';
                            html +=                                     '<h1 class="lp_section_title">Music Types Usage (On Average)</h1>';
                            html +=                                     '<div>';
                            html +=                                         '<div class="chart naTextfont naTextfont-fullWidth">';
                            html +=                                             '<canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>';
                            html +=                                         '</div>';
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                                 '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            //html +=                     '</div>';
                        }

                        if((resData[12] == '' || resData[12] == null) && resData[13] != '' && resData[13] != null && resData[14] != '' && resData[14] != null)
                        {
                            //html +=                 '<div class="row">';

                            html +=                     '<div class="lp_section_1415_col mt-3" style="width: 100%">';
                            html +=                         '<div class="lp_section_1415">';
                            html +=                             '<div class="p-1">';
                            html +=                                 '<div class="lp_section_1315 border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                            html +=                                     '<div class="lp_section_14">';
                            html +=                                         '<div class="inner_section lp_section_14_body">';
                            html +=                                             '<h1 class="lp_section_title">Music Expenditure (Per Year)</h1>';
                            html +=                                             '<div class="lp_section_14_count" title="Compared to Industry Average">';
                                if(resData[13] != '' && resData[13] != null)
                                {
                                    if(resData[13][0]['b14_number'] != '' && resData[13][0]['b14_number'] != null)
                                    {
                                        var mepvUrl = $("#mepyUrl").val()+'/'+resData[0]['industry_id'];
                                        var b14Avg = '', b14indAvg = '', b14indPublishedCVSum = '', b14indPublishedCVCount = '';
                                        $.ajax({
                                            type: "GET",
                                            url: mepvUrl,
                                            data: "",
                                            success: function(data) {
                                                //console.log("b14_sum_data_array"+data);
                                                if(data != '' && data != undefined)
                                                {
                                                    /* var b14AllCvData = 0;
                                                    for(var i = 0; i<data.length; i++)
                                                    {
                                                        b14AllCvData = b14AllCvData+parseInt(data[i]);
                                                    } */
                                                    b14indPublishedCVSum = data.split("_")[0];
                                                    console.log("b14indPublishedCVSum"+b14indPublishedCVSum);
                                                    b14indPublishedCVCount = data.split("_")[1];
                                                    console.log("b14indPublishedCVCount"+b14indPublishedCVCount);
                                                    b14indAvg = b14indPublishedCVSum / b14indPublishedCVCount;
                                                    console.log("b14indAvg"+parseFloat(b14indAvg).toFixed());
                                                    // b14Avg = resData[13][0]['b14_number'] * 100 / b14AllCvData;
                                                    b14Avg = (resData[13][0]['b14_number'] - parseFloat(b14indAvg).toFixed()) / parseFloat(b14indAvg).toFixed()*100;

                                                }
                                            },
                                            complete: function(){
                                                //console.log("b14Avg"+b14Avg);
                                                if(b14Avg != '' && b14Avg != undefined)
                                                {
                                                    //$(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg">'+parseFloat(b14Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    if(Math.sign(b14Avg) > 0)
                                                    {
                                                        $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        // $("#sec14Val").val("plus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                    }
                                                    else if(Math.sign(b14Avg) < 0)
                                                    {
                                                        $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        // $("#sec14Val").val("minus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                    }
                                                    else
                                                    {
                                                        $(".lp_section_14_count").html('<span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        // $("#sec14Val").val("equal_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                                    }
                                                }

                                            }
                                        });
                                        //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg"></span>';
                                    }

                                }
                            html +=                                             '</div>';
                            html +=                                             '<div class="clearfix"></div>';
                            html +=                                         '</div>';
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';

                            html +=                                     '<div class="lp_section_15">';
                            html +=                                         '<div class="inner_section lp_section_14_body">';
                            html +=                                             '<h1 class="lp_section_title">Music Expenditure (Per Video)</h1>';
                            html +=                                             '<div class="lp_section_15_count" title="Compared to Industry Average">';
                                if(resData[14] !='' && resData[14] != null)
                                {
                                    if(resData[14][0]['b15_number'] != '' && resData[14][0]['b15_number'] != null)
                                    {
                                        var mepvUrl = $("#mepvUrl").val()+'/'+resData[0]['industry_id'];
                                        var b15Avg = '', b15indAvg = '', b15indPublishedCVSum = '', b15indPublishedCVCount = '';
                                        $.ajax({
                                            type: "GET",
                                            url: mepvUrl,
                                            data: "",
                                            success: function(data) {
                                                //console.log("b15_sum_data_array"+data);
                                                if(data != '' && data != undefined)
                                                {
                                                    /* var b15AllCvData = 0;
                                                    for(var i = 0; i<data.length; i++)
                                                    {
                                                        b15AllCvData = b15AllCvData+parseInt(data[i]);
                                                    } */
                                                    b15indPublishedCVSum = data.split("_")[0];
                                                    // console.log("b15indPublishedCVSum"+b15indPublishedCVSum);
                                                    b15indPublishedCVCount = data.split("_")[1];
                                                    // console.log("b15indPublishedCVCount"+b15indPublishedCVCount);
                                                    b15indAvg = b15indPublishedCVSum / b15indPublishedCVCount;
                                                    // console.log("b15indAvg"+parseFloat(b15indAvg).toFixed());
                                                    b15Avg = (resData[14][0]['b15_number'] - parseFloat(b15indAvg).toFixed()) / parseFloat(b15indAvg).toFixed()*100;
                                                    //b15Avg = resData[14][0]['b15_number'] * 100 / b15AllCvData;
                                                }
                                            },
                                            complete: function(){
                                                //console.log("b15Avg"+b15Avg);
                                                if(b15Avg != '' && b15Avg != undefined)
                                                {
                                                    //$(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg">'+parseFloat(b15Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                    if(Math.sign(b15Avg) > 0)
                                                    {
                                                        $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        $("#sec15Val").val("plus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                    }
                                                    else if(Math.sign(b15Avg) < 0)
                                                    {
                                                        $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        $("#sec15Val").val("minus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                    }
                                                    else
                                                    {
                                                        $(".lp_section_15_count").html('<span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                                        $("#sec15Val").val("equal_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                                    }
                                                }

                                            }
                                        });
                                        //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg"></span>';
                                    }
                                }
                            html +=                                             '</div>';
                            html +=                                         '</div>';
                            html +=                                         '<div class="clearfix"></div>';
                            html +=                                     '</div>';
                            html +=                                     '<div class="clearfix"></div>';
                            html +=                                     '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                            html +=                                 '</div>';
                            html +=                                 '<div class="clearfix"></div>';
                            html +=                             '</div>';
                            html +=                             '<div class="clearfix"></div>';
                            html +=                         '</div>';
                            html +=                         '<div class="clearfix"></div>';
                            //html +=                     '</div>';
                        }
                    }
                    /* html +=                 '<div class="row">';
                    // html +=                     '<div class="col-md-6 lp_section_131415_bg">';
                    // html +=                         '<div class="clearfix"></div>';
                    // html +=                     '</div>';
                    html +=                     '<div class="lp_section_13_col lp_section_13 mt-3">';
                    html +=                         '<div class="p-1">';
                    html +=                             '<div class="lp_section_131415_inner border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                    html +=                                 '<div class="inner_section lp_section_14_body">';
                    if(resData[12] != '' && resData[12] != null)
                    {
                        if(resData[12][0]['b13_title'] !='' && resData[12][0]['b13_title'] !=null)
                        {
                            html +=                             '<h1 class="lp_section_title">'+resData[12][0]['b13_title']+'</h1>';
                        }
                        else
                        {
                            html +=                             '<h1 class="lp_section_title">MUSIC TYPES USAGE (ON AVERAGE)</h1>';
                        }
                    }
                    else
                    {
                        html +=                                 '<h1 class="lp_section_title">MUSIC TYPES USAGE (ON AVERAGE)</h1>';
                    }

                    html +=                                     '<div>';
                    html +=                                         '<div class="chart naTextfont naTextfont-fullWidth">';
                    html +=                                             '<canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                                 '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>';

                    html +=                     '<div class="lp_section_1415_col mt-3">';
                    html +=                         '<div class="lp_section_1415">';
                    html +=                             '<div class="p-1">';
                    html +=                                 '<div class="lp_section_1315 border-dotted lp_music_typeUsages_perYear_perVideo_height">';
                    html +=                                     '<div class="lp_section_14">';
                    html +=                                         '<div class="inner_section lp_section_14_body">';
                    if(resData[13] != '' && resData[13] != null)
                    {
                        if(resData[13][0]['b14_title'] != '' && resData[13][0]['b14_title'] != null)
                        {
                            html +=                                     '<h1 class="lp_section_title">'+resData[13][0]['b14_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                     '<h1 class="lp_section_title">Music Expenditure (Per Year)</h1>';
                        }
                    }
                    else
                    {
                        html +=                                         '<h1 class="lp_section_title">Music Expenditure (Per Year)</h1>';
                    }
                    html +=                                             '<div class="lp_section_14_count" title="Compared to Industry Average">';
                    if(resData[13] != '' && resData[13] != null)
                    {
                        if(resData[13][0]['b14_number'] != '' && resData[13][0]['b14_number'] != null)
                        {
                            var mepvUrl = $("#mepyUrl").val()+'/'+resData[0]['industry_id'];
                            var b14Avg = '', b14indAvg = '', b14indPublishedCVSum = '', b14indPublishedCVCount = '';
                            $.ajax({
                                type: "GET",
                                url: mepvUrl,
                                data: "",
                                success: function(data) {
                                    //console.log("b14_sum_data_array"+data);
                                    if(data != '' && data != undefined)
                                    {
                                        // var b14AllCvData = 0;
                                        // for(var i = 0; i<data.length; i++)
                                        // {
                                        //     b14AllCvData = b14AllCvData+parseInt(data[i]);
                                        // }
                                        b14indPublishedCVSum = data.split("_")[0];
                                        //console.log("b14indPublishedCVSum"+b14indPublishedCVSum);
                                        b14indPublishedCVCount = data.split("_")[1];
                                        //console.log("b14indPublishedCVCount"+b14indPublishedCVCount);
                                        b14indAvg = b14indPublishedCVSum / b14indPublishedCVCount;
                                        //console.log("b14indAvg"+parseFloat(b14indAvg).toFixed());
                                        // b14Avg = resData[13][0]['b14_number'] * 100 / b14AllCvData;
                                        b14Avg = (resData[13][0]['b14_number'] - parseFloat(b14indAvg).toFixed()) / parseFloat(b14indAvg).toFixed()*100;

                                    }
                                },
                                complete: function(){
                                    //console.log("b14Avg"+b14Avg);
                                    if(b14Avg != '' && b14Avg != undefined)
                                    {
                                        //$(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg">'+parseFloat(b14Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                        if(Math.sign(b14Avg) > 0)
                                        {
                                            $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            // $("#sec14Val").val("plus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                        }
                                        else if(Math.sign(b14Avg) < 0)
                                        {
                                            $(".lp_section_14_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            // $("#sec14Val").val("minus_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                        }
                                        else
                                        {
                                            $(".lp_section_14_count").html('<span class="count" id="mepyAvg">'+parseFloat(Math.abs(b14Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            // $("#sec14Val").val("equal_"+parseFloat(Math.abs(b14Avg)).toFixed(2));
                                        }
                                    }

                                }
                            });
                            //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepyAvg"></span>';
                        }

                    }
                    html +=                                             '</div>';
                    html +=                                             '<div class="clearfix"></div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';

                    html +=                                     '<div class="lp_section_15">';
                    html +=                                         '<div class="inner_section lp_section_14_body">';
                    if(resData[14] !='' && resData[14] != null)
                    {
                        if(resData[14][0]['b15_title'] != '' && resData[14][0]['b15_title'] != null)
                        {
                            html +=                                     '<h1 class="lp_section_title">'+resData[14][0]['b15_title']+'</h1>';
                        }
                        else
                        {
                            html +=                                     '<h1 class="lp_section_title">Music Expenditure (Per Video)</h1>';
                        }
                    }
                    else
                    {
                        html +=                                         '<h1 class="lp_section_title">Music Expenditure (Per Video)</h1>';
                    }
                    html +=                                             '<div class="lp_section_15_count" title="Compared to Industry Average">';
                    if(resData[14] !='' && resData[14] != null)
                    {
                        if(resData[14][0]['b15_number'] != '' && resData[14][0]['b15_number'] != null)
                        {
                            var mepvUrl = $("#mepvUrl").val()+'/'+resData[0]['industry_id'];
                            var b15Avg = '', b15indAvg = '', b15indPublishedCVSum = '', b15indPublishedCVCount = '';
                            $.ajax({
                                type: "GET",
                                url: mepvUrl,
                                data: "",
                                success: function(data) {
                                    //console.log("b15_sum_data_array"+data);
                                    if(data != '' && data != undefined)
                                    {
                                        // var b15AllCvData = 0;
                                        // for(var i = 0; i<data.length; i++)
                                        // {
                                        //     b15AllCvData = b15AllCvData+parseInt(data[i]);
                                        // }
                                        b15indPublishedCVSum = data.split("_")[0];
                                        // console.log("b15indPublishedCVSum"+b15indPublishedCVSum);
                                        b15indPublishedCVCount = data.split("_")[1];
                                        // console.log("b15indPublishedCVCount"+b15indPublishedCVCount);
                                        b15indAvg = b15indPublishedCVSum / b15indPublishedCVCount;
                                        // console.log("b15indAvg"+parseFloat(b15indAvg).toFixed());
                                        b15Avg = (resData[14][0]['b15_number'] - parseFloat(b15indAvg).toFixed()) / parseFloat(b15indAvg).toFixed()*100;
                                        //b15Avg = resData[14][0]['b15_number'] * 100 / b15AllCvData;
                                    }
                                },
                                complete: function(){
                                    //console.log("b15Avg"+b15Avg);
                                    if(b15Avg != '' && b15Avg != undefined)
                                    {
                                        //$(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg">'+parseFloat(b15Avg).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                        if(Math.sign(b15Avg) > 0)
                                        {
                                            $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrow.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            $("#sec15Val").val("plus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                        }
                                        else if(Math.sign(b15Avg) < 0)
                                        {
                                            $(".lp_section_15_count").html('<img src="public/images/lp-growing-arrowdown.png" alt=""><span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            $("#sec15Val").val("minus_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                        }
                                        else
                                        {
                                            $(".lp_section_15_count").html('<span class="count" id="mepvAvg">'+parseFloat(Math.abs(b15Avg)).toFixed(2)+'% <span class="astrick_count_txt">*</span></span>');
                                            $("#sec15Val").val("equal_"+parseFloat(Math.abs(b15Avg)).toFixed(2));
                                        }
                                    }

                                }
                            });
                            //html +=                                             '<img src="public/images/lp-growing-arrow.png" alt=""> <span class="count" id="mepvAvg"></span>';
                        }
                    }
                    html +=                                             '</div>';
                    html +=                                         '</div>';
                    html +=                                         '<div class="clearfix"></div>';
                    html +=                                     '</div>';
                    html +=                                     '<div class="clearfix"></div>';
                    html +=                                     '<span class="astrick_txt"><span>*</span>Compared to Industry Average</span>';

                    html +=                                 '</div>';
                    html +=                                 '<div class="clearfix"></div>';
                    html +=                             '</div>';
                    html +=                             '<div class="clearfix"></div>';
                    html +=                         '</div>';
                    html +=                         '<div class="clearfix"></div>';
                    html +=                     '</div>'; */

                    html +=                     '<div class="clearfix"></div>';
                    html +=                 '</div>';
                    html +=                 '<div class="clearfix"></div>';
                    html +=             '</div>';
                    html +=             '<div class="clearfix"></div>';
                    html +=         '</div>';
                    html +=         '<div class="clearfix"></div>';
                    html += '</section>';

                    $message.append(html);

                    //SONIC LOGO USAGE
                    var sonicUsageCount = resData[6].length;
                    var dataSetsContent = [];
                    for(var sui = 0; sui<sonicUsageCount; sui++)
                    {
                        dataSetsContent.push(resData[6][sui]['b7_number']);
                    }

                    if(dataSetsContent != ' , ' &&  dataSetsContent != ',')
                    {
                        setTimeout(function(){
                            var pieChartBgColorNames = $("#pieChartSec78BgColor").val();
                            if(dataSetsContent[0]==0 && dataSetsContent[1]!=0)
                            {
                                var pieChartBgColorArrayB7 = ['#a7a8a9', '#a7a8a9'];
                            }
                            else
                            {
                                var pieChartBgColorArrayB7 = pieChartBgColorNames.split(",");
                            }
                            //var pieChartBgColorArray = pieChartBgColorNames.split(",");
                            var brandCVPieData1 = [
                                { label: "Yes", value: parseInt(dataSetsContent[0])},
                                { label: "No", value: parseInt(dataSetsContent[1]) }
                            ];
                            var brandCVPie1;
                            var brandCVPieUpdate1 = function () {
                                if (brandCVPie1) brandCVPie1.destroy();
                                var div1W = $("#brandCVPieDiv1").width();
                                var div1H = $("#brandCVPieDiv1").height();
                                //var size = Math.min(innerHeight, innerWidth) / 2;
                                var size = Math.min(div1W, div1H);
                                var opt =  {
                                    data: {
                                        content: brandCVPieData1
                                    },
                                    size: {
                                        pieInnerRadius: "40%",
                                        pieOuterRadius: "65%",
                                        canvasHeight: size,
                                        canvasWidth: size,
                                    },
                                    labels: {
                                        outer: {
                                            pieDistance: 10
                                        },
                                        mainLabel: {
                                            font: "RobotoMonoMedium",
                                            color: "#F1F1F1",
                                            fontSize: 12
                                        },
                                        percentage: {
                                            font: "RobotoMonoMedium",
                                            color: "#070706",
                                            decimalPlaces: 0,
                                            fontSize: 12
                                        },
                                        value: {
                                            font: "RobotoMonoMedium",
                                            color: "#070706",
                                            fontSize: 12
                                        },
                                        lines: {
                                            enabled: true,
                                            style: "straight",
                                            color: "#A1A1A1"
                                        }
                                    },
                                    misc: {
                                        gradient: {
                                            enabled: false,
                                            percentage: 100
                                        },
                                        pieCenterOffset: {
                                            x: 0,
                                            y: 0
                                        },
                                        colors: {
                                            segments: pieChartBgColorArrayB7,
                                            segmentStroke: "#8b8c90"
                                        }
                                    }
                                };
                                brandCVPie1 = new d3pie("brandCVPie1", opt);
                            };

                            brandCVPieUpdate1();
                            window.addEventListener('resize', brandCVPieUpdate1);
                        },500);


                        if(resData[0]['industry_id'] != '' && resData[0]['industry_id'] != null)
                        {
                            var suiaUrl = $("#suiaUrl").val()+'/'+resData[0]['industry_id'];

                            var sce8DataSetsContent = [];
                            $.ajax({
                                type: "GET",
                                url: suiaUrl,
                                data: "",
                                success: function(data) {
                                    //console.log("insudtry_yes_avg_data_array"+data['insudtry_yes_avg_data_array']+"--:--insudtry_no_avg_data_array"+data['insudtry_no_avg_data_array']);

                                    if(data['insudtry_yes_avg_data_array'] != '' && data['insudtry_yes_avg_data_array'] != undefined && data['insudtry_no_avg_data_array'] != '' && data['insudtry_no_avg_data_array'] != undefined)
                                    {
                                        var sce8DataSetsYesContent = 0;
                                        var sce8DataSetsYesContentCount = data['insudtry_yes_avg_data_array'].length;
                                        for(var i = 0; i<data['insudtry_yes_avg_data_array'].length; i++)
                                        {
                                            sce8DataSetsYesContent = sce8DataSetsYesContent+parseInt(data['insudtry_yes_avg_data_array'][i]);
                                        }
                                        //console.log("sce8DataSetsYesContent"+sce8DataSetsYesContent);
                                        var sce8DataSetsYesContentValue = sce8DataSetsYesContent/sce8DataSetsYesContentCount;
                                        sce8DataSetsContent.push(parseFloat(sce8DataSetsYesContentValue).toFixed(2));

                                        var sce8DataSetsNoContent = 0;
                                        var sce8DataSetsNoContentCount = data['insudtry_no_avg_data_array'].length;
                                        for(var b = 0; b<data['insudtry_no_avg_data_array'].length; b++)
                                        {
                                            sce8DataSetsNoContent = sce8DataSetsNoContent+parseInt(data['insudtry_no_avg_data_array'][b]);
                                        }
                                        //console.log("sce8DataSetsNoContent"+sce8DataSetsNoContent);
                                        var sce8DataSetsNoContentValue = sce8DataSetsNoContent/sce8DataSetsNoContentCount;
                                        sce8DataSetsContent.push(parseFloat(sce8DataSetsNoContentValue).toFixed(2));
                                        //console.log("sce8DataSetsContent"+sce8DataSetsContent);
                                    }
                                },
                                complete: function(){
                                    if(sce8DataSetsContent !='' && sce8DataSetsContent !=undefined)
                                    {
                                        var pieChartBgColorNames = $("#pieChartSec78BgColor").val()
                                        if(sce8DataSetsContent[0]==0 && sce8DataSetsContent[1]!=0)
                                        {
                                            var pieChartBgColorArrayB8 = ['#a7a8a9', '#a7a8a9'];
                                        }
                                        else
                                        {
                                            var pieChartBgColorArrayB8 = pieChartBgColorNames.split(",");
                                        }
                                        var pieChartBgColorArray = pieChartBgColorNames.split(",");
                                        // Pie Chart 2
                                        var brandCVPieData2 = [
                                            { label: "Yes", value: parseFloat(sce8DataSetsContent[0]) },
                                            { label: "No", value: parseFloat(sce8DataSetsContent[1]) }
                                        ];

                                        var brandCVPie2;

                                        var brandCVPieUpdate2 = function () {
                                            if (brandCVPie2) brandCVPie2.destroy();
                                            var div2W = $("#brandCVPieDiv2").width();
                                            var div2H = $("#brandCVPieDiv2").height();
                                            //var size = Math.min(innerHeight, innerWidth) / 2;
                                            var size = Math.min(div2W, div2H);
                                            var opt =  {
                                                data: {
                                                    content: brandCVPieData2,
                                                },
                                                size: {
                                                    pieInnerRadius: "40%",
                                                    pieOuterRadius: "65%",
                                                    canvasHeight: size,
                                                    canvasWidth: size,
                                                },
                                                labels: {
                                                    outer: {
                                                        pieDistance: 10
                                                    },
                                                    mainLabel: {
                                                        font: "RobotoMonoMedium",
                                                        color: "#F1F1F1",
                                                        fontSize: 12
                                                    },
                                                    percentage: {
                                                        font: "RobotoMonoMedium",
                                                        color: "#070706",
                                                        decimalPlaces: 0,
                                                        fontSize: 12
                                                    },
                                                    value: {
                                                        font: "RobotoMonoMedium",
                                                        color: "#070706",
                                                        fontSize: 12
                                                    },
                                                    lines: {
                                                        enabled: true,
                                                        style: "straight",
                                                        color: "#A1A1A1"
                                                    }
                                                },
                                                misc: {
                                                    gradient: {
                                                        enabled: false,
                                                        percentage: 100
                                                    },
                                                    pieCenterOffset: {
                                                        x: 0,
                                                        y: 0
                                                    },
                                                    colors: {
                                                        segments: pieChartBgColorArrayB8,
                                                        segmentStroke: "#8b8c90"
                                                    }
                                                }
                                            };
                                            brandCVPie2 = new d3pie("brandCVPie2", opt);
                                        };
                                        brandCVPieUpdate2();
                                        window.addEventListener('resize', brandCVPieUpdate2);
                                    }
                                    else
                                    {
                                        setTimeout(function(){$(".lp_section_07_02").find("div").html("<span class='naTextfont'>NA</span>")},200);
                                    }
                                }
                            });
                        }
                    }
                    else
                    {
                        setTimeout(function(){$(".lp_section_07_01").find("div").html("<span class='naTextfont'>NA</span>")},200);
                        setTimeout(function(){$(".lp_section_07_02").find("div").html("<span class='naTextfont'>NA</span>")},200);
                    }

                    //A DAY IN MY LIFE
                    var aDayInMyLifeCount = resData[9].length;
                    //var datasets10BgColorArray = ['#efb119', '#e56e25', '#f18a1f', '#3ba3d2', '#4eb966', '#6c757d', '#3c8dbc', '#f012be', '#001f3f', '#3f0000'];
                    //var datasets10BgColorArray = ['#B78600','#D29B00','#E6A900','#F3B300','#FFCD63','#FFD792','#FFE0B0','#FFE7C6'];
                    var datasets10BgColorNames = $("#sec10DatasetsBgColorNames").val();
                    //console.log("datasets10BgColorNames"+datasets10BgColorNames);
                    var datasets10BgColorArray = datasets10BgColorNames.split(",");
                    var donutData10LabelsID = [];
                    var donutData10Labels = [];
                    var datasetsData10 = [];
                    var datasets10BgColor = [];
                    var datasets10Border = [];

                    for(var adimli = 0; adimli<aDayInMyLifeCount; adimli++)
                    {
                        if(resData[9][adimli]['b10_name_id'] > 0)
                        {
                            donutData10LabelsID.push(resData[9][adimli]['b10_name_id']);
                        }
                        datasetsData10.push(resData[9][adimli]['b10_number']);

                        if(resData[9][adimli]['b10_color'] !='' && resData[9][adimli]['b10_color'] != null)
                        {
                            datasets10BgColor.push(resData[9][adimli]['b10_color']);
                        }
                        else
                        {
                            datasets10BgColor.push(datasets10BgColorArray[adimli]);
                        }
                        datasets10Border.push(0);
                    }

                    if(datasetsData10 != '')
                    {
                        var adimlUrl = $("#adimlUrl").val()+'/'+donutData10LabelsID;

                        $.ajax({
                            type: "GET",
                            url: adimlUrl,
                            data: "",
                            success: function(data) {
                                //console.log(data);
                                donutData10Labels = data;
                            },
                            complete: function(){
                                //setTimeout(function(){
                                    var b10datasetsDataArr = [];
                                    for(var i=0; i<aDayInMyLifeCount; i++)
                                    {
                                        b10datasetsDataArr.push({"label": donutData10Labels[i], "value": parseInt(datasetsData10[i])});
                                    }

                                    var brandCVPieData3 =  b10datasetsDataArr;
                                    var brandCVPie3;

                                    var brandCVPieOuterRadius = "";
                                    var brandCVPie3WinWidth = $(window).width();
                                    if (brandCVPie3WinWidth <= 1250 && brandCVPie3WinWidth >= 1200) {
                                        brandCVPieOuterRadius = "60%";
                                    }
                                    else if (brandCVPie3WinWidth <= 1199 && brandCVPie3WinWidth >= 993) {
                                        brandCVPieOuterRadius = "50%";
                                    }
                                    else if (brandCVPie3WinWidth <= 549) {
                                        brandCVPieOuterRadius = "50%"
                                    }
                                    else {
                                        brandCVPieOuterRadius = "80%"
                                    }

                                    var brandCVPieUpdate3 = function () {
                                        if (brandCVPie3) brandCVPie3.destroy();
                                        var div3W = $("#brandCVPieDiv3").width();
                                        var div3H = $("#brandCVPieDiv3").height();
                                        //var size = Math.min(innerHeight, innerWidth) / 2;
                                        var size = Math.min(div3W, div3H);
                                        var opt =  {
                                            data: {
                                                content: brandCVPieData3,
                                            },
                                            size: {
                                                pieInnerRadius: "40%",
                                                pieOuterRadius: brandCVPieOuterRadius,
                                                canvasHeight: div3H,
                                                canvasWidth: div3W,
                                            },
                                            labels: {
                                                outer: {
                                                    pieDistance: 10
                                                },
                                                mainLabel: {
                                                    font: "RobotoMonoMedium",
                                                    color: "#F1F1F1",
                                                    fontSize: 12
                                                },
                                                percentage: {
                                                    font: "RobotoMonoMedium",
                                                    color: "#070706",
                                                    decimalPlaces: 0,
                                                    fontSize: 12
                                                },
                                                value: {
                                                    font: "RobotoMonoMedium",
                                                    color: "#070706",
                                                    fontSize: 12
                                                },
                                                lines: {
                                                    enabled: true,
                                                    style: "straight",
                                                    color: "#A1A1A1"
                                                }
                                            },
                                            tooltips:{
                                                enabled:false,
                                                type:"placeholder",
                                                string:"{label}:{percentage}%",
                                                style:{padding:5}
                                            },
                                            misc: {
                                                gradient: {
                                                    enabled: false,
                                                    percentage: 100
                                                },
                                                pieCenterOffset: {
                                                    x: 10,
                                                    y: 0
                                                },
                                                colors: {
                                                    segments: b10datasetsbgColorData,
                                                    segmentStroke: "#8b8c90"
                                                },
                                                canvaspadding:{
                                                    top:0,
                                                    right:0,
                                                    bottom:0,
                                                    left:0
                                                }
                                            }

                                        };
                                        brandCVPie3 = new d3pie("brandCVPie3", opt);
                                    };
                                    brandCVPieUpdate3();
                                    window.addEventListener('resize', brandCVPieUpdate3);
                                    // End Code of Render Legends In Div
                                //},200);
                            }

                        });
                    }
                    else
                    {
                        setTimeout(function(){
                            $(".lp_sec10_title").find("div.mt-4").html("<span class='naTextfont'>NA</span>");
                            /* if(resData[9][0]['b10_bg_image'] != '' && resData[9][0]['b10_bg_image'] != null)
                            {
                                var section10BgImagePreview = $("#section_10_bg_image_preview").attr("src");
                                //console.log(resData[9][0]['b10_bg_image']);
                                $(".lp_section_101112_bg").css({'background': 'url(public/images/section_10_bg_images/'+ resData[9][0]['b10_bg_image'] + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
                            }
                            else
                            {
                                var folderName = resData[0]['industry_id'];
                                var section10BgImageNames = $("#sec10BGImageNames").val();
                                var section10BgImageArray = section10BgImageNames.split(",");
                                //console.log("section10BgImageArray"+section10BgImageArray);
                                //var section10BgImageArray = ['01.jpg','02.jpg','03.jpg','04.jpg','05.jpg','06.jpg','07.jpg','08.jpg','09.jpg','10.jpg'];
                                var section10BgImagePreview = "public/images/section_10_bg_images/default/"+folderName+"/"+section10BgImageArray[Math.floor(Math.random() * section10BgImageArray.length)];
                                //console.log(section10BgImagePreview);
                                $(".lp_section_101112_bg").css({'background': 'url('+ section10BgImagePreview + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
                            }
                            lpSection10ImgHeight(); */
                        },200);
                    }

                    //Music Types Usage (On Average)
                    var efbCount = resData[12].length;
                    var barChartLabelsID = [];
                    var barChartLabels = [];
                    var barChartDatasetsData = [];
                    var borderWidthData = [];
                    for(var efbi = 0; efbi<efbCount; efbi++)
                    {
                        barChartLabelsID.push(resData[12][efbi]['b13_name_id']);
                        barChartDatasetsData.push(resData[12][efbi]['b13_number']);
                        borderWidthData.push(0);
                    }

                    if(barChartDatasetsData != '')
                    {
                        var mtuoaUrl = $("#mtuoaUrl").val()+'/'+barChartLabelsID;

                        $.ajax({
                            type: "GET",
                            url: mtuoaUrl,
                            data: "",
                            success: function(data) {
                                //console.log(data);
                                barChartLabels = data;
                            },
                            complete: function(){
                                //setTimeout(function(){
                                    var winWBarChartDisplayCV = $(window).width();
                                    var fontSBarChartDisplayCV = 14;
                                    var yAxesRotationBarChartDisplayCV = 0;
                                    if(winWBarChartDisplayCV < 768) {
                                        fontSBarChartDisplayCV = 12;
                                        yAxesRotationBarChartDisplayCV = 45;
                                    }
                                    else {
                                        fontSBarChartDisplayCV = 14;
                                        yAxesRotationBarChartDisplayCV = 0;
                                    }
                                    var areaChartData = {
                                        labels  : barChartLabels,
                                        datasets: [
                                            {
                                                label               : 'Average',
                                                backgroundColor     : themeColor,
                                                borderColor         : themeColor,
                                                pointRadius          : false,
                                                pointColor          : themeColor,
                                                pointStrokeColor    : 'rgba(60,141,188,1)',
                                                pointHighlightFill  : '#fff',
                                                pointHighlightStroke: 'rgba(60,141,188,1)',
                                                data                : barChartDatasetsData,
                                                borderWidth: borderWidthData
                                            }
                                        ]
                                    }
                                    var barChartData = jQuery.extend(true, {}, areaChartData)
                                    var temp0 = areaChartData.datasets[0]
                                    //var temp1 = areaChartData.datasets[1]
                                    barChartData.datasets[0] = temp0
                                    //barChartData.datasets[1] = temp0

                                    var barChartOptions = {
                                        responsive              : true,
                                        maintainAspectRatio     : false,
                                        datasetFill             : false,
                                        indexAxis               : 'y',
                                        title: {
                                            display: true,
                                            text: 'Predicted world population (millions) in 2050'
                                        },
                                        elements: {
                                            bar: {
                                                borderWidth: 2,
                                            }
                                        },
                                        layout: {
                                            padding: {
                                                right: 45
                                            }
                                        },
                                        scales: {
                                            x: {
                                                beginAtZero: true,
                                                grid: {
                                                    display: false,
                                                    borderColor: '#A1A1A1'
                                                },
                                                ticks: {
                                                    font: {
                                                        size: fontSBarChartDisplayCV,
                                                        family: 'RobotoMonoLight',
                                                        padding: 30
                                                    },
                                                    color: '#F1F1F1'
                                                }
                                            },
                                            y: {
                                                beginAtZero: true,
                                                grid: {
                                                    display: false,
                                                    borderColor: '#A1A1A1'
                                                },
                                                ticks: {
                                                    font: {
                                                        size: fontSBarChartDisplayCV,
                                                        family: 'RobotoMonoLight',
                                                        padding: 30
                                                    },
                                                    color: '#F1F1F1'
                                                }
                                            }
                                        },
                                        plugins: {
                                            datalabels: {
                                                display: true,
                                                formatter: (val, context) => (`${val}%`),
                                                anchor: 'end',
                                                align: 'end',
                                                labels: {
                                                    value: {
                                                        color: '#ffffff'
                                                    }
                                                }
                                            },
                                            legend: {
                                                display: true,
                                                position: 'bottom',
                                                labels: {
                                                    font: {
                                                        size: fontSBarChartDisplayCV,
                                                        family: 'RobotoMonoLight',
                                                        padding: 30
                                                    },
                                                    color: '#ffffff'
                                                }

                                            },
                                            title: {
                                                display: false,
                                                text: 'Music Types Usage'
                                            }
                                        }

                                    }
                                    const ctx = document.getElementById('barChart').getContext('2d');
                                    Chart.register(ChartDataLabels);
                                    const barChart = new Chart(ctx, {
                                        type: 'bar',
                                        plugins: [ChartDataLabels],
                                        data: barChartData,
                                        options: barChartOptions,

                                    });
                                //},200);
                            }

                        });
                    }
                    else
                    {
                        setTimeout(function(){
                            $(".lp_section_13").find("div.chart").html("<span class='naTextfont mtop15rem'>NA</span>");
                            /* if(resData[12][0]['b13_bg_image'] !='' && resData[12][0]['b13_bg_image'] !=null)
                            {
                                $(".lp_section_131415_bg").css({'background': 'url(public/images/section_13_bg_images/'+ resData[12][0]['b13_bg_image'] + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
                            }
                            else
                            {
                                var folderName = resData[0]['industry_id'];
                                var section13BgImageNames = $("#sec13BGImageNames").val();
                                var section13BgImageArray = section13BgImageNames.split(",");
                                //console.log("section13BgImageArray"+section13BgImageArray);
                                //var section13BgImageArray = ['01.jpg','02.jpg','03.jpg','04.jpg','05.jpg','06.jpg','07.jpg','08.jpg','09.jpg','10.jpg'];
                                var section13BgImagePreview = "public/images/section_13_bg_images/default/"+folderName+"/"+section13BgImageArray[Math.floor(Math.random() * section13BgImageArray.length)];
                                //console.log(section13BgImagePreview);
                                $(".lp_section_131415_bg").css({'background': 'url('+ section13BgImagePreview + ')','background-position':'center center','background-repeat':'no-repeat','background-size':'cover'});
                            }
                            lpSection13ImgHeight(); */
                        },200);
                    }
                    return $message;
                },
                closeByBackdrop: !1,
                closable: !0,
                buttons: [
                    {
                        label: 'Close',
                        cssClass: 'btn btn-default btn-sm',
                        action: function (dialog) {
                            dialog.close();
                        }
                    },
                    {
                        label: "Publish",
                        cssClass: 'btn btn-success pull-left btn-sm',
                        id: 'cv_publish',
                        action: function (dialog) {
                            cvPublishUnpublishConfirmationModal(resData[0]['cv_id'],"publish");
                        }
                    }
                ],
                onshown: function (dialogRef) {
                    if(resData[3]!= '' && resData[3]!= null)
                    {
                        var aboutContentHeight = $(".aboutContent").find(".lp_section_03_inner").height();
                        var keyFindingContentHeight = $(".keyFindingContent").find(".lp_section_03_inner").height();
                        console.log("aboutContentHeight"+aboutContentHeight, "keyFindingContentHeight"+keyFindingContentHeight);
                        if(aboutContentHeight > keyFindingContentHeight)
                        {
                            $(".lp_section_03_col").find(".lp_section_03_inner").css("height",aboutContentHeight+50);
                        }
                        else
                        {
                            $(".lp_section_03_col").find(".lp_section_03_inner").css("height",keyFindingContentHeight+50);
                        }
                    }

                    if($(window).width() > 992) {
                        /* var lpSection1314 = $(".lp_section_1314").height()+40;
                        var lpSection1315  = $(".lp_section_1315").height()+40;
                        if(lpSection1314 > lpSection1315)
                        {
                            $(".lp_music_typeUsages_perYear_perVideo_height").css("height",lpSection1314);
                        }
                        else
                        {
                            $(".lp_music_typeUsages_perYear_perVideo_height").css("height",lpSection1315);
                        } */
                        var lpSection1011 = $(".lp_section_1011").height()+80;
                        var lpSection1012  = $(".lp_section_101112").height()+80;
                        if(lpSection1011 > lpSection1012)
                        {
                            $(".lp_aDayInMyLife_socialMediaS_height_10Rec").css("height",lpSection1011);
                            $(".lp_aDayInMyLife_socialMediaS_height_15Rec").css("height",lpSection1011);
                        }
                        else
                        {
                            $(".lp_aDayInMyLife_socialMediaS_height_10Rec").css("height",lpSection1012);
                            $(".lp_aDayInMyLife_socialMediaS_height_15Rec").css("height",lpSection1012);
                        }
                    }
                }
            });
        }
    });
}

function cvPublishUnpublishConfirmationModal(cvID, type) {
    if(type == "publish")
    {
        var titleContent = "Publish CV Confirmation";
    }
    else
    {
        var titleContent = "Unpublish CV Confirmation";
    }
    _popDialog = BootstrapDialog.show({
        id: "cvPublishUnpublishConfirmationModal",
        title: titleContent,
        //type: getDialogType("PRIMARY"),
        //size: BootstrapDialog.SIZE_WIDE,
        message: function () {

            var $message = $('<div><div id="bodyContent"></div><form id="publishUnpublishForm" action="#" method="post"><input type="hidden" id="_token" name="_token" value=""><input type="hidden" name="cv_id" id="cv_id" value=""><input type="hidden" name="status_type" id="status_type" value=""></form></div>');
            //var tab1_Active = 'active', tab2_Active = '';

            return $message;
        },
        closeByBackdrop: !1,
        closable: !0,
        buttons: [
           {
               label: 'No',
               cssClass: 'btn btn-default',
               action: function (dialog) {
                   dialog.close();
               }
           },
           {
                label: 'Yes',
                cssClass: 'btn btn-primary',
                action: function (dialog) {
                    $("#publishUnpublishForm").submit();
                }
            }
        ],
        onshown: function (dialogRef) {
            //getList(listId);
            $("#cvPublishUnpublishConfirmationModal").find("#cv_id").val(cvID);
            $("#cvPublishUnpublishConfirmationModal").find("form").attr("action",$("#cvPreviewPostUrl").val());
            $("#cvPublishUnpublishConfirmationModal").find("form").find("#_token").val($("#csrf-token").attr("content"));
            if(type == "publish")
            {
                $("#bodyContent").append("<p>Are you sure you want to Publish?</p>");
                $("#cvPublishUnpublishConfirmationModal").find("input#status_type").val("publish");
            }
            else
            {
                $("#bodyContent").append("<p>Are you sure you want to Unpublish?</p>");
                $("#cvPublishUnpublishConfirmationModal").find("input#status_type").val("unpublish");
            }
        },
        onhide: function (dialogRef) {
            //_isList1 = _isList2 = !0;
        }
    });
}
var playstatusflag = false;
function playPauseAudio(id)
{
    $(this).toggleClass("down");
    //var audio = new Audio($("#"+id).find("source").attr("src"));
    if (playstatusflag == false){
        var currentPlayingID = $(".audio-pause-button").parent().find(".audio-player").find("audio").attr("id");
        //console.log("currentPlayingID"+currentPlayingID);
        if(currentPlayingID != undefined) {
            document.getElementById(currentPlayingID).pause();
            playstatusflagCompare = false;
            //console.log("playstatusflag"+playstatusflag+" : playstatusflagCompare"+playstatusflagCompare);
            $("#"+currentPlayingID).parent().parent().find("span").removeClass("audio-pause-button");
            $("#"+currentPlayingID).parent().parent().find("span").addClass("audio-player-button");
        }
        document.getElementById(id).play();
        playstatusflag = true;
        $("#"+id).parent().parent().find("span").removeClass("audio-player-button");
        $("#"+id).parent().parent().find("span").addClass("audio-pause-button");
        //console.log($("audio-pause-button").parent())
    }
    else {
        document.getElementById(id).pause();
        playstatusflag = false;
        $("#"+id).parent().parent().find("span").removeClass("audio-pause-button");
        $("#"+id).parent().parent().find("span").addClass("audio-player-button");
    }
    var aud = document.getElementById(id);
    aud.onended = function() {
        playstatusflag = false;
        $("#"+id).parent().parent().find("span").removeClass("audio-pause-button");
        $("#"+id).parent().parent().find("span").addClass("audio-player-button");
    };
}

// Client Side code
$(function() {


    var currentURL = window.location.href;
    // $(".lp_menu").find("li").removeClass("active");
    $(".lp_menu > li").removeClass("active");
    if(currentURL.indexOf("welcome")>1)
    {
        $("#home").addClass("active");
    }
    else if(currentURL.indexOf("get-industry-cvs")>1 || currentURL.indexOf("get-sub-industry-cvs")>1 || currentURL.indexOf("display-cv-launcher")>1 || currentURL.indexOf("browse-cv")>1)
    {
        $("#browse").addClass("active");
    }
    else if(currentURL.indexOf("get-industry-sonic-logo-cvs")>1 || currentURL.indexOf("get-sub-industry-sonic-logo-cvs")>1 || currentURL.indexOf("display-sonic-logo-launcher")>1 || currentURL.indexOf("browse-sonic-logo")>1)
    {
        $("#browseSonicLogo").addClass("active");
    }
    else if(currentURL.indexOf("methodology")>1)
    {
        $("#methodology").addClass("active");
    }
    else if(currentURL.indexOf("yearwise-best-in-audio-brands")>1){
        var currntUrlParts = currentURL.split("/");
        var currntYear = currntUrlParts[currntUrlParts.length-1];
        //console.log(currntYear+"------------currntYear");
        if(currntYear.indexOf("?page=")>1)
        {
            $("#biab_"+atob(currntYear.split("$_$")[0])).addClass("active");
        }
        else
        {
            $("#biab_"+atob(currntYear.split("$_$")[0])).addClass("active");
        }
        $("#audio_brand_years").removeClass("hide");
        $("#bestinaudiobrands a").addClass("bestinaudiobrands");
    }
    else if(currentURL.indexOf("best-in-audio-brands")>1)
    {
        $("#bestinaudiobrands").addClass("active");
        $("#audio_brand_years").removeClass("hide");
    }

    else
    {
        //
    }

    if(currentURL.indexOf("welcome")>1 || currentURL.indexOf("get-industry-cvs")>1 || currentURL.indexOf("methodology")>1 || currentURL.indexOf("cookie-policy")>1 || currentURL.indexOf("privacy-policy")>1 || currentURL.indexOf("best-in-audio-brands")>1 || currentURL.indexOf("browse-cv")>1 || currentURL.indexOf("browse-sonic-logo")>1){
        $(".main-body-container").css("padding-bottom", "20px");

        if($(window).width() <= 767){
            $(".welBroIndMeth_padding").find(".lp_body_col_l").css("display","none");
            $(".main-body-container").css("padding-bottom", "0px");
        }
        else {
            $(".welBroIndMeth_padding").find(".lp_body_col_l").removeAttr("style");
        }
    }
    if(currentURL.indexOf("welcome")>1){
        $('.welcomeCounter').each(function () {
            $(this).prop('Counter',0).animate({
                Counter: $(this).text()
            }, {
                duration: 5000,
                easing: 'swing',
                step: function (now) {
                    $(this).text(Math.ceil(now));
                }
            });
        });

        $(window).scroll(function() {
            if ($(window).height() -400 <= $(window).height()) {
                $(".showCounterContent").slideDown("slow");
            }
        });
    }

    if(currentURL.indexOf("display-cv-launcher")>1 || currentURL.indexOf("display-sonic-logo-launcher")>1 || currentURL.indexOf("display-industry-cv-launcher")>1 || currentURL.indexOf("display-industry-sonic-logo-launcher")>1 || currentURL.indexOf("display-sub-industry-cv-launcher")>1 || currentURL.indexOf("display-sub-industry-sonic-logo-launcher")>1 || currentURL.indexOf("display-best-in-audio-brands-launcher")>1 || currentURL.indexOf("display-sonic-logo-launcher")>1) {

        var liLen = $("ul.list").find("li").length;
        if($(window).width() <= 767) {
            $(".launcher-mtop").css("margin-top", "50px");
        }
        else {
            if(liLen < 6) {
                $(".launcher-mtop").css("margin-top", "550px");
            }
        }
    }

    $('#searchInput').on('keyup', function(e){

            /* var curntURL = $("#currentUrl").val();
            var pageIdentifier = 'display-cv/';
            if(curntURL == "welcome")
            {
                pageIdentifier = 'welcome';
            }
            else if(curntURL == "displaycv")
            {
                pageIdentifier = 'display-cv';
            }
            else if(curntURL == "industrycv")
            {
                pageIdentifier = 'display-industry-cv';
            } */
            if (e.which != 40 && e.which != 38) {

                if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1)
                {
                    var query = $("#searchInput").val();
                    var curntYear = $("#currentYear").val();
                    var srchUrl = $("#srchUrl").val()+'/'+query+'$_$'+curntYear;
                }
                else
                {
                    var query = $('#searchInput').val();
                    var srchUrl = $("#srchUrl").val()+'/'+query;
                }

                //var srchUrl = $("#srchUrl").val()+'/'+query+'_'+pageIdentifier;
                //console.log(srchUrl);
                var liSelected = '';
                var selected = '';
                //var li = '';
                //console.log("query before " + query + " : " + query.length);
                if(query == ''){
                    $(".divDropDown_LP").find('.dropdown-menu').find('li').removeClass('activeDropDownListItem');
                    $('#searchInput').val('');
                }
                //console.log("query after " + query + " : " + query.length);
                var liLength = 0;
                var listId = 1;
                if(query != '' && query.length>=1)
                {
                    //var _token = $('input[name="_token"]').val();
                    $.ajax({
                        url:srchUrl,
                        method:"GET",
                        //data:{query:query, _token:_token},
                        //data:{query:query},
                        data: "",
                        success:function(data){
                            $("#search-input-close").removeClass("hide");
                            $('#cvNameList').fadeIn();
                            $('#cvNameList').html(data);
                            $('#cvNameList').removeClass("hide");
                            //$('.welCome_search_autocomplete').find('.search-input').css('background-image', 'none');

                            /* var objScroll = $("#cvNameList");
                            if(objScroll.hasClass("cvNameList")){
                                $("#cvNameList").mCustomScrollbar({
                                    axis: "y",
                                    mouseWheel: { enable: true },
                                    contentTouchScroll: 25,
                                    autoHideScrollbar: true,
                                    scrollButtons: { enable: false },
                                    //scrollbarPosition: "outside",
                                    live: "once",
                                    advanced: {
                                        updateOnContentResize: true, updateOnBrowserResize: true
                                    }
                                });
                            } */

                        },
                        complete: function(e){
                            /* $("#cvNameList").mCustomScrollbar({
                                scrollButtons:{
                                    enable:true
                                }
                            }); */
                            //searchBrand();
                            var currentURL = window.location.href;

                            var li = $(".divDropDown_LP").find('.dropdown-menu').find('li');
                            if(currentURL.indexOf('best-in-audio-brands')<0){
                                var id = 0;
                            }
                            else{
                                var id = 1;
                            }

                            $(li).each(function( index ) {
                                $(this).addClass("element");
                                $(this).attr('id', 'list_'+ id++);
                            });

                            if(currentURL.indexOf('best-in-audio-brands')<0 && currentURL.indexOf('yearwise-best-in-audio-brands/')<0){
                                $(".divDropDown_LP").find('.dropdown-menu').find('li:nth-child(2)').addClass("element activeDropDownListItem");
                            }
                            else {
                                $(".divDropDown_LP").find('.dropdown-menu').find('li:first-child').addClass("element activeDropDownListItem");
                            }

                            /* if(window.location.href.indexOf("best-in-audio-brands")>1){
                                $("<li>Test</li>").insertBefore('.activeDropDownListItem');
                            } */

                            $('#searchInput').on('keydown', function(e){
                                liLength = $(".divDropDown_LP").find('.dropdown-menu').find('li').length;
                                if (e.which == 40) {
                                    //console.log(listId + " : Down : " + liLength+"|"+(liLength-1));
                                    if(currentURL.indexOf('best-in-audio-brands')<0 && currentURL.indexOf('yearwise-best-in-audio-brands/')<0){
                                        if(liLength != 2) {
                                            if(listId <= (liLength-1) && liLength != 0) {
                                                if(listId==(liLength-1)){
                                                    PosEnd(searchInput, 'down');
                                                }
                                                $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                                                listId++;
                                            }
                                            else {
                                                liLength = 0;
                                            }
                                        }
                                        else {
                                            $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                                        }
                                    }
                                    else {
                                        if(listId <= (liLength) && liLength != 0) {
                                            if(listId==(liLength)){
                                                PosEnd(searchInput, 'down');
                                            }
                                            $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                                            listId++;
                                        }
                                        else {
                                            liLength = 0;
                                        }
                                    }

                                    $('#searchInput').val($(".activeDropDownListItem a").text());
                                } else if (e.which == 38) {
                                    //console.log(listId + " : Up : " + liLength+"|"+(liLength-1));
                                    if(listId > 0 && listId != 1){
                                        if(window.location.href.indexOf('best-in-audio-brands')<0 && currentURL.indexOf('yearwise-best-in-audio-brands/')<0){
                                            if(listId==2){
                                                PosEnd(searchInput, 'up');
                                            }
                                        }
                                        else {
                                            if(listId==2){
                                                PosEnd(searchInput, 'up');
                                            }
                                        }
                                        //console.log("#list_"+listId + " : UP Before");
                                        listId--;
                                        //console.log("#list_"+listId + " : UP After");
                                        $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                                    }
                                    $('#searchInput').val($(".activeDropDownListItem a").text());
                                }
                                if(currentURL.indexOf("welcome")>1){
                                    $(".divAutocompleteScroll").scrollTop(250);//set to top
                                }
                                else {
                                    $(".divAutocompleteScroll").scrollTop(0);//set to top
                                }

                                if(window.location.href.indexOf("/best-in-audio-brands")>-1){
                                    //console.log($('.activeDropDownListItem:first').offset().top-$(".divAutocompleteScroll").height()-$(".babContent").height());
                                    $(".divAutocompleteScroll").scrollTop($('.activeDropDownListItem:first').offset().top-$(".divAutocompleteScroll").height()-$(".babContent").height());
                                }
                                else{
                                    //console.log($('.activeDropDownListItem:first').offset().top-$(".divAutocompleteScroll").height());
                                    $(".divAutocompleteScroll").scrollTop($('.activeDropDownListItem:first').offset().top-$(".divAutocompleteScroll").height());
                                }
                                //then set equal to the position of the selected element minus the height of scrolling div

                            });
                        }
                    });
                }
                else
                {
                    selected = '';
                    liLength = 0;
                    listId = 1;
                    $('#searchInput').val("");
                    $("#search-input-close").addClass("hide");
                    $('#cvNameList').fadeOut();
                    $('#cvNameList').addClass("hide");
                    $('#cvNameList').removeAttr("style");
                    $('#cvNameList').find("ul").remove();
                    $('.welCome_search_autocomplete').find('.search-input').css('background-image', '');
                }
            }

            $(document).on('click', 'li', function(){
                $('#searchInput').val($("this").text());
                $('#cvNameList').fadeOut();
                $('#cvNameList').addClass("hide");
            });

            $(document).on('click', '#search-input-close', function(){
                //$("#search-input-close").click( function(){
                $('#searchInput').val('');
                $('#cvNameList').fadeOut();
                $('#cvNameList').find("ul").remove();
                $('#cvNameList').addClass("hide");
                $("#search-input-close").addClass("hide");
                $('.welCome_search_autocomplete').find('.search-input').css('background-image', '');
                $('#searchInput').focus();
                /* $("#cvNameList").mCustomScrollbar('destroy');
                $("#cvNameList").removeAttr("style");
                $("#cvNameList").removeClass("mCustomScrollbar, _mCS_2, mCS-autoHide"); */
            });



    });

    var isSearchOpen = false;
    $(".search-box-autocomplete .btn-search").click(function(event){
        event.stopPropagation();
        if(window.location.href.indexOf("browse-cv") > -1 || window.location.href.indexOf("browse-sonic-logo") > -1 || window.location.href.indexOf("get-industry-cvs") > -1 || window.location.href.indexOf("get-industrysonic-logo-cvs") > -1 || window.location.href.indexOf("get-sub-industry-cvs") > -1 || window.location.href.indexOf("get-sub-industry-sonic-logo-cvs") > -1 || window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
            if(isSearchOpen){
                $(".browsecv-search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").find(".input-search").css({"width": "40px", "height": "40px", "padding-left": "0px"});
                $('#searchInput').blur();
                $('#cvNameList').addClass("hide");
                $('#cvNameList').removeAttr("style");
                if(window.location.href.indexOf("browse-cv")> 1 || window.location.href.indexOf("browse-sonic-logo") > -1 || window.location.href.indexOf("get-industry-cvs")> 1 || window.location.href.indexOf("get-industry-sonic-logo-cvs")> 1 || window.location.href.indexOf("get-sub-industry-cvs")> 1 || window.location.href.indexOf("get-sub-industry-sonic-logo-cvs")> 1)
                {
                    $("#AtoZList").css("visibility", "visible");
                }
                if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
                    $(".search-box-autocomplete").find(".input-search").css({"width": "30px", "height": "30px", "padding-left": "0px"});
                }
                isSearchOpen = false;
            }
            else{
                var winW = $(window).width();
                if(winW > 1300) {
                    $(".browsecv-search-box-autocomplete").css({"width":"100%"});
                    $(".search-box-autocomplete").css({"max-width": "710px", "width": "100%"});
                    $(".search-box-autocomplete").find(".input-search").css({"max-width": "700px", "width": "100%", "padding-left": "10px"});
                    if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
                        var sortW = $(".best-audio-brand-titleRP").find(".sBABContainer").width() + 100;
                        var sortWDif = $(".best-audio-brand-titleRP").width() - sortW;

                        $(".browsecv-search-box-autocomplete").css({"width":sortWDif});
                        $(".search-box-autocomplete").css({"max-width": "450px", "width": "100%"});
                    }
                }
                else {
                    $(".browsecv-search-box-autocomplete").css({"width":"100%"});
                    $(".search-box-autocomplete").css({"max-width": "350px", "width": "100%"});
                    $(".search-box-autocomplete").find(".input-search").css({"max-width": "340px", "width": "100%", "padding-left": "10px"});
                }

                if(window.location.href.indexOf("browse-cv")> 1 || window.location.href.indexOf("browse-sonic-logo") > -1 || window.location.href.indexOf("get-industry-cvs")> 1 || window.location.href.indexOf("get-industry-sonic-logo-cvs")> 1 || window.location.href.indexOf("get-sub-industry-cvs")> 1 || window.location.href.indexOf("get-sub-industry-sonic-logo-cvs")> 1)
                {
                    $("#AtoZList").css("visibility", "hidden");
                }
                $('#searchInput').focus();
                isSearchOpen = true;
            }
        }
        else {
            if(isSearchOpen){
                $(".lp_floating_menu_rp").removeAttr("style");
                $(".lp_floating_menu_lp").removeAttr("style");
                $(".search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").find(".input-search").css({"width": "40px", "height": "40px", "padding-left": "0px"});
                $('#searchInput').blur();
                $('#cvNameList').addClass("hide");
                $('#cvNameList').removeAttr("style");
                isSearchOpen = false;
            }
            else{
                var winW = $(window).width();
                if(winW > 1300) {
                    $(".lp_floating_menu_rp").css({"width":"100%"});
                    $(".lp_floating_menu_lp").css("display", "none");
                    $(".search-box-autocomplete").css({"max-width": "710px", "width": "100%"});
                    $(".search-box-autocomplete").find(".input-search").css({"max-width": "700px", "width": "100%", "padding-left": "10px"});
                    }
                else {
                    $(".lp_floating_menu_rp").css({"width":"100%"});
                    $(".lp_floating_menu_lp").css("display", "none");
                    $(".search-box-autocomplete").css({"max-width": "350px", "width": "100%"});
                    $(".search-box-autocomplete").find(".input-search").css({"max-width": "340px", "width": "100%", "padding-left": "10px"});
                }
                $('#searchInput').focus();
                isSearchOpen = true;
            }
        }

    });
    $(document).click(function(){
        if(window.location.href.indexOf("browse-cv") > -1 || window.location.href.indexOf("browse-sonic-logo") > -1 || window.location.href.indexOf("get-industry-cvs") > -1 || window.location.href.indexOf("get-industry-sonic-logo-cvs") > -1 || window.location.href.indexOf("get-sub-industry-cvs") > -1|| window.location.href.indexOf("get-sub-industry-sonic-logo-cvs") > -1 || window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
            if($(".search-input").is(":focus") == false) {
                $(".browsecv-search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").find(".input-search").css({"width": "40px", "height": "40px", "padding-left": "0px"});
                $("#AtoZList").css("visibility", "visible");
                $('#cvNameList').addClass("hide");
                $('#cvNameList').removeAttr("style");
                if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
                    $(".search-box-autocomplete").find(".input-search").css({"width": "30px", "height": "30px", "padding-left": "0px"});
                }
                isSearchOpen = false;
            }
        }
        else {
            if($(".search-input").is(":focus") == false) {
                $(".lp_floating_menu_rp").removeAttr("style");
                $(".lp_floating_menu_lp").removeAttr("style");
                $(".search-box-autocomplete").removeAttr("style");
                $(".search-box-autocomplete").find(".input-search").css({"width": "40px", "height": "40px", "padding-left": "0px"});
                $('#cvNameList').addClass("hide");
                $('#cvNameList').removeAttr("style");
                if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
                    $(".search-box-autocomplete").find(".input-search").css({"width": "30px", "height": "30px", "padding-left": "0px"});
                }
                isSearchOpen = false;
            }
        }

        if(isOpenZoomGraphM == true)
        {
            $(".sortZoomGraphM").css("display", "none");
            $(".btnZoomGraphM").find("img").css("transform", "rotateZ(0deg)");
            isOpenZoomGraphM = false;
        }
    });

    $('#compare-ind-search-input').keyup(function(){
        var query = $("#compare-ind-search-input").val();
        if(window.location.href.indexOf('display-industry-cv/')>-1)
        {
            var srchUrl = $("#srchCvIndSindUrl").val()+'/'+$("#ind_id").val()+'!_!ind!$!'+query;
        }
        else
        {
            var srchUrl = $("#srchCvIndSindUrl").val()+'/'+'0!_!ind!$!'+query;
        }

        if(query != ''){
            $('#compare-ind-search-input-close').removeClass('hide');
        }
        else {
            $('#compare-ind-search-input-close').addClass('hide');
        }

        //alert(srchUrl);
        if(query != '' && query.length>=1)
        {
            $.ajax({
                url:srchUrl,
                method:"GET",
                data: "",
                success:function(data){
                    //alert(data);
                    //$("#compare-ind-search-input-close").removeClass("hide");
                    $('#indNameList').fadeIn();
                    $('#indNameList').html(data);
                    $('#indNameList').removeClass("hide");
                    //$('.welCome_search_autocomplete').find('.search-input').css('background-image', 'none');
                },
                complete: function(){
                    /* $("#cvNameList").mCustomScrollbar({
                        scrollButtons:{
                            enable:true
                        }
                    }); */
                }
            });
        }
        else
        {
            //$("#compare-ind-search-input-close").addClass("hide");
            $('#indNameList').fadeOut();
            $('#indNameList').addClass("hide");
            $('#indNameList').removeAttr("style");
            $('#indNameList').find("ul").remove();
            //$('.welCome_search_autocomplete').find('.search-input').css('background-image', '');
        }
    });

    $('#compare-sind-search-input').keyup(function(){
        var query = $("#compare-sind-search-input").val();
        var srchUrl = $("#srchCvIndSindUrl").val()+'/'+'0!_!sind!$!'+query;
        //alert(srchUrl);
        if(query != '' && query.length>=1)
        {
            $.ajax({
                url:srchUrl,
                method:"GET",
                data: "",
                success:function(data){
                    //alert(data);
                    $('#sindNameList').fadeIn();
                    $('#sindNameList').html(data);
                    $('#sindNameList').removeClass("hide");
                },
                complete: function(){}
            });
        }
        else
        {
            $('#sindNameList').fadeOut();
            $('#sindNameList').addClass("hide");
            $('#sindNameList').removeAttr("style");
            $('#sindNameList').find("ul").remove();
        }
    });

    $('#compare-cv-search-input').keyup(function(){
        var query = $("#compare-cv-search-input").val();
        if($("#compare_industry_cv_id_val").val() != '')
        {
            var enIndVal = $("#compare_industry_cv_id_val").val();
            var indVal = enIndVal.split('$_$')[0];
        }
        else
        {
            var indVal = '';
        }

        if($("#compare_sub_industry_cv_id_val").val() != '')
        {
            var enSindVal = $("#compare_sub_industry_cv_id_val").val();
            var sindVal = enSindVal.split('$_$')[0];
        }
        else
        {
            var sindVal = '';
        }

        var srchUrl = $("#srchCvIndSindUrl").val()+'/'+'0!_!cv!$!'+indVal+'$_$'+sindVal+'$!_!$'+query;

        if(query != ''){
            $('#compare-cv-search-input-close').removeClass('hide');
        }
        else {
            $('#compare-cv-search-input-close').addClass('hide');
        }

        //alert(srchUrl);
        if(query != '' && query.length>=1)
        {
            $.ajax({
                url:srchUrl,
                method:"GET",
                data: "",
                success:function(data){
                    //alert(data);
                    $('#brandNameList').fadeIn();
                    $('#brandNameList').html(data);
                    if(window.location.href.indexOf('display-cv/')>-1)
                    {
                        var crnCVName = $(".brand_logoDiv_captionDiv").find("h4.lp_section_01_caption").text();
                        //console.log(crnCVName);
                        crnCVName = crnCVName.replace(/^\s+/g, '');
                        //console.log(crnCVName);
                        crnCVName = crnCVName.replace(/\s+$/g, '');
                        //console.log(crnCVName);
                        $("#brandNameList").find(".compare-search-list-ul").find("li").each(function(){
                            if($(this).text() == crnCVName)
                            {
                                $(this).css("display","none");
                            }
                        });
                    }
                    $('#brandNameList').removeClass("hide");
                },
                complete: function(){}
            });
        }
        else
        {
            $('#brandNameList').fadeOut();
            $('#brandNameList').addClass("hide");
            $('#brandNameList').removeAttr("style");
            $('#brandNameList').find("ul").remove();
        }
    });
});
if(window.location.href.indexOf("yearwise-best-in-audio-brands") > -1) {
    /* $('#searchYearwiseBestAudioBrandInput').keyup(function(){

        var query = $("#searchYearwiseBestAudioBrandInput").val();
        var curntYear = $("#currentYear").val();
        var srchUrl = $("#srchUrl").val()+'/'+query+'$_$'+curntYear;
        var liLength = 0;
        var listId = 1;
        if(query != '' && query.length>=1)
        {
            //var _token = $('input[name="_token"]').val();
            $.ajax({
                url:srchUrl,
                method:"GET",
                data: "",
                success:function(data){
                    $("#search-input-close").removeClass("hide");
                    $('#cvNameList').fadeIn();
                    $('#cvNameList').html(data);
                    $('#cvNameList').removeClass("hide");
                    //$('.welCome_search_autocomplete').find('.search-input').css('background-image', 'none');
                },
                complete: function(){

                    var id = 1;
                    var li = $(".divDropDown_LP").find('.dropdown-menu').find('li');
                    $(li).each(function( index ) {
                        $(this).addClass("element");
                        $(this).attr('id', 'list_'+ id++);
                    });

                    $(".divDropDown_LP").find('.dropdown-menu').find('li:first-child').addClass("element activeDropDownListItem");


                    $('#searchYearwiseBestAudioBrandInput').on('keydown', function(e){
                        liLength = $(".divDropDown_LP").find('.dropdown-menu').find('li').length;
                        if (e.which == 40) {
                            console.log(listId + " : Down : " + liLength+"|"+(liLength-1));

                            if(listId <= (liLength) && liLength != 0) {
                                if(listId==(liLength)){
                                    PosEnd(searchYearwiseBestAudioBrandInput, 'down');
                                }
                                $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                                listId++;
                            }
                            else {
                                liLength = 0;
                            }


                            $('#searchYearwiseBestAudioBrandInput').val($(".activeDropDownListItem a").text());
                        } else if (e.which == 38) {
                            console.log(listId + " : Up : " + liLength+"|"+(liLength-1));
                            if(listId > 0 && listId != 1){
                                if(listId==2){
                                    PosEnd(searchYearwiseBestAudioBrandInput, 'up');
                                }
                                console.log("#list_"+listId + " : UP Before");
                                listId--;
                                //console.log("#list_"+listId + " : UP After");
                                $('.divDropDown_LP').find('li').not($('.divDropDown_LP').find("#list_"+listId).addClass("activeDropDownListItem")).removeClass("activeDropDownListItem");
                            }
                            $('#searchYearwiseBestAudioBrandInput').val($(".activeDropDownListItem a").text());
                        }
                        $(".divAutocompleteScroll").scrollTop(250);//set to top
                        $(".divAutocompleteScroll").scrollTop($('.activeDropDownListItem:first').offset().top-$(".divAutocompleteScroll").height());
                        //then set equal to the position of the selected element minus the height of scrolling div

                    });
                }
            });
        }
        else
        {
            $("#search-input-close").addClass("hide");
            $('#cvNameList').fadeOut();
            $('#cvNameList').addClass("hide");
            $('#cvNameList').removeAttr("style");
            $('#cvNameList').find("ul").remove();
            //$('.welCome_search_autocomplete').find('.search-input').css('background-image', '');
        }
    }); */
    sortBABDropdownTitle();
}

if(window.location.href.indexOf("best-in-audio-brands") > -1) {
    $('#search-best-audio-brand-input').keyup(function(){

        var query = $("#search-best-audio-brand-input").val();
        var srchUrl = $("#srchUrl").val()+'/'+query;
        if(query != '' && query.length>=1)
        {
            //var _token = $('input[name="_token"]').val();
            $.ajax({
                url:srchUrl,
                method:"GET",
                data: "",
                success:function(data){
                    $("#search-input-close").removeClass("hide");
                    $('#cvNameList').fadeIn();
                    $('#cvNameList').html(data);
                    $('#cvNameList').removeClass("hide");
                    //$('.welCome_search_autocomplete').find('.search-input').css('background-image', 'none');
                },
                complete: function(){}
            });
        }
        else
        {
            $("#search-input-close").addClass("hide");
            $('#cvNameList').fadeOut();
            $('#cvNameList').addClass("hide");
            $('#cvNameList').removeAttr("style");
            $('#cvNameList').find("ul").remove();
            //$('.welCome_search_autocomplete').find('.search-input').css('background-image', '');
        }
    });
}
searchAutocomplete();
function searchAutocomplete() {
    $(".search_autocomplete").focusout(function() {
        setTimeout(function() {
            $(".search-box-autocomplete").find(".search-input").val("");
            $(".search-box-autocomplete").find(".search-input-close").addClass("hide");
            $(".search-box-autocomplete").find(".welCome_search_autocomplete").find(".cvNameList ul").remove();
            $('#cvNameList').addClass("hide");
            $('#cvNameList').removeAttr("style");
        }, 150);
    });
}

var isOpenBAB = false;
function sortBestAudioBrands(event) {
    event.stopPropagation();
    if(isOpenBAB) {
        $(".sBABContainerInner").css("display", "none");
        $(".btnDownloadPDF").find("img").css("transform", "rotateZ(0deg)");
        isOpenBAB = false;
    }
    else {
        $(".sBABContainerInner").css("display", "block");
        $(".btnDownloadPDF").find("img").css("transform", "rotateZ(180deg)");
        isOpenBAB = true;
    }
}

function sortBABDropdownTitle() {
    if(window.location.href.indexOf('$_$cmRlc2M=') > -1){
        var liId = 1;
    }
    if(window.location.href.indexOf('$_$cmFzYw==') > -1){
        var liId = 2;
    }
    if(window.location.href.indexOf('$_$bmFzYw==') > -1){
        var liId = 3;
    }
    if(window.location.href.indexOf('$_$bmRlc2M=') > -1){
        var liId = 4;
    }
    var currentSelText = $("#babSort_"+liId).find("a").text();
    $(".sBABContainer").find(".btnDownloadPDF").find(".txtTitleBABDropdown").text(currentSelText);
    $(".sBABContainerInner").css("display", "none");
    $(".btnDownloadPDF").find("img").css("transform", "rotateZ(0deg)");
    isOpenBAB = false;
}


/* function openSharingPopup()
{
    $("#modal_share").removeClass("hide");
    $("#modal_share").addClass("show");
    $("#modal_share_overlay").removeClass("hide");
    $("#modal_share_overlay").addClass("show");
}

function closeSharingPopup()
{
    $("#modal_share").removeClass("show");
    $("#modal_share").addClass("hide");
    $("#modal_share_overlay").removeClass("show");
    $("#modal_share_overlay").addClass("hide");
} */

$("#modal_compare").find(".modal-body").on("click", function(){
    if(window.location.href.indexOf('display-cv/')>-1 || window.location.href.indexOf('display-sub-industry-cv/')>-1 || window.location.href.indexOf('display-sonic-logo/')>-1)
    {
        $("#indNameList").css("display","none");
        //$("#sindNameList").addClass("hide");
        //console.log($("#sindNameListTab").text()+"|"+$("#sindNameList").text());
        /* if($("#sindNameListTab").text().indexOf('Select Sub Industry')>-1 && $("#sindNameList").text() != '')
        {
            //$("#sindNameListTab").css("color","rgb(114, 114, 114)");
            $("#compare-sind-search-input-close").addClass("hide");
        }
        else
        {
            if($("#sindNameList").text() != '')
            {
                $("#sindNameListTab").css("color","#ffffff");
                $("#compare-sind-search-input-close").addClass("hide");
            }
        } */
        //$('.sindNameList').addClass('hide');
        $("#brandNameList").css("display","none");
    }
    else if(window.location.href.indexOf('display-industry-cv/')>-1)
    {
        $("#indNameList").css("display","none");
        //console.log($("#sindNameListTab").text()+"|"+$("#sindNameList").text())
        /* if($("#sindNameListTab").text().indexOf('Select Sub Industry')>-1 && $("#sindNameList").text() != '')
        {
            //$("#sindNameListTab").css("color","rgb(114, 114, 114)");
            $("#compare-sind-search-input-close").addClass("hide");
        }
        else
        {
            if($("#sindNameList").text() != '')
                $("#compare-sind-search-input-close").removeClass("hide");
        } */
        $("#brandNameList").css("display","none");
    }
});

function openPopup(popupId)
{
    /* $("#"+popupId).removeClass("hide");
    $("#"+popupId).addClass("show");
    $("#modal_overlay").removeClass("hide");
    $("#modal_overlay").addClass("show"); */

    if(popupId == "modal_logout" || popupId == "modal_deleteAccount" || popupId == "modal_compare" || popupId == "modal_share" || popupId == "modal_create_archive" || popupId == "request_snapshot" || popupId=="done_snapshot" || popupId == "request_brand") {

        $("#"+popupId).removeClass("hide");
        $("#"+popupId).addClass("show");
        $("#modal_overlay").removeClass("hide");
        $("#modal_overlay").addClass("show");

        if(popupId == "modal_compare")
        {
            $("#modal_compare").append(getLoader());
            if(window.location.href.indexOf('display-cv/')>-1 || window.location.href.indexOf('display-sub-industry-cv/')>-1 || window.location.href.indexOf('display-sonic-logo/')>-1)
            {
                console.log($("#cvYear").val()+"|"+$("#cvIndId").val()+"||"+$("#cvSindId").val());
                $("#compare-ind-search-input").val($("#cvIndId").val().split("$_$")[1]+" "+$("#cvYear").val());
                $("#compare-ind-search-input-close").removeClass("hide");
                $("#compare_industry_cv_id_val").val($("#cvIndId").val().split("$_$")[0]+"$_$"+btoa($("#cvYear").val()));

                //if(window.location.href.indexOf('display-sub-industry-cv/')>-1)
                    //addLoader("#modal_compare");
            }
            else if(window.location.href.indexOf('display-industry-cv/')>-1)
            {
                //console.log($("#cvIndId").val()+ "|"+$("#cvIndId").val().split("$_$")[1]+"||"+$("#cvIndId").val().split("$_$")[1].split("#_#")[1]);
                $("#compare-ind-search-input").val($("#cvIndId").val().split("$_$")[1].replace("#_#", " "));
                $("#compare-ind-search-input-close").removeClass("hide");
                $("#compare_industry_cv_id_val").val($("#cvIndId").val().split("$_$")[0]+"$_$"+btoa($("#cvIndId").val().split("$_$")[1].split("#_#")[1]));
            }
            var query = $("#compare_industry_cv_id_val").val();
            //var chkSindUrl = $("#chkSindUrl").val()+'/'+query;
            var srchCvIndSindUrl = $("#srchCvIndSindUrl").val()+'/'+'0!_!sind!$!'+query;
            //alert(srchCvIndSindUrl);
            $.ajax({
                url:srchCvIndSindUrl,
                method:"GET",
                data: "",
                success:function(data){
                    //alert(data);
                    if(data != '')
                    {
                        $("#sindNameList").html(data);
                        $('#sindNameListTab').attr("onclick","showSindNameList()");
                        $('#compare_sub_industry_dropdown').removeAttr("style");
                        $('.sindNameListTab').css("color", "#ffffff");
                        $('#compare_sub_industry_dropdown').css("cursor","pointer");
                    }
                    else
                    {
                        $('#compare_sub_industry_dropdown').css("pointer-events","none");
                        $('#compare_sub_industry_dropdown').css("cursor","not-allowed");
                        $('#compare_sub_industry_dropdown').click(false);
                    }
                },
                complete: function(){
                    if(window.location.href.indexOf('display-cv/')>-1 || window.location.href.indexOf('display-sub-industry-cv/')>-1 || window.location.href.indexOf('display-sonic-logo/')>-1)
                    {
                        if($("#cvSindId").val() != 0)
                        {
                            $("#sindNameListTab").text($("#cvSindId").val().split("$_$")[1]+" "+$("#cvYear").val());
                            $("#sindNameListTab").css("color","#ffffff");
                            $("#compare-sind-search-input-close").removeClass("hide");
                            $("#compare-sub-industry-dropdown").removeAttr("style");
                            $("#compare_sub_industry_cv_id_val").val($("#cvSindId").val().split("$_$")[0]+"$_$"+btoa($("#cvYear").val()));
                            //if(window.location.href.indexOf('display-sub-industry-cv/')>-1)
                                //removeLoader("#modal_compare");
                        }

                    }
                    $("#compare_btn").removeAttr("disabled");
                    if($("#compare_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_sub_industry_cv_id_val").val() == '')
                    {
                        $("#compare_option").val('industry_cv');
                        var actionUrl = $("#compare_industry_form").val();
                        $("#modal_compare").find("form").attr("action",actionUrl);
                    }
                    else if($("#compare_sub_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '')
                    {
                        $("#compare_option").val('sub_industry_cv');
                        var actionUrl = $("#compare_sub_industry_form").val();
                        $("#modal_compare").find("form").attr("action",actionUrl);
                    }
                    else
                    {
                        $("#compare_option").val('brand_cv');
                        var actionUrl = $("#compare_cv_form").val();
                        $("#modal_compare").find("form").attr("action",actionUrl);
                    }
                    removeLoader("#modal_compare");
                }
            });

        }

        if(popupId=="request_snapshot"){
            var searchInput = $("#searchInput").val();
            $("#request_snapshot_brand_name").val(searchInput);
            $('#request_snapshot_brand_name_clear').removeClass("hide");
        }


    }
    else {
        $(".graphmodal").find("canvas").attr("style", "");
        $("#"+popupId).css("visibility", "visible");
        $("#modal_overlay").removeClass("hide");
        $("#modal_overlay").addClass("show");
    }
}

function closePopup(popupId)
{
    /* $("#"+popupId).removeClass("show");
    $("#"+popupId).addClass("hide");
    $("#modal_overlay").removeClass("show");
    $("#modal_overlay").addClass("hide"); */

    if(popupId == "modal_logout" || popupId == "modal_deleteAccount" || popupId == "modal_compare" || popupId == "modal_share" || popupId == "modal_create_archive" || popupId == "request_snapshot" || popupId =="done_snapshot" || popupId == "request_brand") {
        $("#"+popupId).removeClass("show");
        $("#"+popupId).addClass("hide");
        $("#modal_overlay").removeClass("show");
        $("#modal_overlay").addClass("hide");
        if(popupId == "modal_compare")
        {
            clearCompareSearchListDropdown('ind');
        }
        if(popupId == "request_snapshot")
        {
            $("#request_snapshot_brand_name").val('');
            $("#request_snapshot_company_url").val('');
            $("#request_snapshot_market").val('');
            $("#request_snapshot_year").val('');
            $("#url_check").addClass("hide");

            var elementid =  document.getElementById("searchInput");
            if(!elementid.classList.contains("displayLauncher")){
                $("#searchInput").val('');
            }

            $('#request_snapshot_company_url_clear').addClass("hide");
            $('#request_snapshot_market_clear').addClass("hide");
            $('#request_snapshot_year_clear').addClass("hide");
            $('#url_should_be').addClass('hide');
            $("#request_snapshot_button").attr("disabled","true");
        }

        if(popupId == "request_brand")
            {
                $("#request_brand_name").val('');
                $("#request_brand_desc").val('');
                $("#request_brand_button").attr("disabled","true");

            }
    }
    else {
        $("#"+popupId).css("visibility", "hidden");
        $("#modal_overlay").removeClass("show");
        $("#modal_overlay").addClass("hide");
    }
}
function showCompareDropDown(dropdownID)
{
    //console.log("dropdownID"+dropdownID);
    var removeHideID = '';
    var addHideID = '';
    if(dropdownID == 'compare_cv_dropdown')
    {
        removeHideID = 'compare_cv_dropdown';
        addHideID = 'compare_industry_dropdown';
        var actionUrl = $("#compare_cv_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    else
    {
        removeHideID = 'compare_industry_dropdown';
        addHideID = 'compare_cv_dropdown';
        var actionUrl = $("#compare_industry_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    //console.log("removeHideID"+removeHideID+"--addHideID"+addHideID);
    $("#"+removeHideID).removeClass("hide");
    $("#"+addHideID).addClass("hide");
}
var playstatusflagCompare = false;
function playPauseAudioCompare(id)
{
    $(this).toggleClass("down");
    //var audio = new Audio($("#"+id).find("source").attr("src"));
    if (playstatusflagCompare == false){
        var currentPlayingID = $(".audio-pause-button").parent().find(".audio-player").find("audio").attr("id");
        //console.log("currentPlayingID"+currentPlayingID);
        if(currentPlayingID != undefined) {
            document.getElementById(currentPlayingID).pause();
            playstatusflag = false;
            //console.log("playstatusflag"+playstatusflag+" : playstatusflagCompare"+playstatusflagCompare);
            $("#"+currentPlayingID).parent().parent().find("span").removeClass("audio-pause-button");
            $("#"+currentPlayingID).parent().parent().find("span").addClass("audio-player-button");
        }

        document.getElementById(id).play();
        playstatusflagCompare = true;
        $("#"+id).parent().parent().find("span").removeClass("audio-player-button");
        $("#"+id).parent().parent().find("span").addClass("audio-pause-button");
    }
    else {
        document.getElementById(id).pause();
        playstatusflagCompare = false;
        $("#"+id).parent().parent().find("span").removeClass("audio-pause-button");
        $("#"+id).parent().parent().find("span").addClass("audio-player-button");
    }
    var aud = document.getElementById(id);
    aud.onended = function() {
        playstatusflagCompare = false;
        $("#"+id).parent().parent().find("span").removeClass("audio-pause-button");
        $("#"+id).parent().parent().find("span").addClass("audio-player-button");
    };
}

var isBIndMenuShow = false;
showBrowseIndMenuMobile();
function showBrowseIndMenuMobile(){
    $(".lp_browseIndFloatingIcon").click(function(){
        if(isBIndMenuShow){
            $(".lp_browseindustries_col .l_col").removeAttr("style");
            $(".indMenu_hol_btnclose").removeAttr("style");
            isBIndMenuShow = false;
        }
        else {
            $(".lp_browseindustries_col .l_col").css("margin-left", "0%");
            $(".indMenu_hol_btnclose").css("display", "inline-block");
            isBIndMenuShow = true;
        }
    })
}
$(".indMenu_hol_btnclose").click(function(){
    $(".lp_browseIndFloatingIcon").click();
});

var isMenuShow = false;
showMenuMobile();
function showMenuMobile(){
    var timeout = 1000;
    setTimeout(function(){
        var winw = $(window).width();
        if(winw <= 767) {
            $(".lp_body_col_l_mob").slideUp();
            $(".lp_MobileMenuIcon").click(function(){
                if(isMenuShow){
                    //$(".lp_body_col_l_mob").removeAttr("style");
                    $(".lp_body_col_l_mob").slideUp(600);
                    $(".lp_body_col_l_mob").find(".lp_header_rp .lp_menu").find("li").fadeOut(300);
                    $(".lp_MobileMenuIcon").find("i").attr("class", "fa fa-bars");
                    isMenuShow = false;
                }
                else {
                    //$(".lp_body_col_l_mob").css("margin-left", "101%");
                    $(".lp_body_col_l_mob").slideDown(300);
                    $(".lp_body_col_l_mob").find(".lp_header_rp .lp_menu").find("li").fadeIn(600);
                    $(".lp_MobileMenuIcon").find("i").attr("class", "fa fa-times");
                    isMenuShow = true;
                }
            })
        }
        else {
            $(".lp_body_col_l_mob").removeAttr("style");
            $(".lp_body_col_l_mob").find(".lp_header_rp .lp_menu").find("li").removeAttr("style");
        }
    }, timeout);
}

function addReplaceDisableInBestAudioBrands(srNo, cvId, cvYear, type, $cvdata) {
    if(type=='replace')
    {
        var titleContent = "Replace brand into Best in Audio Brands List of "+atob(cvYear);
    }
    else if(type == 'delete')
    {
        var titleContent = "Remove brand from Best in Audio Brands List of "+atob(cvYear);
    }
    else
    {
        var titleContent = "Add brand into Best in Audio Brands List of "+atob(cvYear);
    }

    _popDialog = BootstrapDialog.show({
        id: "addReplaceDisableInBestAudioBrands",
        title: titleContent,
        //type: getDialogType("PRIMARY"),
        //size: BootstrapDialog.SIZE_WIDE,
        message: function () {

            var $message = $('<div><div id="bodyContent"></div><form id="addReplaceDisableInBestAudioBrandsForm_'+srNo.split("$#$")[0]+'" action="#" method="post"><input type="hidden" id="'+srNo.split("$#$")[0]+'_token" name="_token" value=""><input type="hidden" name="cv_id" id="cv_id_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="old_cv_id" id="old_cv_id_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="tbl_id" id="tbl_id_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="cv_year" id="cv_year_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="old_cv_name" id="old_cv_name_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="cv_name" id="cv_name_'+srNo.split("$#$")[0]+'" value=""><input type="hidden" name="audio_brand_efficiency_percentage_number" id="audio_brand_efficiency_percentage_number_'+srNo.split("$#$")[0]+'"><input type="hidden" name="status_type" id="status_type" value=""></form></div>');
            //var tab1_Active = 'active', tab2_Active = '';

            return $message;
        },
        closeByBackdrop: !1,
        closable: !0,
        buttons: [
           {
               label: 'NO',
               cssClass: 'btn btn-default btn-sm hide',
               action: function (dialog) {
                   dialog.close();
               }
           },
           {
                label: 'Yes',
                cssClass: 'btn btn-primary btn-sm hide',
                action: function (dialog) {
                    $("#addReplaceDisableInBestAudioBrandsForm_"+srNo.split("$#$")[0]).submit();
                }
            }
        ],
        onshown: function (dialogRef) {
            //getList(listId);
            console.log("---"+"#cv_year_"+srNo.split("$#$")[0]+"--------"+cvYear)
            $("#addReplaceDisableInBestAudioBrands").find("#cv_year_"+srNo.split("$#$")[0]).val(cvYear);
            $("#addReplaceDisableInBestAudioBrands").find("form").find("#"+srNo.split("$#$")[0]+"_token").val($("#csrf-token").attr("content"));
            $("#addReplaceDisableInBestAudioBrands").find("form").attr("action",$("#addBrandInBestAudio").val());
            $(function() {
                window.fs_test = $('.addCvIdInBestAudioBrands').fSelect();
            });
            if(type == "replace")
            {
                var $options = $("#cvDropDown > option").clone();
                $("#bodyContent").append('<select class="card_inputs addCvIdInBestAudioBrands" name="add_cv_id_in_best_audio_brands" id="add_cv_id_in_best_audio_brands"></select><input type="hidden" name="add_cv_id_in_best_audio_brands_val" id="add_cv_id_in_best_audio_brands_val"><div id="abepnDataHoldr" class="hide mtop10"><label>Audio Brand Efficiency Percentage Number:</label><input type="text" class="card_inputs" style="width:95%" name="abepn" id="abepn_'+srNo.split("$#$")[0]+'" maxlength="3" onkeyup="checkInputData('+srNo.split("$#$")[0]+', \'abepn\', event)">%</br><span id="errmsgNumber_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Only Digits allowed</span><span id="errmsgZero_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Percentage number can\'t be 0</span><span id="errmsg100_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Percentage number can\'t be more than 100</span></div><p class="hide warrningMsg"></p>');
                $('#add_cv_id_in_best_audio_brands').append($options);
                $("#addReplaceDisableInBestAudioBrands").find("#tbl_id_"+srNo.split("$#$")[0]).val(srNo.split("$#$")[0]);
                $("#addReplaceDisableInBestAudioBrands").find("#old_cv_name_"+srNo.split("$#$")[0]).val(srNo.split("$#$")[1]);
                $("#addReplaceDisableInBestAudioBrands").find("#old_cv_id_"+srNo.split("$#$")[0]).val(cvId);
                $("#addReplaceDisableInBestAudioBrands").find("input#status_type").val(srNo.split("$#$")[0]+"_replace");
            }
            else if(type == 'delete')
            {
                $("#addReplaceDisableInBestAudioBrands").find("#tbl_id_"+srNo.split("$#$")[0]).val(srNo.split("$#$")[0]);
                //$("#addReplaceDisableInBestAudioBrands").find("#old_cv_id_"+srNo.split("$#$")[0]).val(srNo.split("$#$")[1].split("$_$")[0]);
                $("#addReplaceDisableInBestAudioBrands").find("#old_cv_id_"+srNo.split("$#$")[0]).val(cvId);
                var cvName = atob(srNo.split("$_$")[1]);
                $("#addReplaceDisableInBestAudioBrands").find("input#status_type").val(srNo.split("$#$")[0]+"_delete");
                var warrningMsg = "Are you sure you want to remove<br>Brand <span style='font-size:18px; font-weight:bold;'>"+cvName+"</span> from best audio brands list of "+atob(cvYear)+"?";
                $("#bodyContent").append('<p class="hide warrningMsg" style="margin-top:15px; font-size:14px; text-align:center;"></p>');
                $(".warrningMsg").append("<p>"+warrningMsg+"</p>");
                $(".warrningMsg").removeClass("hide");
                $("#addReplaceDisableInBestAudioBrands").find(".btn").removeClass("hide");
            }
            else
            {
                var $options = $("#cvDropDown > option").clone();
                $("#bodyContent").append('<select class="card_inputs addCvIdInBestAudioBrands" name="add_cv_id_in_best_audio_brands" id="add_cv_id_in_best_audio_brands"></select><input type="hidden" name="add_cv_id_in_best_audio_brands_val" id="add_cv_id_in_best_audio_brands_val"><div id="abepnDataHoldr" class="hide mtop10"><label>Audio Brand Efficiency Percentage Number:</label><input type="text" class="card_inputs" style="width:95%" name="abepn" id="abepn_'+srNo.split("$#$")[0]+'" maxlength="3" onkeyup="checkInputData('+srNo.split("$#$")[0]+', \'abepn\', event)">%</br><span id="errmsgNumber_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Only Digits allowed</span><span id="errmsgZero_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Percentage number can\'t be 0</span><span id="errmsg100_'+srNo.split("$#$")[0]+'" class="mtop10" style="color:red; display:none; font-size: 12;">Percentage number can\'t be more than 100</span></div><p class="hide warrningMsg"></p>');
                $('#add_cv_id_in_best_audio_brands').append($options);
                $("#addReplaceDisableInBestAudioBrands").find("#tbl_id_"+srNo.split("$#$")[0]).val(srNo.split("$#$")[0]);
                $("#addReplaceDisableInBestAudioBrands").find("input#status_type").val(srNo.split("$#$")[0]+"_add");
            }
        },
        onhide: function (dialogRef) {
            //_isList1 = _isList2 = !0;
            $("#addReplaceDisableInBestAudioBrands").find("form").find("#"+srNo.split("$#$")[0]+"_token").val();
        }
    });
}


function checkInputData(srNo, id, event)
{
    var keyCode = event.which ? event.which : event.keyCode;
    console.log($("#"+id+"_"+srNo).val());
    if($("#"+id+"_"+srNo).val().length >= 1)
    {
        //if (event.which != 8 && event.which != 0 && (event.which >= 48 || event.which <= 57)) {
        console.log(keyCode);
            if (!(keyCode >= 48 && keyCode <= 57) && !(keyCode >= 96 && keyCode <= 105) && keyCode !=8 && keyCode !=0) {
                //display error message
                //$("#errmsg").html("Only Digits allowed").show().fadeOut(5000);
                if(id.indexOf("percentage_number")> -1)
                {
                    $("#errNumber_"+srNo).css("display","block");
                    $("#err100_"+srNo).css("display","none");
                    $("#errZero_"+srNo).css("display","none");
                    $("#percentage_number_"+srNo).val('');
                }
                else
                {
                    $("#errmsgNumber_"+srNo).css("display","block");
                    $("#errmsg100_"+srNo).css("display","none");
                    $("#errmsgZero_"+srNo).css("display","none");
                    $("#audio_brand_efficiency_percentage_number_"+srNo).val('');
                }
                return false;
            }
            /* if (String.fromCharCode(keyCode).match(/[^0-9]/g)) {
                $("#errmsg").html("Only Digits allowed").show().fadeOut(2000);
                return false;
            } */
            else
            {

                console.log($("#"+id+"_"+srNo).val());
                if($("#"+id+"_"+srNo).val() != 0)
                {
                    if($("#"+id+"_"+srNo).val() > 100)
                    {
                        //$("#audio_brand_efficiency_percentage_number_"+srNo).val('');
                        $(".warrningMsg").addClass("hide");
                        $("#addReplaceDisableInBestAudioBrands").find(".btn").addClass("hide");
                        //$("#errmsg").html("Percentage number can't be more than 100").show().fadeOut(5000);
                        if(id.indexOf("percentage_number")> -1)
                        {
                            $("#errNumber_"+srNo).css("display","none");
                            $("#err100_"+srNo).css("display","block");
                            $("#errZero_"+srNo).css("display","none");
                            $("#percentage_number_"+srNo).val('');
                        }
                        else
                        {
                            $("#errmsgNumber_"+srNo).css("display","none");
                            $("#errmsg100_"+srNo).css("display","block");
                            $("#errmsgZero_"+srNo).css("display","none");
                            $("#audio_brand_efficiency_percentage_number_"+srNo).val('');
                        }
                            return false;
                    }
                    else
                    {
                        if($("#"+id+"_"+srNo).val().length <=2 && $("#"+id+"_"+srNo).val() <= 100)
                        {
                            console.log("######"+$("#"+id+"_"+srNo).val()+"$$$$$$$$$$$$$$$$$$"+"#audio_brand_efficiency_percentage_number_"+srNo);
                            var abepnVal = $("#"+id+"_"+srNo).val();
                            console.log(abepnVal+"abepnVal");
                            $(".warrningMsg").removeClass("hide");
                            $("#addReplaceDisableInBestAudioBrands").find(".btn").removeClass("hide");

                            //$('#audio_brand_efficiency_percentage_number_'+srNo).attr('value', abepnVal);
                            if(id.indexOf("percentage_number")> -1)
                            {
                                $("#errNumber_"+srNo).css("display","none");
                                $("#err100_"+srNo).css("display","none");
                                $("#errZero_"+srNo).css("display","none");
                                $("#percentage_number_"+srNo).val(abepnVal);
                            }
                            else
                            {
                                $("#errmsgNumber_"+srNo).css("display","none");
                                $("#errmsg100_"+srNo).css("display","none");
                                $("#errmsgZero_"+srNo).css("display","none");
                                $("#audio_brand_efficiency_percentage_number_"+srNo).val(abepnVal);
                            }
                            //return true;
                        }
                    }
                }
                else
                {
                    //$("#audio_brand_efficiency_percentage_number_"+srNo).val('');
                    $(".warrningMsg").addClass("hide");
                    $("#addReplaceDisableInBestAudioBrands").find(".btn").addClass("hide");
                    //$("#errmsg").html("Percentage number can't be 0").show().fadeOut(5000);
                    if(id.indexOf("percentage_number")> -1)
                    {
                        $("#errNumber_"+srNo).css("display","none");
                        $("#err100_"+srNo).css("display","none");
                        $("#errZero_"+srNo).css("display","block");
                        $("#percentage_number_"+srNo).val('');
                    }
                    else
                    {
                        $("#errmsgNumber_"+srNo).css("display","none");
                        $("#errmsg100_"+srNo).css("display","none");
                        $("#errmsgZero_"+srNo).css("display","block");
                        $("#audio_brand_efficiency_percentage_number_"+srNo).val('');
                    }
                                return false;
                }

            }
    }
    else
    {
        if(id.indexOf("percentage_number")> -1)
        {
            $("#errNumber_"+srNo).css("display","none");
            $("#err100_"+srNo).css("display","none");
            $("#errZero_"+srNo).css("display","none");
            $("#percentage_number_"+srNo).val('');
        }
        else
        {
            $("#errmsgNumber_"+srNo).css("display","none");
            $("#errmsg100_"+srNo).css("display","none");
            $("#errmsgZero_"+srNo).css("display","none");
            $("#audio_brand_efficiency_percentage_number_"+srNo).val('');
        }
        //$("#audio_brand_efficiency_percentage_number_"+srNo).val('');
        $(".warrningMsg").addClass("hide");
        $("#addReplaceDisableInBestAudioBrands").find(".btn").addClass("hide");
    }
}

// On Click Zoom Mood and Genre graph at Display CV
var showMonthWiseGraph;
var showMonthWiseGraph_1;
var old_datalablesData_1 = '';
var old_datasetsContent_1 = '';
var old_toggellblArr_1 = '';
var old_highestMoodllbArr_1 = [];
var old_highestGenrellbArr_1 = [];

var old_datalablesData_2 = '';
var old_datasetsContent_2 = '';
var old_toggellblArr_2 = '';
var old_highestMoodllbArr_2 = [];
var old_highestGenrellbArr_2 = [];

var old_datalablesData_genre_cv1 = '';
var old_datasetsContent_genre_cv1 = [];
var old_toggellblArr_genre_cv1 = [];

var old_datalablesData_genre_cv2 = '';
var old_datasetsContent_genre_cv2 = [];
var old_toggellblArr_genre_cv2 = [];

var genreBgColorDataString ='';
var genreBgColorData = [];
var socialMediaDataExistArray = '';
$(".mggraph").on("click" , function(event){
    var monthId = $(this).attr("id");

    var currentMonthText = $("#"+monthId).find("span").text();
    $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text(currentMonthText);
    $(".sortZoomGraphM").css("display", "none");
    $(".btnZoomGraphM").find("img").css("transform", "rotateZ(0deg)");
    isOpenZoomGraphM = false;
        var mgLblArr = $("#mgLblArr").val();

        var mgUrl = $("#mgUrl").val()+'/'+monthId.split("_")[1]+'$'+$("#mgCvId").val();

        if(monthId.split("_")[1] !=0)
        {
            $.ajax({
                type: "GET",
                url: mgUrl,
                data: "",
                success: function(data) {
                    console.log("Mood Graph Data"+data);

                    var dataArr = data.split("|");
                    console.log(dataArr.length);
                    var ytDataString = '';
                    var igDataString = '';
                    var ttDataString = '';
                    var twtDataString = '';
                    var mAvgDataString = '';
                    var highestMoodllbArr = [];

                    var datalablesData_1_String = 'aggressive,calm,chilled,energetic,epic,happy,romantic,sad,scary,sexy,ethereal,uplifting';
                    var datalablesData_1 = datalablesData_1_String.split(',');

                    for(var i=0; i<dataArr.length; i++)
                    {
                        if(i==0 && dataArr[i]!=0)
                        {
                            ytDataString = dataArr[i];
                            var ytDataset = ytDataString.split(',');

                            var maxVal = Math.max.apply(Math,ytDataset);
                            //console.log("maxVal",maxVal);
                            var lblPostion = ytDataset.findIndex(data => data == maxVal);
                            //console.log("lblPostion",lblPostion);
                            highestMoodllbArr.push(datalablesData_1[lblPostion]);
                            //console.log("highestMoodllbArr",highestMoodllbArr);
                        }
                        if(i==1 && dataArr[i]!=0)
                        {
                            igDataString = dataArr[i];
                            var igDataset = igDataString.split(',');

                            var maxVal = Math.max.apply(Math,igDataset);
                            //console.log("maxVal",maxVal);
                            var lblPostion = igDataset.findIndex(data => data == maxVal);
                            //console.log("lblPostion",lblPostion);
                            highestMoodllbArr.push(datalablesData_1[lblPostion]);
                            //console.log("highestMoodllbArr",highestMoodllbArr);
                        }
                        if(i==2 && dataArr[i]!=0)
                        {
                            ttDataString = dataArr[i];
                            var ttDataset = ttDataString.split(',');

                            var maxVal = Math.max.apply(Math,ttDataset);
                            //console.log("maxVal",maxVal);
                            var lblPostion = ttDataset.findIndex(data => data == maxVal);
                            //console.log("lblPostion",lblPostion);
                            highestMoodllbArr.push(datalablesData_1[lblPostion]);
                            //console.log("highestMoodllbArr",highestMoodllbArr);
                        }
                        if(i==3 && dataArr[i]!=0)
                        {
                            twtDataString = dataArr[i];
                            var twtDataset = twtDataString.split(',');

                            var maxVal = Math.max.apply(Math,twtDataset);
                            //console.log("maxVal",maxVal);
                            var lblPostion = twtDataset.findIndex(data => data == maxVal);
                            //console.log("lblPostion",lblPostion);
                            highestMoodllbArr.push(datalablesData_1[lblPostion]);
                            //console.log("highestMoodllbArr",highestMoodllbArr);
                        }
                        if(i==4 && dataArr[i]!=0)
                        {
                            mAvgDataString = dataArr[i];
                            var mAvgDataset = mAvgDataString.split(',');

                            var maxVal = Math.max.apply(Math,mAvgDataset);
                            //console.log("maxVal",maxVal);
                            var lblPostion = mAvgDataset.findIndex(data => data == maxVal);
                            //console.log("lblPostion",lblPostion);
                            highestMoodllbArr.push(datalablesData_1[lblPostion]);
                            //console.log("highestMoodllbArr",highestMoodllbArr);
                        }
                    }

                    if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood all with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,2,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,2,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,3,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 2,3,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,2 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 1,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 2,3 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 2,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in mood 3,4 with agg"); toggellblArr_1 = ['Aggregate','TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in mood all"); toggellblArr_1 = ['YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '')
                    {
                        console.log("in mood 1,2,3"); toggellblArr_1 = ['YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 1,2,4"); toggellblArr_1 = ['YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 1,3,4"); toggellblArr_1 = ['YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 2,3,4"); toggellblArr_1 = ['Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '')
                    {
                        console.log("in mood 1,2"); toggellblArr_1 = ['YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '')
                    {
                        console.log("in mood 1,3"); toggellblArr_1 = ['YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 1,4"); toggellblArr_1 = ['YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '')
                    {
                        console.log("in mood 2,3"); toggellblArr_1 = ['Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 2,4"); toggellblArr_1 = ['Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '')
                    {
                        console.log("in mood 3,4"); toggellblArr_1 = ['TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '')
                    {
                        console.log("in mood 1"); toggellblArr_1 = ['YouTube'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '')
                    {
                        console.log("in mood 2"); toggellblArr_1 = ['Instagram'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '')
                    {
                        console.log("in mood 3"); toggellblArr_1 = ['TikTok'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(twtDataString != '')
                    {
                        console.log("in mood 4"); toggellblArr_1 = ['Twitter'];
                        datasetDataStringLength_1 = twtDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Twitter', data: twtDataset, borderColor: 'rgba(238, 198, 204, 1)', backgroundColor: 'rgba(238, 198, 204, 1)', pointBackgroundColor: '#eec6cc', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else
                    {

                    }
                    var chartId = "radarChart1";
                    radarChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestMoodllbArr);
                },
                complete: function(data){
                    console.log("Mood Graph Data"+data);

                }
            });
        }
        else
        {
            var chartId = "radarChart1";
            //console.log("old_highestMoodllbArr_1",old_highestMoodllbArr_1);
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1);
        }
});

$(".gggraph").on("click" , function(event){
    var monthId = $(this).attr("id");

    var currentMonthText = $("#"+monthId).find("span").text();
    $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text(currentMonthText);
    $(".sortZoomGraphM").css("display", "none");
    $(".btnZoomGraphM").find("img").css("transform", "rotateZ(0deg)");
    isOpenZoomGraphM = false;


        var ggLblArr = $("#ggLblArr").val();

        var ggUrl = $("#ggUrl").val()+'/'+monthId.split("_")[1]+'$'+$("#ggCvId").val();
        if(monthId.split("_")[1] !=0)
        {
            $.ajax({
                type: "GET",
                url: ggUrl,
                data: "",
                success: function(data) {
                    console.log("Genre Graph Data"+data);

                    var dataArr = data.split("|");
                    console.log(dataArr.length);
                    var ytDataString = '';
                    var igDataString = '';
                    var ttDataString = '';
                    var twtDataString = '';
                    var mAvgDataString = '';
                    var highestGenrellbArr = [];

                    datasetsContentAggr1 = [];
                    datasetsContentYt1 = [];
                    datasetsContentIg1 = [];
                    datasetsContentTt1 = [];
                    datasetsContentTwt1 = [];

                    var datalablesData_1_String = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                    var datalablesData_1 = datalablesData_1_String.split(',');
                    var datasetsContent_1 = [];
                    for(var i=0; i<dataArr.length; i++)
                    {
                        if(i==0 && dataArr[i]!=0)
                        {
                            ytDataString = dataArr[i];
                            var ytDataset = ytDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ytDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ytDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==1 && dataArr[i]!=0)
                        {
                            igDataString = dataArr[i];
                            var igDataset = igDataString.split(',');

                            var maxGVal = Math.max.apply(Math,igDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = igDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==2 && dataArr[i]!=0)
                        {
                            ttDataString = dataArr[i];
                            var ttDataset = ttDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ttDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ttDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==3 && dataArr[i]!=0)
                        {
                            twtDataString = dataArr[i];
                            var twtDataset = twtDataString.split(',');

                            var maxGVal = Math.max.apply(Math,twtDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = twtDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==4 && dataArr[i]!=0)
                        {
                            mAvgDataString = dataArr[i];
                            var mAvgDataset = mAvgDataString.split(',');

                            var maxGVal = Math.max.apply(Math,mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = mAvgDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }

                    }

                    if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre all with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                        //console.log(datasetsContent_1, " ggg");
                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 3,4 with agg"); toggellblArr_1 = ['Aggregate','TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<mAvgDataset.length; i++) {
                            datasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre all"); toggellblArr_1 = ['YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,2,3"); toggellblArr_1 = ['YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,2,4"); toggellblArr_1 = ['YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,3,4"); toggellblArr_1 = ['YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,3,4"); toggellblArr_1 = ['Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && igDataString != '')
                    {
                        console.log("in genre 1,2"); toggellblArr_1 = ['YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,3"); toggellblArr_1 = ['YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(ytDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,4"); toggellblArr_1 = ['YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 2,3"); toggellblArr_1 = ['Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,4"); toggellblArr_1 = ['Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 3,4"); toggellblArr_1 = ['TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else if(ytDataString != '')
                    {
                        console.log("in genre 1"); toggellblArr_1 = ['YouTube'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ytDataset.length; i++) {
                            datasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                    }
                    else if(igDataString != '')
                    {
                        console.log("in genre 2"); toggellblArr_1 = ['Instagram'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<igDataset.length; i++) {
                            datasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                    }
                    else if(ttDataString != '')
                    {
                        console.log("in genre 3"); toggellblArr_1 = ['TikTok'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<ttDataset.length; i++) {
                            datasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(twtDataString != '')
                    {
                        console.log("in genre 4"); toggellblArr_1 = ['Twitter'];
                        datasetDataStringLength_1 = twtDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Twitter', data: twtDataset, borderColor: 'rgba(238, 198, 204, 1)', backgroundColor: 'rgba(238, 198, 204, 1)', pointBackgroundColor: '#eec6cc', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };
                        for(var i=0; i<twtDataset.length; i++) {
                            datasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                            datasetsContent_1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else {

                    }
                    var datalablesDataArr = datalablesData_1_String.split(',');
                    var datalablesData_1 = [];
                    for (var i = 0; i<datalablesDataArr.length; i++)
                    {
                        console.log(datalablesDataArr[i]);
                        var pattern = new RegExp("^(?=.*[A-Z])$");
                        if (/[A-Z]/.test(datalablesDataArr[i])) {
                            s = datalablesDataArr[i].replace(/([A-Z])/g, ',$1').trim();
                            console.log(s.split(','));
                            //datalablesData_1.push(s.split(','));
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                        else
                        {
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                    }
                    var chartId = "radarChart2";
                    radarChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestGenrellbArr, "zoom-in", 'gggraph');
                },
                complete: function(data){
                    //console.log("Genre Graph Data"+data);
                }
            });
        }
        else
        {
            var chartId = "radarChart2";
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, "zoom-in", 'zoomGraph');
        }
});

function getGenreGraphData(cv, mnth)
{
    var monthId = mnth;

    //alert(monthId+":"+cv);

    var currentMonthText = $("#"+monthId).find("span").text();
    $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text(currentMonthText);
    $(".sortZoomGraphM").css("display", "none");
    $(".btnZoomGraphM").find("img").css("transform", "rotateZ(0deg)");
    isOpenZoomGraphM = false;


        var ggLblArr = $("#ggLblArr").val();

        var ggUrl = $("#"+cv+"_ggUrl").val()+'/'+monthId.split("_")[1]+'$'+$("#"+cv+"_ggId").val();
        if(monthId.split("_")[1] !=0)
        {
            $.ajax({
                type: "GET",
                url: ggUrl,
                data: "",
                success: function(data) {
                    console.log("Genre Graph Data"+data);

                    var dataArr = data.split("|");
                    console.log(dataArr.length);
                    var ytDataString = '';
                    var igDataString = '';
                    var ttDataString = '';
                    var twtDataString = '';
                    var mAvgDataString = '';
                    var highestGenrellbArr = [];

                    var datalablesData_1_String = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                    var datalablesData_1 = datalablesData_1_String.split(',');

                    for(var i=0; i<dataArr.length; i++)
                    {
                        if(i==0 && dataArr[i]!=0)
                        {
                            mAvgDataString = dataArr[i];
                            var mAvgDataset = mAvgDataString.split(',');

                            var maxGVal = Math.max.apply(Math,mAvgDataset);
                            console.log("mAvgDataString",mAvgDataString);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = mAvgDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==1 && dataArr[i]!=0)
                        {
                            ytDataString = dataArr[i];
                            var ytDataset = ytDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ytDataset);
                            console.log("mAvgDataString",mAvgDataString);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ytDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==2 && dataArr[i]!=0)
                        {
                            igDataString = dataArr[i];
                            var igDataset = igDataString.split(',');

                            var maxGVal = Math.max.apply(Math,igDataset);
                            console.log("mAvgDataString",mAvgDataString);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = igDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==3 && dataArr[i]!=0)
                        {
                            ttDataString = dataArr[i];
                            var ttDataset = ttDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ttDataset);
                            console.log("mAvgDataString",mAvgDataString);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ttDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }
                        if(i==4 && dataArr[i]!=0)
                        {
                            twtDataString = dataArr[i];
                            var twtDataset = twtDataString.split(',');

                            var maxGVal = Math.max.apply(Math,twtDataset);
                            console.log("mAvgDataString",mAvgDataString);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = twtDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestGenrellbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestGenrellbArr",highestGenrellbArr);
                        }

                    }

                    if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre all with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 3,4 with agg"); toggellblArr_1 = ['Aggregate','TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre all"); toggellblArr_1 = ['YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,2,3"); toggellblArr_1 = ['YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,2,4"); toggellblArr_1 = ['YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,3,4"); toggellblArr_1 = ['YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,3,4"); toggellblArr_1 = ['Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '')
                    {
                        console.log("in genre 1,2"); toggellblArr_1 = ['YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,3"); toggellblArr_1 = ['YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,4"); toggellblArr_1 = ['YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 2,3"); toggellblArr_1 = ['Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,4"); toggellblArr_1 = ['Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 3,4"); toggellblArr_1 = ['TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '')
                    {
                        console.log("in genre 1"); toggellblArr_1 = ['YouTube'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '')
                    {
                        console.log("in genre 2"); toggellblArr_1 = ['Instagram'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '')
                    {
                        console.log("in genre 3"); toggellblArr_1 = ['TikTok'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(twtDataString != '')
                    {
                        console.log("in genre 4"); toggellblArr_1 = ['Twitter'];
                        datasetDataStringLength_1 = twtDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Twitter', data: twtDataset, borderColor: 'rgba(238, 198, 204, 1)', backgroundColor: 'rgba(238, 198, 204, 1)', pointBackgroundColor: '#eec6cc', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else
                    {

                    }
                    var datalablesDataArr = datalablesData_1_String.split(',');
                    var datalablesData_1 = [];
                    for (var i = 0; i<datalablesDataArr.length; i++)
                    {
                        console.log(datalablesDataArr[i]);
                        var pattern = new RegExp("^(?=.*[A-Z])$");
                        if (/[A-Z]/.test(datalablesDataArr[i])) {
                            s = datalablesDataArr[i].replace(/([A-Z])/g, ',$1').trim();
                            console.log(s.split(','));
                            //datalablesData_1.push(s.split(','));
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                        else
                        {
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                    }
                    var chartId = cv+"GenreRadarChart";
                    compareRadarChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestGenrellbArr);
                },
                complete: function(data){
                    //console.log("Genre Graph Data"+data);
                }
            });
        }
        else
        {
            var chartId = cv+"GenreRadarChart";
            compareRadarChart(old_toggellblArr_cv1,old_datalablesData_cv1,old_datasetsContent_cv1,chartId,old_highestGenrellbArr_1);
        }
}

function getCompareMoodGenreGraphData(cv, mnth, type)
{
    var monthId = mnth;

    //alert(monthId+":"+cv);

    var currentMonthText = $("#"+monthId).find("span").text();
    $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text(currentMonthText);
    $(".sortZoomGraphM").css("display", "none");
    $(".btnZoomGraphM").find("img").css("transform", "rotateZ(0deg)");
    isOpenZoomGraphM = false;

    if(type=='mood')
    {
        var dataUrl = $("#"+cv+"_mgUrl").val()+'/'+monthId.split("_")[1]+'$'+$("#"+cv+"_mgId").val();
    }
    else
    {
        var dataUrl = $("#"+cv+"_ggUrl").val()+'/'+monthId.split("_")[1]+'$'+$("#"+cv+"_ggId").val();
    }
    if(monthId.split("_")[1] !=0)
    {
        $.ajax({
            type: "GET",
            url: dataUrl,
            data: "",
            success: function(data) {
                console.log("Graph Data"+data);

                var dataArr = data.split("|");
                console.log(dataArr.length);
                var ytDataString = '';
                var igDataString = '';
                var ttDataString = '';
                var twtDataString = '';
                var mAvgDataString = '';
                var highestllbArr = [];

                if(type=='mood')
                {
                    var datalablesData_1_String = 'aggressive,calm,chilled,energetic,epic,happy,romantic,sad,scary,sexy,ethereal,uplifting';
                    var datalablesData_1 = datalablesData_1_String.split(',');

                    for(var i=0; i<dataArr.length; i++)
                    {
                        if(i==0 && dataArr[i]!=0)
                        {
                            ytDataString = dataArr[i];
                            var ytDataset = ytDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ytDataset);
                            console.log("ytDataset",ytDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ytDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==1 && dataArr[i]!=0)
                        {
                            igDataString = dataArr[i];
                            var igDataset = igDataString.split(',');

                            var maxGVal = Math.max.apply(Math,igDataset);
                            console.log("igDataset",igDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = igDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==2 && dataArr[i]!=0)
                        {
                            ttDataString = dataArr[i];
                            var ttDataset = ttDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ttDataset);
                            console.log("ttDataset",ttDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ttDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==3 && dataArr[i]!=0)
                        {
                            twtDataString = dataArr[i];
                            var twtDataset = twtDataString.split(',');

                            var maxGVal = Math.max.apply(Math,twtDataset);
                            console.log("twtDataset",twtDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = twtDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==4 && dataArr[i]!=0)
                        {
                            mAvgDataString = dataArr[i];
                            var mAvgDataset = mAvgDataString.split(',');

                            var maxGVal = Math.max.apply(Math,mAvgDataset);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = mAvgDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                    }

                    if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in all with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,2,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,2,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,3,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 2,3,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,2 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 1,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 2,3 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 2,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in 3,4 with agg"); toggellblArr_1 = ['Aggregate','TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in all"); toggellblArr_1 = ['YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '')
                    {
                        console.log("in 1,2,3"); toggellblArr_1 = ['YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '')
                    {
                        console.log("in 1,2,4"); toggellblArr_1 = ['YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in 1,3,4"); toggellblArr_1 = ['YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in 2,3,4"); toggellblArr_1 = ['Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && igDataString != '')
                    {
                        console.log("in 1,2"); toggellblArr_1 = ['YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && ttDataString != '')
                    {
                        console.log("in 1,3"); toggellblArr_1 = ['YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '' && twtDataString != '')
                    {
                        console.log("in 1,4"); toggellblArr_1 = ['YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && ttDataString != '')
                    {
                        console.log("in 2,3"); toggellblArr_1 = ['Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '' && twtDataString != '')
                    {
                        console.log("in 2,4"); toggellblArr_1 = ['Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '' && twtDataString != '')
                    {
                        console.log("in 3,4"); toggellblArr_1 = ['TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ytDataString != '')
                    {
                        console.log("in 1"); toggellblArr_1 = ['YouTube'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(igDataString != '')
                    {
                        console.log("in 2"); toggellblArr_1 = ['Instagram'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(ttDataString != '')
                    {
                        console.log("in 3"); toggellblArr_1 = ['TikTok'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else if(twtDataString != '')
                    {
                        console.log("in 4"); toggellblArr_1 = ['Twitter'];
                        datasetDataStringLength_1 = twtDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Twitter', data: twtDataset, borderColor: 'rgba(238, 198, 204, 1)', backgroundColor: 'rgba(238, 198, 204, 1)', pointBackgroundColor: '#eec6cc', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                    }
                    else
                    {

                    }
                    var datalablesDataArr = datalablesData_1_String.split(',');
                    var datalablesData_1 = [];
                    for (var i = 0; i<datalablesDataArr.length; i++)
                    {
                        console.log(datalablesDataArr[i]);
                        var pattern = new RegExp("^(?=.*[A-Z])$");
                        if (/[A-Z]/.test(datalablesDataArr[i])) {
                            s = datalablesDataArr[i].replace(/([A-Z])/g, ',$1').trim();
                            console.log(s.split(','));
                            //datalablesData_1.push(s.split(','));
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                        else
                        {
                            datalablesData_1.push(datalablesDataArr[i]);
                        }
                    }

                    var chartId = cv+"MoodRadarChart";
                    console.log(toggellblArr_1, " toggellblArr_1 ", highestllbArr);
                    compareMoodChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestllbArr);
                }
                else
                {
                    var datalablesData_1_String = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                    var datalablesData_1 = datalablesData_1_String.split(',');

                    for(var i=0; i<dataArr.length; i++)
                    {
                        if(i==0 && dataArr[i]!=0)
                        {
                            ytDataString = dataArr[i];
                            var ytDataset = ytDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ytDataset);
                            console.log("ytDataset",ytDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ytDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==1 && dataArr[i]!=0)
                        {
                            igDataString = dataArr[i];
                            var igDataset = igDataString.split(',');

                            var maxGVal = Math.max.apply(Math,igDataset);
                            console.log("igDataset",igDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = igDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==2 && dataArr[i]!=0)
                        {
                            ttDataString = dataArr[i];
                            var ttDataset = ttDataString.split(',');

                            var maxGVal = Math.max.apply(Math,ttDataset);
                            console.log("ttDataset",ttDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = ttDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==3 && dataArr[i]!=0)
                        {
                            twtDataString = dataArr[i];
                            var twtDataset = twtDataString.split(',');

                            var maxGVal = Math.max.apply(Math,twtDataset);
                            console.log("twtDataset",twtDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = twtDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                        if(i==4 && dataArr[i]!=0)
                        {
                            mAvgDataString = dataArr[i];
                            var mAvgDataset = mAvgDataString.split(',');

                            var maxGVal = Math.max.apply(Math,mAvgDataset);
                            console.log("mAvgDataset",mAvgDataset);
                            console.log("maxGVal",maxGVal);
                            var glblPostion = mAvgDataset.findIndex(data => data == maxGVal);
                            console.log("glblPostion",glblPostion);
                            highestllbArr.push(datalablesData_1[glblPostion]);
                            console.log("highestllbArr",highestllbArr);
                        }
                    }

                    cv1DatasetsContentAggr1 = [];
                    cv1DatasetsContentYt1 = [];
                    cv1DatasetsContentIg1= [];
                    cv1DatasetsContentTt1= [];
                    cv1DatasetsContentTwt1= [];
                    cv1DatasetsContent1=[];

                    if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre all with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,2 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,3 with agg"); toggellblArr_1 = ['Aggregate','YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 1,4 with agg"); toggellblArr_1 = ['Aggregate','YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(igDataString != '' && ttDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,3 with agg"); toggellblArr_1 = ['Aggregate','Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(igDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 2,4 with agg"); toggellblArr_1 = ['Aggregate','Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ttDataString != '' && twtDataString != '' && mAvgDataString != '')
                    {
                        console.log("in genre 3,4 with agg"); toggellblArr_1 = ['Aggregate','TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Aggregate', data: mAvgDataset, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<mAvgDataset.length; i++)
                        {
                            cv1DatasetsContentAggr1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(mAvgDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre all"); toggellblArr_1 = ['YouTube','Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,2,3"); toggellblArr_1 = ['YouTube','Instagram','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,2,4"); toggellblArr_1 = ['YouTube','Instagram','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,3,4"); toggellblArr_1 = ['YouTube','TikTok','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(igDataString != '' && ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,3,4"); toggellblArr_1 = ['Instagram','TikTok','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: ttDataset, borderColor: 'rgba(167, 168, 169, 1', backgroundColor: 'rgba(167, 168, 169, 1', pointBackgroundColor: '#a7a8a9', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && igDataString != '')
                    {
                        console.log("in genre 1,2"); toggellblArr_1 = ['YouTube','Instagram'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 1,3"); toggellblArr_1 = ['YouTube','TikTok'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(ytDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 1,4"); toggellblArr_1 = ['YouTube','Twitter'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(igDataString != '' && ttDataString != '')
                    {
                        console.log("in genre 2,3"); toggellblArr_1 = ['Instagram','TikTok'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }

                    }
                    else if(igDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 2,4"); toggellblArr_1 = ['Instagram','Twitter'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ttDataString != '' && twtDataString != '')
                    {
                        console.log("in genre 3,4"); toggellblArr_1 = ['TikTok','Twitter'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5},{ label: 'Twitter', data: twtDataset, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }
                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }

                    }
                    else if(ytDataString != '')
                    {
                        console.log("in genre 1"); toggellblArr_1 = ['YouTube'];
                        datasetDataStringLength_1 = ytDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'YouTube', data: ytDataset, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ytDataset.length; i++)
                        {
                            cv1DatasetsContentYt1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ytDataset[i])});
                        }
                    }
                    else if(igDataString != '')
                    {
                        console.log("in genre 2"); toggellblArr_1 = ['Instagram'];
                        datasetDataStringLength_1 = igDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Instagram', data: igDataset, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<igDataset.length; i++)
                        {
                            cv1DatasetsContentIg1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(igDataset[i])});
                        }

                    }
                    else if(ttDataString != '')
                    {
                        console.log("in genre 3"); toggellblArr_1 = ['TikTok'];
                        datasetDataStringLength_1 = ttDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'TikTok', data: ttDataset, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<ttDataset.length; i++)
                        {
                            cv1DatasetsContentTt1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(ttDataset[i])});
                        }
                    }
                    else if(twtDataString != '')
                    {
                        console.log("in genre 4"); toggellblArr_1 = ['Twitter'];
                        datasetDataStringLength_1 = twtDataString.length;
                        datalablesData_1 = datalablesData_1_String.split(",");
                        //datasetsContent_1 = [{ label: 'Twitter', data: twtDataset, borderColor: 'rgba(238, 198, 204, 1)', backgroundColor: 'rgba(238, 198, 204, 1)', pointBackgroundColor: '#eec6cc', pointBorderColor: '#232323', pointBorderWidth: 1, pointRadius: 5}];

                        for (var i = 0; i <= datasetDataStringLength_1; i++) {
                            colorvalData1.push(colorval1);
                        };

                        for(var i=0; i<twtDataset.length; i++)
                        {
                            cv1DatasetsContentTwt1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                            cv1DatasetsContent1.push({"label": datalablesData_1[i], "value": parseFloat(twtDataset[i])});
                        }
                    }
                    else
                    {

                    }

                    var chartId = cv+"GenreRadarChart";
                    compareGenreChart(toggellblArr_1,datalablesData_1,cv1DatasetsContent1,chartId,highestllbArr,genreBgColorDataString, 'zoom-in', 'getCompareMoodGenreGraphData');
                }
            },
            complete: function(data){
                //console.log("Genre Graph Data"+data);
            }
        });
    }
    else
    {
        if(type=='mood')
        {
            if(cv=='cv1')
            {
                var chartId = cv+"MoodRadarChart";
                console.log(old_toggellblArr_mood_cv1, " old_toggellblArr_mood_cv1 ", old_highestMoodllbArr_1);
                compareMoodChart(old_toggellblArr_mood_cv1,old_datalablesData_mood_cv1,old_datasetsContent_mood_cv1,chartId,old_highestMoodllbArr_1);
            }
            else
            {
                var chartId = cv+"MoodRadarChart";
                console.log(old_toggellblArr_mood_cv2, " old_toggellblArr_mood_cv2 ", old_highestMoodllbArr_2);
                compareMoodChart(old_toggellblArr_mood_cv2,old_datalablesData_mood_cv2,old_datasetsContent_mood_cv2,chartId,old_highestMoodllbArr_2);
            }
        }
        else
        {
            if(cv=='cv1')
            {
                var chartId = cv+"GenreRadarChart";
                compareGenreChart(old_toggellblArr_genre_cv1,old_datalablesData_genre_cv1,old_datasetsContent_genre_cv1,chartId,old_highestGenrellbArr_1,genreBgColorDataString, 'zoom-in', 'zoomGraph');
            }
            else
            {
                var chartId = cv+"GenreRadarChart";
                compareGenreChart(old_toggellblArr_genre_cv2,old_datalablesData_genre_cv2,old_datasetsContent_genre_cv2,chartId,old_highestGenrellbArr_2,genreBgColorDataString, 'zoom-in', 'zoomGraph');
            }
        }
    }
}

function sortZoomGraphMY(event, _currentId) {
    event.stopPropagation();

    if(isOpenZoomGraphM) {
        $(".sortZoomGrap"+_currentId).css("display", "none");
        $(".btnZoomGrap"+_currentId).find("img").css("transform", "rotateZ(0deg)");
        isOpenZoomGraphM = false;
    }
    else {
        $(".sortZoomGrap"+_currentId).css("display", "block");
        $(".btnZoomGrap"+_currentId).find("img").css("transform", "rotateZ(180deg)");
        isOpenZoomGraphM = true;
    }
}
var graphId = "";
function zoomGraph(popupId) {
    if(popupId == "modal_brandCVMoodGraph" || popupId == "modal_brandCVGenreGraph" || popupId == "modal_brandCVMPVideo"  || popupId == "modal_brandCV1MPVideo" || popupId == "modal_brandCV2MPVideo" || popupId == "modal_compareCV1MoodGraph"|| popupId == "modal_compareCV2MoodGraph" || popupId == "modal_compareCV1GenreGraph" || popupId == "modal_compareCV2GenreGraph" || popupId == "modal_indCVMoodGraph" || popupId == "modal_indCVGenreGraph" || popupId == "modal_subIndCVMoodGraph" || popupId == "modal_subIndCVGenreGraph" || popupId == "modal_compareIndCV1MoodGraph" || popupId == "modal_compareIndCV2MoodGraph" || popupId == "modal_compareIndCV1GenreGraph" || popupId == "modal_compareIndCV2GenreGraph" || popupId == "modal_compareSubIndCV1GenreGraph" || popupId == "modal_compareSubIndCV2GenreGraph") {
        //console.log("popupId " + popupId);
        $("#"+popupId).addClass("zoom_graph");
        $("#"+popupId).fadeIn("slow");
        $("#"+popupId).find(".graph_header, .graphSort").removeClass("hide");
        $("#"+popupId+"_graph_overlay").removeClass("hide");
        $("#"+popupId+"_btn_maximize").addClass("hide");

        if(popupId == "modal_brandCVMoodGraph") {
            var chartId = "radarChart1";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_1"+old_toggellblArr_1 + "old_datalablesData_1"+old_datalablesData_1 + "old_datasetsContent_1"+old_datasetsContent_1);
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-in', 'zoomGraph',socialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }

        if(popupId == "modal_brandCVGenreGraph") {
            var chartId = "radarChart2";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_2"+old_toggellblArr_2 + "old_datalablesData_2"+old_datalablesData_2 + "old_datasetsContent_2"+old_datasetsContent_2);
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-in', 'zoomGraph',socialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }

        if(popupId == "modal_indCVMoodGraph") {
            var chartId = "radarChart1";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_1"+old_toggellblArr_1 + "old_datalablesData_1"+old_datalablesData_1 + "old_datasetsContent_1"+old_datasetsContent_1+ "old_highestMoodllbArr_1"+old_highestMoodllbArr_1);
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-in', 'zoomGraph', socialMediaDataExistArray);
        }

        if(popupId == "modal_indCVGenreGraph") {
            var chartId = "radarChart2";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_2"+old_toggellblArr_2 + "old_datalablesData_2"+old_datalablesData_2 + "old_datasetsContent_2"+old_datasetsContent_2);
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-in', 'zoomGraph', socialMediaDataExistArray);
        }

        if(popupId == "modal_subIndCVMoodGraph") {
            var chartId = "radarChart1";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_1"+old_toggellblArr_1 + "old_datalablesData_1"+old_datalablesData_1 + "old_datasetsContent_1"+old_datasetsContent_1+ "old_highestMoodllbArr_1"+old_highestMoodllbArr_1);
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-in', 'zoomGraph',socialMediaDataExistArray);
        }

        if(popupId == "modal_subIndCVGenreGraph") {
            var chartId = "radarChart2";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_2"+old_toggellblArr_2 + "old_datalablesData_2"+old_datalablesData_2 + "old_datasetsContent_2"+old_datasetsContent_2);
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-in', 'zoomGraph', socialMediaDataExistArray);
        }

        if(popupId == "modal_compareCV1MoodGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv1MoodRadarChart";
            console.log("#"+chartId + "-------" + "old_toggellblArr_mood_cv1"+old_toggellblArr_mood_cv1 + "old_datalablesData_mood_cv1"+old_datalablesData_mood_cv1 + "old_datasetsContent_mood_cv1"+old_datasetsContent_mood_cv1+ "old_highestMoodllbArr_1"+old_highestMoodllbArr_1);
            compareMoodChart(old_toggellblArr_mood_cv1,old_datalablesData_mood_cv1,old_datasetsContent_mood_cv1,chartId,old_highestMoodllbArr_1,'zoom-in', 'zoomGraph', cv1SocialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }
        if(popupId == "modal_compareCV2MoodGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv2MoodRadarChart";
            console.log("#"+chartId + "-------" + "old_toggellblArr_mood_cv2"+old_toggellblArr_mood_cv2 + "old_datalablesData_mood_cv2"+old_datalablesData_mood_cv2 + "old_datasetsContent_mood_cv2"+old_datasetsContent_mood_cv2+ "old_highestMoodllbArr_1"+old_highestMoodllbArr_1);
            compareMoodChart(old_toggellblArr_mood_cv2,old_datalablesData_mood_cv2,old_datasetsContent_mood_cv2,chartId,old_highestMoodllbArr_2,'zoom-in', 'zoomGraph', cv2SocialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }

        if(popupId == "modal_compareCV1GenreGraph") {
            var chartId = "cv1GenreRadarChart";
            //console.log(genreBgColorDataString, " genreBgColorDataString");
            //console.log("#"+chartId + "-------" + "old_toggellblArr_genre_cv1"+old_toggellblArr_genre_cv1 + "old_datalablesData_genre_cv1"+old_datalablesData_genre_cv1 + "old_datasetsContent_genre_cv1"+old_datasetsContent_genre_cv1 + "old_highestGenrellbArr_1"+old_highestGenrellbArr_1);
            compareGenreChart(old_toggellblArr_genre_cv1,old_datalablesData_genre_cv1,old_datasetsContent_genre_cv1,chartId,old_highestGenrellbArr_1,genreBgColorDataString, 'zoom-in', 'zoomGraph', cv1SocialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }
        if(popupId == "modal_compareCV2GenreGraph") {
            var chartId = "cv2GenreRadarChart";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_genre_cv2"+old_toggellblArr_genre_cv2+ "old_datalablesData_genre_cv2"+old_datalablesData_genre_cv2+ "old_datasetsContent_genre_cv2"+old_datasetsContent_genre_cv2 + "old_highestGenrellbArr_2"+old_highestGenrellbArr_2);
            compareGenreChart(old_toggellblArr_genre_cv2,old_datalablesData_genre_cv2,old_datasetsContent_genre_cv2,chartId,old_highestGenrellbArr_2,genreBgColorDataString, 'zoom-in', 'zoomGraph', cv2SocialMediaDataExistArray);
            $(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }
        if(popupId == "modal_compareIndCV1MoodGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv1MoodRadarChart";
            console.log("#"+chartId + "-------" + "old_toggellblArr_mood_cv1"+old_toggellblArr_mood_cv1 + "old_datalablesData_mood_cv1"+old_datalablesData_mood_cv1 + "old_datasetsContent_mood_cv1"+old_datasetsContent_mood_cv1+ "old_highestMoodllbArr_1"+old_highestMoodllbArr_1);
            compareMoodChart(old_toggellblArr_mood_cv1,old_datalablesData_mood_cv1,old_datasetsContent_mood_cv1,chartId,old_highestMoodllbArr_1,'zoom-in', 'zoomGraph',cv1SocialMediaDataExistArray);
            //$(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }
        if(popupId == "modal_compareIndCV2MoodGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv2MoodRadarChart";
            console.log("#"+chartId + "-------" + "old_toggellblArr_mood_cv2"+old_toggellblArr_mood_cv2 + "old_datalablesData_mood_cv2"+old_datalablesData_mood_cv2 + "old_datasetsContent_mood_cv2"+old_datasetsContent_mood_cv2+ "old_highestMoodllbArr_2"+old_highestMoodllbArr_2);
            compareMoodChart(old_toggellblArr_mood_cv2,old_datalablesData_mood_cv2,old_datasetsContent_mood_cv2,chartId,old_highestMoodllbArr_2,'zoom-in', 'zoomGraph', cv2SocialMediaDataExistArray);
            //$(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }

        if(popupId == "modal_compareIndCV1GenreGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv1GenreRadarChart";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_genre_cv1"+old_toggellblArr_genre_cv1 + "old_datalablesData_genre_cv1"+old_datalablesData_genre_cv1 + "old_datasetsContent_genre_cv1"+old_datasetsContent_genre_cv1 + "old_highestGenrellbArr_1"+old_highestGenrellbArr_1);
            compareGenreChart(old_toggellblArr_genre_cv1,old_datalablesData_genre_cv1,old_datasetsContent_genre_cv1,chartId,old_highestGenrellbArr_1,genreBgColorDataString, 'zoom-in', 'zoomGraph', cv1SocialMediaDataExistArray);
            //$(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }
        if(popupId == "modal_compareIndCV2GenreGraph") {
            //console.log("popupId " + popupId);
            var chartId = "cv2GenreRadarChart";
            //console.log("#"+chartId + "-------" + "old_toggellblArr_genre_cv2"+old_toggellblArr_genre_cv2+ "old_datalablesData_genre_cv2"+old_datalablesData_genre_cv2+ "old_datasetsContent_genre_cv2"+old_datasetsContent_genre_cv2 + "old_highestGenrellbArr_2"+old_highestGenrellbArr_2);
            compareGenreChart(old_toggellblArr_genre_cv2,old_datalablesData_genre_cv2,old_datasetsContent_genre_cv2,chartId,old_highestGenrellbArr_2,genreBgColorDataString, 'zoom-in', 'zoomGraph', cv2SocialMediaDataExistArray);
            //$(".graphDropDownContainer").find(".btnMonthYear.btnZoomGraphM").find(".txtTitleZoomGraphM").text("Select month");
        }

        if(popupId == "modal_brandCVMPVideo") {
            $('.displayCVMostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").addClass("hide");
            $("#"+popupId+"_tabMob").removeClass("hide");
            return
        }

        if(popupId == "modal_brandCV1MPVideo"){
            $('.compareCV1MostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").addClass("hide");
            $("#"+popupId+"_tabMob").removeClass("hide");
            return
        }

        if(popupId == "modal_brandCV2MPVideo"){
            $('.compareCV2MostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").addClass("hide");
            $("#"+popupId+"_tabMob").removeClass("hide");
            return
        }
        graphId = popupId;
    }
}
function closeGraph(popupId)
{
    //if(popupId == "modal_brandCVMoodGraph" || popupId == "modal_brandCVGenreGraph" || popupId == "modal_brandCVMPVideo" || popupId == "modal_brandCV1MPVideo" || popupId == "modal_brandCV2MPVideo" || popupId == "modal_compareCV1MoodGraph"|| popupId == "modal_compareCV2MoodGraph" || popupId == "modal_compareCV1GenreGraph" || popupId == "modal_compareCV2GenreGraph" || popupId == "modal_indCVMoodGraph" || popupId == "modal_indCVGenreGraph" || popupId == "modal_subIndCVMoodGraph" || popupId == "modal_subIndCVGenreGraph" || popupId == "modal_compareIndCV1MoodGraph" || popupId == "modal_compareIndCV2MoodGraph" || popupId == "modal_compareIndCV1GenreGraph" || popupId == "modal_compareIndCV2GenreGraph" || popupId == "modal_compareSubIndCV1GenreGraph" || popupId == "modal_compareSubIndCV2GenreGraph") {
        console.log("popupId " + popupId);
        $("#"+popupId).removeClass("zoom_graph");
        $("#"+popupId).removeAttr("style");
        $("#"+popupId).fadeOut(10);
        $("#"+popupId).fadeIn(500);
        $("#"+popupId).find(".graph_header, .graphSort").addClass("hide");
        $("#"+popupId +"_graph_overlay").addClass("hide");
        $("#"+popupId+"_btn_maximize").removeClass("hide");

        $("#"+popupId).find(".zoominoutCVMoodGBtns .btnZoomin").removeAttr("style");
        $("#"+popupId).find(".zoominoutCVMoodGBtns .btnZoomout").removeAttr("style");
        $(".btnZoomin").removeAttr("style");
        $(".btnZoomin").removeAttr("disabled");
        $(".btnZoomout").removeAttr("style");
        $(".btnZoomout").removeAttr("disabled");

        if(popupId == "modal_brandCVMoodGraph") {
            var chartId = "radarChart1";
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-out', 'closeGraph',socialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#radarChart1_holder").removeAttr("style");
            $("#"+graphId).find("."+graphId+"_DragRadar").removeAttr("style");
            inc = 200;
        }
        if(popupId == "modal_brandCVGenreGraph") {
            var chartId = "radarChart2";
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-out', 'closeGraph', socialMediaDataExistArray);
        }
        if(popupId == "modal_indCVMoodGraph") {
            var chartId = "radarChart1";
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-out', 'closeGraph', socialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#radarChart1_holder").removeAttr("style");
            $("#"+graphId).find("."+graphId+"_DragRadar").removeAttr("style");
            inc = 200;
        }
        if(popupId == "modal_indCVGenreGraph") {
            var chartId = "radarChart2";
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-out', 'closeGraph', socialMediaDataExistArray);
        }
        if(popupId == "modal_subIndCVMoodGraph") {
            var chartId = "radarChart1";
            radarChart(old_toggellblArr_1,old_datalablesData_1,old_datasetsContent_1,chartId,old_highestMoodllbArr_1, 'zoom-out', 'closeGraph',socialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#radarChart1_holder").removeAttr("style");
            $("#"+graphId).find("."+graphId+"_DragRadar").removeAttr("style");
            inc = 200;
        }
        if(popupId == "modal_subIndCVGenreGraph") {
            var chartId = "radarChart2";
            radarChart(old_toggellblArr_2,old_datalablesData_2,old_datasetsContent_2,chartId,old_highestGenrellbArr_2, 'zoom-out', 'closeGraph',socialMediaDataExistArray);
        }

        if(popupId == "modal_compareCV1MoodGraph") {
            var chartId = "cv1MoodRadarChart";
            compareMoodChart(old_toggellblArr_mood_cv1,old_datalablesData_mood_cv1,old_datasetsContent_mood_cv1,chartId,old_highestMoodllbArr_1, 'zoom-out', 'closeGraph', cv1SocialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#cv1MoodRadarChart_holder").removeAttr("style");
            $("#"+graphId).find("."+graphId+"_DragRadar").removeAttr("style");
            inc = 200;
        }
        if(popupId == "modal_compareCV2MoodGraph") {
            var chartId = "cv2MoodRadarChart";
            compareMoodChart(old_toggellblArr_mood_cv2,old_datalablesData_mood_cv2,old_datasetsContent_mood_cv2,chartId,old_highestMoodllbArr_2, 'zoom-out', 'closeGraph', cv2SocialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#cv2MoodRadarChart_holder").removeAttr("style");
            $("#"+graphId).find("."+graphId+"_DragRadar").removeAttr("style");
            inc = 200;
        }

        if(popupId == "modal_compareCV1GenreGraph") {
            var chartId = "cv1GenreRadarChart";
            compareGenreChart(old_toggellblArr_genre_cv1,old_datalablesData_genre_cv1,old_datasetsContent_genre_cv1,chartId,old_highestGenrellbArr_1,genreBgColorDataString, 'zoom-out', 'closeGraph', cv1SocialMediaDataExistArray);
        }
        if(popupId == "modal_compareCV2GenreGraph") {
            var chartId = "cv2GenreRadarChart";
            compareGenreChart(old_toggellblArr_genre_cv2,old_datalablesData_genre_cv2,old_datasetsContent_genre_cv2,chartId,old_highestGenrellbArr_2,genreBgColorDataString, 'zoom-out', 'closeGraph', cv2SocialMediaDataExistArray);
        }

        if(popupId == "modal_compareIndCV1MoodGraph") {
            var chartId = "cv1MoodRadarChart";
            compareMoodChart(old_toggellblArr_mood_cv1,old_datalablesData_mood_cv1,old_datasetsContent_mood_cv1,chartId,old_highestMoodllbArr_1, 'zoom-out', 'closeGraph', cv1SocialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#cv1MoodRadarChart_holder").removeAttr("style");
            inc = 200;
        }
        if(popupId == "modal_compareIndCV2MoodGraph") {
            var chartId = "cv2MoodRadarChart";
            compareMoodChart(old_toggellblArr_mood_cv2,old_datalablesData_mood_cv2,old_datasetsContent_mood_cv2,chartId,old_highestMoodllbArr_2, 'zoom-out', 'closeGraph', cv2SocialMediaDataExistArray);
            $("."+popupId+"_DragRadar").find("#cv2MoodRadarChart_holder").removeAttr("style");
            inc = 200;
        }

        if(popupId == "modal_compareIndCV1GenreGraph") {
            var chartId = "cv1GenreRadarChart";
            compareGenreChart(old_toggellblArr_genre_cv1,old_datalablesData_genre_cv1,old_datasetsContent_genre_cv1,chartId,old_highestGenrellbArr_1,genreBgColorDataString, 'zoom-out', 'closeGraph',cv1SocialMediaDataExistArray);
        }
        if(popupId == "modal_compareIndCV2GenreGraph") {
            var chartId = "cv2GenreRadarChart";
            compareGenreChart(old_toggellblArr_genre_cv2,old_datalablesData_genre_cv2,old_datasetsContent_genre_cv2,chartId,old_highestGenrellbArr_2,genreBgColorDataString, 'zoom-out', 'closeGraph', cv2SocialMediaDataExistArray);
        }

        if(popupId == "modal_brandCVMPVideo"){
            $('.displayCVMostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").removeClass("hide");
            $("#"+popupId+"_tabMob").addClass("hide");
            return
        }
        if(popupId == "modal_brandCV1MPVideo"){
            $('.compareCV1MostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").removeClass("hide");
            $("#"+popupId+"_tabMob").addClass("hide");
            return
        }
        if(popupId == "modal_brandCV2MPVideo"){
            $('.compareCV2MostPopVideo').slick('refresh');
            $("#"+popupId+"_tabDesk").removeClass("hide");
            $("#"+popupId+"_tabMob").addClass("hide");
            return
        }
        zoomInOutCounter = 0;
    //}
}
$(".graph_overlay").click(function(e){
    closeGraph(graphId);
    graphId = "";
});
$(document).on('click', function(){
    //closeGraph('modal_brandCVMoodGraph');
});
function radarChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestllbArr, openType, calledFrom, socialMediaDataExistArray)
{
    //console.log("#"+chartId+"ButtonBox" + "-------" + "#"+chartId+"_holder_btn" + '-----------------'+ chartId+"holder" + "-------------"+"#"+chartId+"_holder "+ toggellblArr_1 + " " +highestllbArr);
    $("#"+chartId+"ButtonBox").remove();
    $("#"+chartId+"_holder_btn").append('<div class="graphButtonBox" id="'+chartId+'ButtonBox"></div>');



    if(chartId == 'radarChart1')
    {
        $("#"+chartId+"_holder").find("canvas").remove();
        $("#"+chartId+"_holder").append('<canvas id="'+chartId+'"></canvas>');
        var toggelBtns_1 = '';
        // for(var i=0; i<toggellblArr_1.length;i++)
        // {
        //     toggelBtns_1 += '<div class="toggleWrapper" >';
        //     toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[i]+'" >';
        //     toggelBtns_1 += '<label for="toggle'+toggellblArr_1[i]+'" class="toggle'+toggellblArr_1[i]+'" onClick="toggleData1('+i+')" ><span class="toggle'+toggellblArr_1[i]+'_handler"></span></label>';
        //     toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
        //     toggelBtns_1 += '</div>';
        // }
        console.log("socialMediaDataExistArray == ",socialMediaDataExistArray," toggellblArr_1 ==",toggellblArr_1);
        for(var i=0; i<socialMediaDataExistArray.length;i++)
        {
            if(toggellblArr_1.includes(socialMediaDataExistArray[i])){

                var toggellblArrIndex_1 = toggellblArr_1.indexOf(socialMediaDataExistArray[i]);
                toggelBtns_1 += '<div class="toggleWrapper" >';
                toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[toggellblArrIndex_1]+'" >';
                toggelBtns_1 += '<label for="toggle'+toggellblArr_1[toggellblArrIndex_1]+'" class="toggle'+toggellblArr_1[toggellblArrIndex_1]+'" onClick="toggleData1('+toggellblArrIndex_1+')" ><span class="toggle'+toggellblArr_1[toggellblArrIndex_1]+'_handler"></span></label>';
                toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArrIndex_1]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArrIndex_1]+'</span></span>';
                toggelBtns_1 += '</div>';
            }else{
                toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                toggelBtns_1 += '<input type="checkbox" id="toggle'+socialMediaDataExistArray[i]+'" >';
                toggelBtns_1 += '<label for="toggle'+socialMediaDataExistArray[i]+'" class="toggle'+socialMediaDataExistArray[i]+'" onClick="toggleData1('+i+')" style="background: transparent"><span class="toggle'+socialMediaDataExistArray[i]+'_handler"></span></label>';
                toggelBtns_1 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                toggelBtns_1 += '</div>';
            }

        }

        //console.log("datalablesData_1 ", datalablesData_1);
        //console.log("datasetsContent_1 ", datasetsContent_1);

        $("#"+chartId+"ButtonBox").html(toggelBtns_1);
        var colorval1 = "#999999";

        const ctx = document.getElementById(chartId).getContext('2d');
        Chart.register(ChartDataLabels);
        showMonthWiseGraph = new Chart(ctx, {
            type: 'radar',
            plugins: [ChartDataLabels],
            data: {
                labels: datalablesData_1,
                datasets: datasetsContent_1
            },
            options: {
                borderWidth: 0,
                responsive: true,
                maintainAspectRatio: true,
                animation: {
                    duration: 0
                },
                hover: {
                    animationDuration: 0
                },
                responsiveAnimationDuration: 0,
                scales: {
                    x: {
                        //beginAtZero: true,
                        display: false,
                        fill: false,
                        backgroundColor: 'rgba(0, 0, 0, 1)',
                        gridLines: {
                            circular: true,
                            //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                            color: colorval1
                        },
                        angleLines: {
                            color: '#333333',
                            lineWidth: 2
                        },
                        ticks: {
                            display: false,
                            beginAtZero: true
                        },
                        pointLabels: {
                            fontSize: 10,
                            fontStyle: 'RobotoMonoLight',
                            fontColor: 'black'
                        }
                    },
                    y: {
                        //beginAtZero: true,
                        display: false,
                        fill: false,
                        backgroundColor: 'rgba(0, 0, 0, 1)',
                        gridLines: {
                            circular: true,
                            //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                            color: colorval1
                        },
                        angleLines: {
                            color: '#333333',
                            lineWidth: 2
                        },
                        ticks: {
                            display: false,
                            beginAtZero: true
                        },
                        pointLabels: {
                            fontSize: 11,
                            fontStyle: 'RobotoMonoLight',
                            fontColor: 'black'
                        }
                    },
                    r: {
                        grid: {
                            color: "#A1A1A1",
                            circular: true,
                        },
                        angleLines: {
                            color: '#A1A1A1',
                            lineWidth: 1
                        },
                        ticks: {
                            display: false,
                            beginAtZero: true
                        },
                        pointLabels: {
                            color: '#F1F1F1',
                            font: {
                                family: 'RobotoMonoMedium',
                                size: 12
                            }
                        },
                        suggestedMin: 0,
                        suggestedMax: 0.6
                    }
                },
                elements: {
                    line: {
                        borderWidth: 0,
                        backgroundColor : '#999999'
                    }
                },
                plugins: {
                    datalabels: {
                        display: false,
                    },
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = showMonthWiseGraph.data.datasets.labels;
                                return label;
                            }
                        }
                    }
                }
            }
        });

        showMonthWiseGraph.update();
    }
    else
    {
        if(openType != 'zoom-in')
        {
            var datasetsContent = datasetsContent_1;
            datasetsContent.sort(function(a, b){return b.value - a.value});
            //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");

            var finalDatasetsContent = [];
            var datasetsContentValSum = 0;
            for(var i=0; i<datasetsContent.length;i++)
            {
                if(i<10)
                {
                    finalDatasetsContent.push(datasetsContent[i]);
                }
                else
                {
                    datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
                }
            }
            finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});

            var radarChart2Data = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        else
        {
            finalDatasetsContent = datasetsContent_1;
            var radarChart2Data = {
                sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        //console.log(finalDatasetsContent, " finalDatasetsContent");
        var radarChart2PieUpdate = function () {
            if (radarChart2) radarChart2.destroy();
            var div3W = $(".radarChart2WH").width();
            var div3H = $(".radarChart2WH").height();
            //var size = Math.min(innerHeight, innerWidth) / 2;
            var size = Math.min(div3W, div3H);
            var opt =  {
                header:{
                    titleSubtitlePadding:0
                },
                /* data: {
                    //sortOrder: "value-desc",
		            smallSegmentGrouping: {
			            enabled: false
		            },
                    content: finalDatasetsContent,
                }, */
                data:radarChart2Data,
                size: {
                    pieInnerRadius: "40%",
                    pieOuterRadius: brandGenreCVPieOuterRadius,
                    canvasHeight: div3H,
                    canvasWidth: div3W,
                },
                labels: {
                    outer: {
                        pieDistance: 15
                    },
                    mainLabel: {
                        font: "RobotoMonoMedium",
                        color: "#F1F1F1",
                        fontSize: 12
                    },
                    percentage: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        decimalPlaces: 0,
                        fontSize: 11
                    },
                    value: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        fontSize: 11
                    },
                    lines: {
                        enabled: true,
			            style: "straight",
			            color: "#A1A1A1"
                    }
                },
                tooltips:{
                    enabled:false,
                    type:"placeholder",
                    string:"{label}:{percentage}%",
                    style:{padding:5}
                },
                misc: {
                    gradient: {
                        enabled: false,
                        percentage: 100
                    },
                    pieCenterOffset: {
                        x: -8,
                        y: 0
                    },
                    colors: {
                        segments: genreBgColorData,
                        segmentStroke: "#f1f1f1"
                    },
                    canvaspadding:{
                        top:0,
                        right:0,
                        bottom:0,
                        left:0
                    }
                }
            };
            radarChart2 = new d3pie("radarChart2", opt);
        };
        radarChart2PieUpdate();
        window.addEventListener('resize', radarChart2PieUpdate);
        var toggelBtns_2 = '';

        if(openType == "zoom-in" || openType == "zoom-out") {
            if(openType == "zoom-in")
            {
                //console.log("zoom in socialMediaDataExistArray genre chart ==",socialMediaDataExistArray)
                if(toggellblArr_1.length == 1) {

                    // toggelBtns_2 += '<div class="toggleWrapper" >';
                    // toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" >';
                    // toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'"><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[0].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                    // toggelBtns_2 += '</div>';

                    for(var i=0; i<socialMediaDataExistArray.length;i++){
                        //============if social media exist array value is present in toggellblArr_1(graph data array)=============
                        if(toggellblArr_1.includes(socialMediaDataExistArray[i])){
                            toggelBtns_2 += '<div class="toggleWrapper" >';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[0].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+socialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+socialMediaDataExistArray[i]+'" class="r2toggle'+socialMediaDataExistArray[i]+'" style="background: transparent" disabled><span class="r2toggle'+socialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }

                    }

                }
                else {
                    // for(var i=0; i<toggellblArr_1.length;i++)
                    // {
                    //     toggelBtns_2 += '<div class="toggleWrapper" >';
                    //     toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataBrandCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'zoom-in\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                    //     toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">:'+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_2 += '</div>';
                    // }

                    for(var i=0; i<socialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(socialMediaDataExistArray[i])){
                            var toggellblArrIndex_1 = toggellblArr.indexOf(socialMediaDataExistArray[i]);
                            toggelBtns_2 += '<div class="toggleWrapper" >';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" class="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" onClick="toggleDataBrandCV(\''+toggellblArr_1[toggellblArrIndex_1]+'\', \'withPopup\', \'zoom-in\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'_handler"></span></label>';
                            // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArrIndex_1]+'<span class="shw_hid_highest_mood">:'+highestllbArr[toggellblArrIndex_1]+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+socialMediaDataExistArray[i]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+socialMediaDataExistArray[i]+'" class="r2toggle'+socialMediaDataExistArray[i]+'" onClick="toggleDataBrandCV(\''+socialMediaDataExistArray[i]+'\', \'withPopup\', \'zoom-in\',\''+calledFrom+'\')" style="background: transparent"><span class="r2toggle'+socialMediaDataExistArray[i]+'_handler"></span></label>';
                            // toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+socialMediaDataExistArray[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">:'+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }

                    }

                }
            }
            else
            {
                //console.log("zoom out socialMediaDataExistArray genre chart ==",socialMediaDataExistArray)
                if(toggellblArr_1.length == 1) {

                    // toggelBtns_2 += '<div class="toggleWrapper" >';
                    // toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" >';
                    // toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'"><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[0].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                    // toggelBtns_2 += '</div>';
                    for(var i=0; i<socialMediaDataExistArray.length;i++){
                        if(toggellblArr_1.includes(socialMediaDataExistArray[i])){
                            toggelBtns_2 += '<div class="toggleWrapper" >';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[0].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+socialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+socialMediaDataExistArray[i]+'" class="r2toggle'+socialMediaDataExistArray[i]+'" style="background: transparent" disabled><span class="r2toggle'+socialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }
                    }

                }
                else {
                    // for(var i=0; i<toggellblArr_1.length;i++)
                    // {
                    //     toggelBtns_2 += '<div class="toggleWrapper" >';
                    //     toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataBrandCV(\''+toggellblArr_1[i]+'\', \'withoutPopup\', \'zoom-out\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                    //     toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">:'+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_2 += '</div>';
                    // }

                    for(var i=0; i<socialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(socialMediaDataExistArray[i])){
                            var toggellblArrIndex_1 = toggellblArr.indexOf(socialMediaDataExistArray[i]);
                            toggelBtns_2 += '<div class="toggleWrapper" >';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" class="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'" onClick="toggleDataBrandCV(\''+toggellblArr_1[toggellblArrIndex_1]+'\', \'withoutPopup\', \'zoom-out\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[toggellblArrIndex_1]+'_handler"></span></label>';
                            // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArrIndex_1]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[toggellblArrIndex_1].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArrIndex_1]+'<span class="shw_hid_highest_mood">:'+highestllbArr[toggellblArrIndex_1]+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+socialMediaDataExistArray[i]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+socialMediaDataExistArray[i]+'" class="r2toggle'+socialMediaDataExistArray[i]+'" onClick="toggleDataBrandCV(\''+socialMediaDataExistArray[i]+'\', \'withoutPopup\', \'zoom-out\',\''+calledFrom+'\')" style="background: transparent"><span class="r2toggle'+socialMediaDataExistArray[i]+'_handler"></span></label>';
                            // toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+socialMediaDataExistArray[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+socialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">:'+highestllbArr[i]+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }

                    }

                }
            }

        }
        else {
            if(toggellblArr_1.length == 1) {

                toggelBtns_2 += '<div class="toggleWrapper" >';
                toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" >';
                toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'"><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[0].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                toggelBtns_2 += '</div>';
            }
            else {
                for(var i=0; i<toggellblArr_1.length;i++)
                {
                    toggelBtns_2 += '<div class="toggleWrapper" >';
                    toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataBrandCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'normal\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+toggellblArr_1[i].replace(/([A-Z]+)/g, ' $1').trim()+'</span></span>';
                    toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">:'+highestllbArr[i]+'</span></span>';
                    toggelBtns_2 += '</div>';
                }
            }
        }
        $("#"+chartId+"ButtonBox").html(toggelBtns_2);
        // $("#"+chartId+"ButtonBox").find("input[type='checkbox']").each(function(index) {
        //     if(index > 0) {
        //         $(this).prop( "checked", true );
        //     }
        // });

        if(toggellblArr_1.length == 1){
            console.log("chartId ==",chartId);
            $("#"+chartId+"ButtonBox").find("input[type='checkbox']").each(function(index,element) {
                var checkboxId = $(element).attr("id").replace("r2toggle","");
                 //console.log("checkboxId ==",checkboxId);
                if(toggellblArr_1.includes(checkboxId)){
                    $(this).prop( "checked", false );
                    //console.log(checkboxId,"false");
                }else{
                    $(this).prop( "checked", true );
                }

            });
        }else{
            $("#"+chartId+"ButtonBox").find("input[type='checkbox']").each(function(index) {
                if(index > 0) {
                    $(this).prop( "checked", true );
                }
            });
        }



        /* if(toggellbl1Arr.length == 1)
        {
            toggel1Btns += '<div class="toggleWrapper">';
            toggel1Btns += '<input type="checkbox" id="r2toggle'+toggellbl1Arr[0]+'" disabled>';
            toggel1Btns += '<label for="r2toggle'+toggellbl1Arr[0]+'" class="r2toggle'+toggellbl1Arr[0]+'" disabled><span class="r2toggle'+toggellbl1Arr[0]+'_handler"></span></label>';
            toggel1Btns += '<span class="cust-toggleBtnName">'+toggellbl1Arr[0]+'</span>';
            toggel1Btns += '</div>';
        }
        else
        {
            for(var i=0; i<toggellbl1Arr.length;i++)
            {
                toggel1Btns += '<div class="toggleWrapper">';
                toggel1Btns += '<input type="checkbox" id="r2toggle'+toggellbl1Arr[i]+'" >';
                toggel1Btns += '<label for="r2toggle'+toggellbl1Arr[i]+'" class="r2toggle'+toggellbl1Arr[i]+'" onClick="toggleDataBrandCV(\''+toggellbl1Arr[i]+'\')" ><span class="r2toggle'+toggellbl1Arr[i]+'_handler"></span></label>';
                toggel1Btns += '<span class="cust-toggleBtnName">'+toggellbl1Arr[i]+'</span>';
                toggel1Btns += '</div>';
            }
        }
        $("#radarChart2ButtonBox").html(toggel1Btns);
        $("#radarChart2ButtonBox").find("input[type='checkbox']").each(function(index) {
            if(index > 0) {
                $(this).prop( "checked", true );
            }
        }); */
    }
}

function compareMoodChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestllbArr, openType, calledFrom,cvSocialMediaDataExistArray) {
    console.log("#"+chartId+"ButtonBox" + "-------" + "#"+chartId+"_holder_btn" + '-----------------'+ chartId+"holder" + "-------------"+"#"+chartId+"_holder "+ toggellblArr_1 + " " +highestllbArr);
    $("#"+chartId+"ButtonBox").remove();
    $("#"+chartId+"_holder_btn").append('<div class="graphButtonBox" id="'+chartId+'ButtonBox"></div>');

    $("#"+chartId+"_holder").find("canvas").remove();
    $("#"+chartId+"_holder").append('<canvas id="'+chartId+'"></canvas>');



    /* for(var i=0; i<toggellblArr_1.length;i++)
    {
        toggelBtns_1 += '<div class="toggleWrapper" >';
        toggelBtns_1 += '<input type="checkbox" id="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" >';
        toggelBtns_1 += '<label for="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" class="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" onClick="rtoggleCompareCV1MoodData1('+i+')" ><span class="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'_handler"></span></label>';
        toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
        toggelBtns_1 += '</div>';

    } */


        if(chartId == "cv1MoodRadarChart") {
            var toggelBtns_1 = '';
            // for(var i=0; i<toggellblArr_1.length;i++) {
            //     toggelBtns_1 += '<div class="toggleWrapper" >';
            //     toggelBtns_1 += '<input type="checkbox" id="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" >';
            //     toggelBtns_1 += '<label for="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" class="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'" onClick="rtoggleCompareCV1MoodData_1('+i+')" ><span class="rtoggleCompareCV1Mood'+toggellblArr_1[i]+'_handler"></span></label>';
            //     toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
            //     toggelBtns_1 += '</div>';
            // }

            for(var i=0; i<cvSocialMediaDataExistArray.length;i++) {

                if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                    var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);

                    toggelBtns_1 += '<div class="toggleWrapper" >';
                    toggelBtns_1 += '<input type="checkbox" id="rtoggleCompareCV1Mood'+toggellblArr_1[toggellblArr_1Index]+'" >';
                    toggelBtns_1 += '<label for="rtoggleCompareCV1Mood'+toggellblArr_1[toggellblArr_1Index]+'" class="rtoggleCompareCV1Mood'+toggellblArr_1[toggellblArr_1Index]+'" onClick="rtoggleCompareCV1MoodData_1('+toggellblArr_1Index+')" ><span class="rtoggleCompareCV1Mood'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                    toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                    toggelBtns_1 += '</div>';

                }else{
                    toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                    toggelBtns_1 += '<input type="checkbox" id="rtoggleCompareCV1Mood'+cvSocialMediaDataExistArray[i]+'" >';
                    toggelBtns_1 += '<label for="rtoggleCompareCV1Mood'+cvSocialMediaDataExistArray[i]+'" class="rtoggleCompareCV1Mood'+cvSocialMediaDataExistArray[i]+'" onClick="rtoggleCompareCV1MoodData_1('+i+')" style="background: transparent"><span class="rtoggleCompareCV1Mood'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                    toggelBtns_1 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                    toggelBtns_1 += '</div>';
                }

            }

            $("#"+chartId+"ButtonBox").html(toggelBtns_1);
            var colorval1 = "#999999";

            const ctx = document.getElementById(chartId).getContext('2d');
            Chart.register(ChartDataLabels);
            showMonthWiseMoodGraph = new Chart(ctx, {
                type: 'radar',
                plugins: [ChartDataLabels],
                data: {
                    labels: datalablesData_1,
                    datasets: datasetsContent_1
                },
                options: {
                    borderWidth: 0,
                    responsive: true,
                    maintainAspectRatio: true,
                    animation: {
                        duration: 0
                    },
                    hover: {
                        animationDuration: 0
                    },
                    responsiveAnimationDuration: 0,
                    scales: {
                        x: {
                            //beginAtZero: true,
                            display: false,
                            fill: false,
                            backgroundColor: 'rgba(0, 0, 0, 1)',
                            gridLines: {
                                circular: true,
                                color: colorval1
                            },
                            angleLines: {
                                color: '#333333',
                                lineWidth: 2
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                fontSize: 10,
                                fontStyle: 'RobotoMonoLight',
                                fontColor: 'black'
                            }
                        },
                        y: {
                            //beginAtZero: true,
                            display: false,
                            fill: false,
                            backgroundColor: 'rgba(0, 0, 0, 1)',
                            gridLines: {
                                circular: true,
                                color: colorval1
                            },
                            angleLines: {
                                color: '#333333',
                                lineWidth: 2
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                fontSize: 11,
                                fontStyle: 'RobotoMonoLight',
                                fontColor: 'black'
                            }
                        },
                        r: {
                            grid: {
                                color: "#A1A1A1",
                                circular: true,
                            },
                            angleLines: {
                                color: '#A1A1A1',
                                lineWidth: 1
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                color: '#F1F1F1',
                                font: {
                                    family: 'RobotoMonoMedium',
                                    size: 12
                                }
                            },
                            suggestedMin: 0,
                            suggestedMax: 0.6
                        }
                    },
                    elements: {
                        line: {
                            borderWidth: 0,
                            backgroundColor : '#999999'
                        }
                    },
                    plugins: {
                        datalabels: {
                            display: false,
                        },
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = showMonthWiseMoodGraph.data.datasets.labels;
                                    return label;
                                }
                            }
                        }
                    }
                }
            });

            showMonthWiseMoodGraph.update();
        }
        else {
            var toggelBtns_2 = '';
            // for(var i=0; i<toggellblArr_1.length;i++)
            // {
            //     toggelBtns_2 += '<div class="toggleWrapper" >';
            //     toggelBtns_2 += '<input type="checkbox" id="rtoggleCompareCV2Mood'+toggellblArr_1[i]+'" >';
            //     toggelBtns_2 += '<label for="rtoggleCompareCV2Mood'+toggellblArr_1[i]+'" class="rtoggleCompareCV2Mood'+toggellblArr_1[i]+'" onClick="rtoggleCompareCV2MoodData_2('+i+')" ><span class="rtoggleCompareCV2Mood'+toggellblArr_1[i]+'_handler"></span></label>';
            //     toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
            //     toggelBtns_2 += '</div>';
            // }


            for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
            {
                if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                    var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);

                    toggelBtns_2 += '<div class="toggleWrapper" >';
                    toggelBtns_2 += '<input type="checkbox" id="rtoggleCompareCV2Mood'+toggellblArr_1[toggellblArr_1Index]+'" >';
                    toggelBtns_2 += '<label for="rtoggleCompareCV2Mood'+toggellblArr_1[toggellblArr_1Index]+'" class="rtoggleCompareCV2Mood'+toggellblArr_1[toggellblArr_1Index]+'" onClick="rtoggleCompareCV2MoodData_2('+toggellblArr_1Index+')" ><span class="rtoggleCompareCV2Mood'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                    toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                    toggelBtns_2 += '</div>';
                }else{
                    toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                    toggelBtns_2 += '<input type="checkbox" id="rtoggleCompareCV2Mood'+cvSocialMediaDataExistArray[i]+'" >';
                    toggelBtns_2 += '<label for="rtoggleCompareCV2Mood'+cvSocialMediaDataExistArray[i]+'" class="rtoggleCompareCV2Mood'+cvSocialMediaDataExistArray[i]+'" onClick="rtoggleCompareCV2MoodData_2('+i+')" style="background: transparent"><span class="rtoggleCompareCV2Mood'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                    toggelBtns_2 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                    toggelBtns_2 += '</div>';
                }

            }



            $("#"+chartId+"ButtonBox").html(toggelBtns_2);
            var colorval1 = "#999999";

            const ctx = document.getElementById(chartId).getContext('2d');
            Chart.register(ChartDataLabels);
            showMonthWiseMoodGraph_1 = new Chart(ctx, {
                type: 'radar',
                plugins: [ChartDataLabels],
                data: {
                    labels: datalablesData_1,
                    datasets: datasetsContent_1
                },
                options: {
                    borderWidth: 0,
                    responsive: true,
                    maintainAspectRatio: true,
                    animation: {
                        duration: 0
                    },
                    hover: {
                        animationDuration: 0
                    },
                    responsiveAnimationDuration: 0,
                    scales: {
                        x: {
                            //beginAtZero: true,
                            display: false,
                            fill: false,
                            backgroundColor: 'rgba(0, 0, 0, 1)',
                            gridLines: {
                                circular: true,
                                color: colorval1
                            },
                            angleLines: {
                                color: '#333333',
                                lineWidth: 2
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                fontSize: 10,
                                fontStyle: 'RobotoMonoLight',
                                fontColor: 'black'
                            }
                        },
                        y: {
                            //beginAtZero: true,
                            display: false,
                            fill: false,
                            backgroundColor: 'rgba(0, 0, 0, 1)',
                            gridLines: {
                                circular: true,
                                color: colorval1
                            },
                            angleLines: {
                                color: '#333333',
                                lineWidth: 2
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                fontSize: 11,
                                fontStyle: 'RobotoMonoLight',
                                fontColor: 'black'
                            }
                        },
                        r: {
                            grid: {
                                color: "#A1A1A1",
                                circular: true,
                            },
                            angleLines: {
                                color: '#A1A1A1',
                                lineWidth: 1
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            pointLabels: {
                                color: '#F1F1F1',
                                font: {
                                    family: 'RobotoMonoMedium',
                                    size: 12
                                }
                            },
                            suggestedMin: 0,
                            suggestedMax: 0.6
                        }
                    },
                    elements: {
                        line: {
                            borderWidth: 0,
                            backgroundColor : '#999999'
                        }
                    },
                    plugins: {
                        datalabels: {
                            display: false,
                        },
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = showMonthWiseMoodGraph_1.data.datasets.labels;
                                    return label;
                                }
                            }
                        }
                    }
                }
            });

            showMonthWiseMoodGraph_1.update();
        }

        //console.log("datalablesData_1",datalablesData_1);
        //console.log("datasetsContent_1",datasetsContent_1);

}

function compareGenreChart(toggellblArr_1,datalablesData_1,datasetsContent_1,chartId,highestllbArr,genreBgColorDataString,openType, calledFrom, cvSocialMediaDataExistArray)
{
    //console.log("#"+chartId + "-------" + "toggellblArr_1"+toggellblArr_1+ "datalablesData_1"+datalablesData_1+ "datasetsContent_1"+datasetsContent_1 + "highestllbArr"+highestllbArr);
    $("#"+chartId+"ButtonBox").remove();
    $("#"+chartId+"_holder_btn").append('<div class="graphButtonBox" id="'+chartId+'ButtonBox"></div>');
    $("#"+chartId).empty();
    if(chartId == 'cv1GenreRadarChart')
    {
        var toggelBtns_1 = '';
        //var genreBgColorDataString = "{{implode(',',$genre_bg_color_array)}}";
        var genreBgColorData = genreBgColorDataString.split(',');
        var cv1GenreRadarChart;

        var brandGenreCVPieOuterRadius = "";
        var brandGenreCVPieWinWidth = $(window).width();
        if (brandGenreCVPieWinWidth <= 1250 && brandGenreCVPieWinWidth >= 1200) {
            //console.log("1 Left Genre Compare Ind CV");
            if($(".graph_dialog").hasClass("zoom_graph"))
                brandGenreCVPieOuterRadius = "70%";
            else
                brandGenreCVPieOuterRadius = "60%";
        }
        else if (brandGenreCVPieWinWidth <= 1199 && brandGenreCVPieWinWidth >= 993) {
            //console.log("2 Left Genre Compare Ind CV");
            if($(".graph_dialog").hasClass("zoom_graph"))
                brandGenreCVPieOuterRadius = "65%";
            else
                brandGenreCVPieOuterRadius = "50%";
        }
        else if (brandGenreCVPieWinWidth <= 549) {
            //console.log("3 Left Genre Compare Ind CV");
            brandGenreCVPieOuterRadius = "50%"
        }
        else {
            //console.log("4 Left Genre Compare Ind CV");
            brandGenreCVPieOuterRadius = "67%"
        }

        if(openType != 'zoom-in')
        {
            datasetsContent_1.sort(function(a, b){return b.value - a.value});
            //console.log(datasetsContent_1, " CV1 Genre Data ", genreBgColorData, " Color");

            var finalCV1DatasetsContent1 = [];
            var cv1DatasetsContentValSum1 = 0;
            for(var i=0; i<datasetsContent_1.length;i++)
            {
                if(i<10)
                {
                    finalCV1DatasetsContent1.push(datasetsContent_1[i]);
                }
                else
                {
                    cv1DatasetsContentValSum1 = cv1DatasetsContentValSum1+datasetsContent_1[i].value;
                }
            }
            finalCV1DatasetsContent1.push({"label": "others", "value": parseFloat(cv1DatasetsContentValSum1.toFixed(2))});
            var cv1GenreRadarChartData = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalCV1DatasetsContent1,
            }
        }
        else
        {
            finalCV1DatasetsContent1 = datasetsContent_1;
            var cv1GenreRadarChartData = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalCV1DatasetsContent1,
            }
        }
        //console.log(finalCV1DatasetsContent1, " finalCV1DatasetsContent1");


        var cv1GenreRadarChartPieUpdate = function () {
            if (cv1GenreRadarChart) cv1GenreRadarChart.destroy();
            var div3W = $(".cv1GenreRadarChartWH").width();
            var div3H = $(".cv1GenreRadarChartWH").height();
            //var size = Math.min(innerHeight, innerWidth) / 2;
            var size = Math.min(div3W, div3H);
            var opt =  {
                header:{
                    titleSubtitlePadding:0
                },
                /* data: {
                    //sortOrder: "value-desc",
		            smallSegmentGrouping: {
			            enabled: false
		            },
                    content: finalCV1DatasetsContent1,
                }, */
                data:cv1GenreRadarChartData,
                size: {
                    pieInnerRadius: "40%",
                    pieOuterRadius: brandGenreCVPieOuterRadius,
                    canvasHeight: div3H,
                    canvasWidth: div3W,
                },
                labels: {
                    outer: {
                        pieDistance: 15
                    },
                    mainLabel: {
                        font: "RobotoMonoMedium",
                        color: "#F1F1F1",
                        fontSize: 12
                    },
                    percentage: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        decimalPlaces: 0,
                        fontSize: 12
                    },
                    value: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        fontSize: 12
                    },
                    lines: {
                        enabled: true,
			            style: "straight",
			            color: "#A1A1A1"
                    }
                },
                tooltips:{
                    enabled:false,
                    type:"placeholder",
                    string:"{label}:{percentage}%",
                    style:{padding:5}
                },
                misc: {
                    gradient: {
                        enabled: false,
                        percentage: 100
                    },
                    pieCenterOffset: {
                        x: -8,
                        y: 0
                    },
                    colors: {
                        segments: genreBgColorData,
                        segmentStroke: "#f1f1f1"
                    },
                    canvaspadding:{
                        top:0,
                        right:0,
                        bottom:0,
                        left:0
                    }
                }
            };
            cv1GenreRadarChart = new d3pie("cv1GenreRadarChart", opt);
        };
        cv1GenreRadarChartPieUpdate();
        window.addEventListener('resize', cv1GenreRadarChartPieUpdate);

        if(openType == "zoom-in" || openType == "zoom-out")
        {
            if(openType == "zoom-in")
            {
                if(toggellblArr_1.length == 1)
                {
                    // toggelBtns_1 += '<div class="toggleWrapper">';
                    // toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[0]+'" disabled>';
                    // toggelBtns_1 += '<label for="toggle'+toggellblArr_1[0]+'" class="toggle'+toggellblArr_1[0]+'" disabled><span class="toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    // toggelBtns_1 += '</div>';

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++){

                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            toggelBtns_1 += '<div class="toggleWrapper">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_1 += '<label for="toggle'+toggellblArr_1[0]+'" class="toggle'+toggellblArr_1[0]+'" disabled><span class="toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                            toggelBtns_1 += '</div>';

                        }else{
                            toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+cvSocialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_1 += '<label for="toggle'+cvSocialMediaDataExistArray[i]+'" class="toggle'+cvSocialMediaDataExistArray[i]+'" disabled style="background: transparent"><span class="toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_1 += '</div>';
                        }
                    }
                }
                else
                {
                    // for(var i=0; i<toggellblArr_1.length;i++)
                    // {
                    //     toggelBtns_1 += '<div class="toggleWrapper">';
                    //     toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_1 += '<label for="toggle'+toggellblArr_1[i]+'" class="toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'cv1GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" ><span class="toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_1 += '</div>';
                    // }

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);

                            toggelBtns_1 += '<div class="toggleWrapper">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[toggellblArr_1Index]+'" >';
                            toggelBtns_1 += '<label for="toggle'+toggellblArr_1[toggellblArr_1Index]+'" class="toggle'+toggellblArr_1[toggellblArr_1Index]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[toggellblArr_1Index]+'\', \'withPopup\', \'cv1GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" ><span class="toggle'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                            toggelBtns_1 += '</div>';
                        }else{
                            toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+cvSocialMediaDataExistArray[i]+'" >';
                            toggelBtns_1 += '<label for="toggle'+cvSocialMediaDataExistArray[i]+'" class="toggle'+cvSocialMediaDataExistArray[i]+'" onClick="toggleDataCompareCV(\''+cvSocialMediaDataExistArray[i]+'\', \'withPopup\', \'cv1GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" style="background: transparent"><span class="toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_1 += '</div>';
                        }

                    }
                }
            }
            else
            {
                if(toggellblArr_1.length == 1)
                {
                    // toggelBtns_1 += '<div class="toggleWrapper">';
                    // toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[0]+'" disabled>';
                    // toggelBtns_1 += '<label for="toggle'+toggellblArr_1[0]+'" class="toggle'+toggellblArr_1[0]+'" disabled><span class="toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    // toggelBtns_1 += '</div>';

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++){

                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            toggelBtns_1 += '<div class="toggleWrapper">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_1 += '<label for="toggle'+toggellblArr_1[0]+'" class="toggle'+toggellblArr_1[0]+'" disabled><span class="toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                            toggelBtns_1 += '</div>';

                        }else{
                            toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+cvSocialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_1 += '<label for="toggle'+cvSocialMediaDataExistArray[i]+'" class="toggle'+cvSocialMediaDataExistArray[i]+'" disabled style="background: transparent"><span class="toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_1 += '</div>';
                        }
                    }
                }
                else
                {
                    // for(var i=0; i<toggellblArr_1.length;i++)
                    // {
                    //     toggelBtns_1 += '<div class="toggleWrapper">';
                    //     toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_1 += '<label for="toggle'+toggellblArr_1[i]+'" class="toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withoutPopup\', \'cv1GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')" ><span class="toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_1 += '</div>';
                    // }


                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){
                            var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);
                            toggelBtns_1 += '<div class="toggleWrapper">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[toggellblArr_1Index]+'" >';
                            toggelBtns_1 += '<label for="toggle'+toggellblArr_1[toggellblArr_1Index]+'" class="toggle'+toggellblArr_1[toggellblArr_1Index]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[toggellblArr_1Index]+'\', \'withoutPopup\', \'cv1GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')" ><span class="toggle'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                            toggelBtns_1 += '</div>';

                        }else{
                            toggelBtns_1 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_1 += '<input type="checkbox" id="toggle'+cvSocialMediaDataExistArray[i]+'" >';
                            toggelBtns_1 += '<label for="toggle'+cvSocialMediaDataExistArray[i]+'" class="toggle'+cvSocialMediaDataExistArray[i]+'" onClick="toggleDataCompareCV(\''+cvSocialMediaDataExistArray[i]+'\', \'withoutPopup\', \'cv1GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')"  style="background: transparent"><span class="toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_1 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_1 += '</div>';
                        }

                    }


                }
            }
        }
        else
        {
            if(toggellblArr_1.length == 1)
            {
                toggelBtns_1 += '<div class="toggleWrapper">';
                toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[0]+'" disabled>';
                toggelBtns_1 += '<label for="toggle'+toggellblArr_1[0]+'" class="toggle'+toggellblArr_1[0]+'" disabled><span class="toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                toggelBtns_1 += '</div>';
            }
            else
            {
                for(var i=0; i<toggellblArr_1.length;i++)
                {
                    toggelBtns_1 += '<div class="toggleWrapper">';
                    toggelBtns_1 += '<input type="checkbox" id="toggle'+toggellblArr_1[i]+'" >';
                    toggelBtns_1 += '<label for="toggle'+toggellblArr_1[i]+'" class="toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'cv1GenreRadarChart\')" ><span class="toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    toggelBtns_1 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    toggelBtns_1 += '</div>';
                }
            }
        }

        $("#cv1GenreRadarChartButtonBox").html(toggelBtns_1);
        // $("#cv1GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index) {
        //     if(index > 0) {
        //         $(this).prop( "checked", true );
        //     }
        // });
        if(toggellblArr_1.length == 1){

            $("#cv1GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index,element) {
                var checkboxId = $(element).attr("id").replace("toggle","");
                if(toggellblArr_1.includes(checkboxId)){
                    $(this).prop( "checked", false );
                }else{
                    $(this).prop( "checked", true );
                }

            });

        }else{
            $("#cv1GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index) {
                if(index > 0) {
                    $(this).prop( "checked", true );
                }
            });
        }
    }
    else
    {
        var toggelBtns_2 = '';;
        //var genreBgColorDataString = "{{implode(',',$genre_bg_color_array)}}";
        var genreBgColorData = genreBgColorDataString.split(',');
        var cv2GenreRadarChart;

        var brandGenreCVPieOuterRadius = "";
        var brandGenreCVPieWinWidth = $(window).width();
        if (brandGenreCVPieWinWidth <= 1250 && brandGenreCVPieWinWidth >= 1200) {
            //console.log("1 Right Genre Compare Ind CV");
            if($(".graph_dialog").hasClass("zoom_graph"))
                brandGenreCVPieOuterRadius = "70%";
            else
                brandGenreCVPieOuterRadius = "60%";
        }
        else if (brandGenreCVPieWinWidth <= 1199 && brandGenreCVPieWinWidth >= 993) {
            //console.log("2 Right Genre Compare Ind CV");
            if($(".graph_dialog").hasClass("zoom_graph"))
                brandGenreCVPieOuterRadius = "65%";
            else
                brandGenreCVPieOuterRadius = "50%";
        }
        else if (brandGenreCVPieWinWidth <= 549) {
            //console.log("3 Right Genre Compare Ind CV");
            brandGenreCVPieOuterRadius = "50%"
        }
        else {
            //console.log("4 Right Genre Compare Ind CV");
            brandGenreCVPieOuterRadius = "67%"
        }

        if(openType != 'zoom-in')
        {
            datasetsContent_1.sort(function(a, b){return b.value - a.value});
            //console.log(datasetsContent_1, " CV2 Genre Data ", genreBgColorData, " Color");

            var finalCV2DatasetsContent1 = [];
            var cv2DatasetsContentValSum1 = 0;
            for(var i=0; i<datasetsContent_1.length;i++)
            {
                if(i<10)
                {
                    finalCV2DatasetsContent1.push(datasetsContent_1[i]);
                }
                else
                {
                    cv2DatasetsContentValSum1 = cv2DatasetsContentValSum1+datasetsContent_1[i].value;
                }
            }
            finalCV2DatasetsContent1.push({"label": "others", "value": parseFloat(cv2DatasetsContentValSum1.toFixed(2))});
            var cv2GenreRadarChartData = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalCV2DatasetsContent1,
            }
        }
        else
        {
            finalCV2DatasetsContent1 = datasetsContent_1;
            var cv2GenreRadarChartData = {
                sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalCV2DatasetsContent1,
            }
        }
        //console.log(finalCV2DatasetsContent1, " finalCV2DatasetsContent1");


        var cv2GenreRadarChartPieUpdate = function () {
            if (cv2GenreRadarChart) cv2GenreRadarChart.destroy();
            var div3W = $(".cv2GenreRadarChartWH").width();
            var div3H = $(".cv2GenreRadarChartWH").height();
            //var size = Math.min(innerHeight, innerWidth) / 2;
            var size = Math.min(div3W, div3H);
            var opt =  {
                header:{
                    titleSubtitlePadding:0
                },
                /* data: {
                    //sortOrder: "value-desc",
		            smallSegmentGrouping: {
			            enabled: false
		            },
                    content: finalCV2DatasetsContent1,
                }, */
                data:cv2GenreRadarChartData,
                size: {
                    pieInnerRadius: "40%",
                    pieOuterRadius: brandGenreCVPieOuterRadius,
                    canvasHeight: div3H,
                    canvasWidth: div3W,
                },
                labels: {
                    outer: {
                        pieDistance: 15
                    },
                    mainLabel: {
                        font: "RobotoMonoMedium",
                        color: "#F1F1F1",
                        fontSize: 12
                    },
                    percentage: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        decimalPlaces: 0,
                        fontSize: 12
                    },
                    value: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        fontSize: 12
                    },
                    lines: {
                        enabled: true,
			            style: "straight",
			            color: "#A1A1A1"
                    }
                },
                tooltips:{
                    enabled:false,
                    type:"placeholder",
                    string:"{label}:{percentage}%",
                    style:{padding:5}
                },
                misc: {
                    gradient: {
                        enabled: false,
                        percentage: 100
                    },
                    pieCenterOffset: {
                        x: -8,
                        y: 0
                    },
                    colors: {
                        segments: genreBgColorData,
                        segmentStroke: "#f1f1f1"
                    },
                    canvaspadding:{
                        top:0,
                        right:0,
                        bottom:0,
                        left:0
                    }
                }
            };
            cv2GenreRadarChart = new d3pie("cv2GenreRadarChart", opt);
        };
        cv2GenreRadarChartPieUpdate();
        window.addEventListener('resize', cv2GenreRadarChartPieUpdate);
        if(openType == "zoom-in" || openType == "zoom-out")
        {
            if(openType == "zoom-in")
            {
                if(toggellblArr_1.length == 1)
                {
                    // toggelBtns_2 += '<div class="toggleWrapper">';
                    // toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                    // toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    // toggelBtns_2 += '</div>';

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++){

                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            toggelBtns_2 += '<div class="toggleWrapper">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                            toggelBtns_2 += '</div>';

                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+cvSocialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+cvSocialMediaDataExistArray[i]+'" class="r2toggle'+cvSocialMediaDataExistArray[i]+'" disabled style="background: transparent"><span class="r2toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }
                    }
                }
                else
                {
                    // for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
                    // {
                    //     toggelBtns_2 += '<div class="toggleWrapper">';
                    //     toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'cv2GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_2 += '</div>';
                    // }

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);

                            toggelBtns_2 += '<div class="toggleWrapper">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" class="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[toggellblArr_1Index]+'\', \'withPopup\', \'cv2GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                            toggelBtns_2 += '</div>';

                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+cvSocialMediaDataExistArray[i]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+cvSocialMediaDataExistArray[i]+'" class="r2toggle'+cvSocialMediaDataExistArray[i]+'" onClick="toggleDataCompareCV(\''+cvSocialMediaDataExistArray[i]+'\', \'withPopup\', \'cv2GenreRadarChart\', \'zoom-in\',\''+calledFrom+'\')" style="background: transparent"><span class="r2toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }

                    }
                }
            }
            else
            {
                if(toggellblArr_1.length == 1)
                {
                    // toggelBtns_2 += '<div class="toggleWrapper">';
                    // toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                    // toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                    // toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    // toggelBtns_2 += '</div>';
                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++){

                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            toggelBtns_2 += '<div class="toggleWrapper">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                            toggelBtns_2 += '</div>';

                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+cvSocialMediaDataExistArray[i]+'" disabled>';
                            toggelBtns_2 += '<label for="r2toggle'+cvSocialMediaDataExistArray[i]+'" class="r2toggle'+cvSocialMediaDataExistArray[i]+'" disabled style="background: transparent"><span class="r2toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }
                    }
                }
                else
                {
                    // for(var i=0; i<toggellblArr_1.length;i++)
                    // {
                    //     toggelBtns_2 += '<div class="toggleWrapper">';
                    //     toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    //     toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withoutPopup\', \'cv2GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    //     toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    //     toggelBtns_2 += '</div>';
                    // }

                    for(var i=0; i<cvSocialMediaDataExistArray.length;i++)
                    {
                        if(toggellblArr_1.includes(cvSocialMediaDataExistArray[i])){

                            var toggellblArr_1Index = toggellblArr_1.indexOf(cvSocialMediaDataExistArray[i]);

                            toggelBtns_2 += '<div class="toggleWrapper">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" class="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[toggellblArr_1Index]+'\', \'withoutPopup\', \'cv2GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')" ><span class="r2toggle'+toggellblArr_1[toggellblArr_1Index]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[toggellblArr_1Index]+'<span class="shw_hid_highest_mood">: '+highestllbArr[toggellblArr_1Index]+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }else{
                            toggelBtns_2 += '<div class="toggleWrapper" style="pointer-events: none;">';
                            toggelBtns_2 += '<input type="checkbox" id="r2toggle'+cvSocialMediaDataExistArray[i]+'" >';
                            toggelBtns_2 += '<label for="r2toggle'+cvSocialMediaDataExistArray[i]+'" class="r2toggle'+cvSocialMediaDataExistArray[i]+'" onClick="toggleDataCompareCV(\''+cvSocialMediaDataExistArray[i]+'\', \'withoutPopup\', \'cv2GenreRadarChart\', \'zoom-out\',\''+calledFrom+'\')" style="background: transparent"><span class="r2toggle'+cvSocialMediaDataExistArray[i]+'_handler"></span></label>';
                            toggelBtns_2 += '<span class="cust-toggleBtnName">'+cvSocialMediaDataExistArray[i]+'<span class="shw_hid_highest_mood">: '+''+'</span></span>';
                            toggelBtns_2 += '</div>';
                        }

                    }
                }
            }
        }
        else
        {
            if(toggellblArr_1.length == 1)
            {
                toggelBtns_2 += '<div class="toggleWrapper">';
                toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[0]+'" disabled>';
                toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[0]+'" class="r2toggle'+toggellblArr_1[0]+'" disabled><span class="r2toggle'+toggellblArr_1[0]+'_handler"></span></label>';
                toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[0]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                toggelBtns_2 += '</div>';
            }
            else
            {
                for(var i=0; i<toggellblArr_1.length;i++)
                {
                    toggelBtns_2 += '<div class="toggleWrapper">';
                    toggelBtns_2 += '<input type="checkbox" id="r2toggle'+toggellblArr_1[i]+'" >';
                    toggelBtns_2 += '<label for="r2toggle'+toggellblArr_1[i]+'" class="r2toggle'+toggellblArr_1[i]+'" onClick="toggleDataCompareCV(\''+toggellblArr_1[i]+'\', \'withPopup\', \'cv2GenreRadarChart\')" ><span class="r2toggle'+toggellblArr_1[i]+'_handler"></span></label>';
                    toggelBtns_2 += '<span class="cust-toggleBtnName">'+toggellblArr_1[i]+'<span class="shw_hid_highest_mood">: '+highestllbArr[i]+'</span></span>';
                    toggelBtns_2 += '</div>';
                }
            }
        }

        $("#cv2GenreRadarChartButtonBox").html(toggelBtns_2);
        // $("#cv2GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index) {
        //     if(index > 0) {
        //         $(this).prop( "checked", true );
        //     }
        // });
        if(toggellblArr_1.length == 1){
            $("#cv2GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index,element) {
                var checkboxId = $(element).attr("id").replace("r2toggle","");
                if(toggellblArr_1.includes(checkboxId)){
                    $(this).prop( "checked", false );
                }else{
                    $(this).prop( "checked", true );
                }
            });
        }else{
             $("#cv2GenreRadarChartButtonBox").find("input[type='checkbox']").each(function(index) {
                if(index > 0) {
                    $(this).prop( "checked", true );
                }
            });
        }
    }
}
//var currentGraphWidth = 550;

function zoominCVMoodG(graphId) {

    //var displayCVMoodGraphWidth = "";
    var displayCVMoodGraphWidth = $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").width();
    /* var widthClass = "";
    if(graphId == "modal_brandCVMoodGraph" || graphId == "modal_indCVMoodGraph" || graphId == "modal_subIndCVMoodGraph") {
        displayCVMoodGraphWidth = $(".graph_dialog.zoom_graph").find(".radarChart1WH").width();
        console.log(displayCVMoodGraphWidth, " CV");
        widthClass = "radarChart1WH";
        //var chartId = "radarChart1";
    }
    if(graphId == "modal_compareCV1MoodGraph" || graphId == "modal_compareCV2MoodGraph" || graphId == "modal_compareIndCV1MoodGraph" || graphId == "modal_compareIndCV2MoodGraph" || graphId == "modal_compareSubIndCV1MoodGraph" || graphId == "modal_compareSubIndCV2MoodGraph") {
        //graphId == "modal_compareCV1MoodGraph" || graphId == "modal_compareCV2MoodGraph" || graphId == "modal_compareIndCV1MoodGraph" || graphId == "modal_compareIndCV2MoodGraph" || graphId == "modal_compareSubIndCV1MoodGraph" || graphId == "modal_compareSubIndCV2MoodGraph"
        displayCVMoodGraphWidth = $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").width();
        console.log(displayCVMoodGraphWidth, " Compare");
        widthClass = "radarChartCompareCVMoodWH";
    } */

    if(inc <= 1000) {
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").css({"cursor": "not-allowed", "opacity": "0.3"});
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").attr("disabled", true);
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").removeAttr("style");
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").removeAttr("disabled");

        $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").width(displayCVMoodGraphWidth + 200);
        $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").height(displayCVMoodGraphWidth + 200);
        var innerContentWidth = $("#"+graphId+".graph_dialog.zoom_graph").find('canvas').width();
        var innerContentHeight = $("#"+graphId+".graph_dialog.zoom_graph").find('canvas').height();
        var scrollPositionL = 0;
        var scrollPositionT = 0;
        if($(window).width() <= 640) {
            scrollPositionL = innerContentWidth/4 - 80;
            scrollPositionT = innerContentHeight/4 - 80;
        }
        else {
            scrollPositionL = innerContentWidth/3 - 0;
            scrollPositionT = innerContentHeight/3 - 0;
        }
        $('.'+graphId+'_DragRadar').scrollLeft(scrollPositionL);
        $('.'+graphId+'_DragRadar').scrollTop(scrollPositionT);

        inc += 200;
        console.log(inc, " + Inc");
        setTimeout(()=>{
            $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").removeAttr("style");
            $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").removeAttr("disabled");
        }, 500);
    }
    else {
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").css({"cursor": "not-allowed", "opacity": "0.3"});
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").attr("disabled", true);
        return false;
    }
}
function zoomoutCVMoodG(graphId) {

    var displayCVMoodGraphWidth = $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").width();

    if(inc <= 399) {
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").css({"cursor": "not-allowed", "opacity": "0.3"});
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").attr("disabled", true);
        return false;
    }
    else {
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").css({"cursor": "not-allowed", "opacity": "0.3"});
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").attr("disabled", true);
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").removeAttr("style");
        $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomin").removeAttr("disabled");

        $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").width(displayCVMoodGraphWidth - 200);
        $("#"+graphId+".graph_dialog.zoom_graph").find(".radarChart1WH").height(displayCVMoodGraphWidth - 200);
        var innerContentWidth = $("#"+graphId+".graph_dialog.zoom_graph").find('canvas').width();
        var innerContentHeight = $("#"+graphId+".graph_dialog.zoom_graph").find('canvas').height();
        var scrollPositionL = 0;
        var scrollPositionT = 0;
        if($(window).width() <= 640) {
            scrollPositionL = innerContentWidth/4 - 80;
            scrollPositionT = innerContentHeight/4 - 80;
        }
        else {
            scrollPositionL = innerContentWidth/4 - 100;
            scrollPositionT = innerContentHeight/4 - 100;
        }
        $('.'+graphId+'_DragRadar').scrollLeft(scrollPositionL);
        $('.'+graphId+'_DragRadar').scrollTop(scrollPositionT);

        inc -= 200;
        console.log(inc, " - Inc");
        setTimeout(() => {
            $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").removeAttr("style");
            $("#"+graphId).find(".zoominoutCVMoodGBtns .btnZoomout").removeAttr("disabled");
        }, 500);
    }
}

function toggleData1(value){
    const showValue = showMonthWiseGraph.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseGraph.hide(value);
    }
    if(showValue === false){
        showMonthWiseGraph.show(value);
    }
}

function toggleData_1(value){
    const showValue = showMonthWiseGraph_1.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseGraph_1.hide(value);
    }
    if(showValue === false){
        showMonthWiseGraph_1.show(value);
    }
}

function rtoggleCompareCV1MoodData_1(value){
    const showValue = showMonthWiseMoodGraph.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseMoodGraph.hide(value);
    }
    if(showValue === false){
        showMonthWiseMoodGraph.show(value);
    }
}
function rtoggleCompareCV2MoodData_2(value){
    const showValue = showMonthWiseMoodGraph_1.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseMoodGraph_1.hide(value);
    }
    if(showValue === false){
        showMonthWiseMoodGraph_1.show(value);
    }
}

function rtoggleCompareCV1GenreData_1(value){
    const showValue = showMonthWiseGenreGraph.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseGenreGraph.hide(value);
    }
    if(showValue === false){
        showMonthWiseGenreGraph.show(value);
    }
}
function rtoggleCompareCV2GenreData_2(value){
    const showValue = showMonthWiseGenreGraph_1.isDatasetVisible(value);
    if(showValue === true){
        showMonthWiseGenreGraph_1.hide(value);
    }
    if(showValue === false){
        showMonthWiseGenreGraph_1.show(value);
    }
}

function cvVideoTab(tabId,type){
    if(type == 'cv1') {
        var btnHolder = 'brandCV1MostPVideo_btnHolder';
        var parent = 'compareCV1MostPopVideo';
        var child = 'cv1Video_';
    }
    else if (type == 'cv2') {
        var btnHolder = 'brandCV2MostPVideo_btnHolder';
        var parent = 'compareCV2MostPopVideo';
        var child = 'cv2Video_';
    }
    else {
        var btnHolder = 'brandCVMostPVideo_btnHolder';
        var parent = 'displayCVMostPopVideo';
        var child = 'cvVideo_';
    }

    $("."+btnHolder).find("span.cust_btn").removeClass("select");
    var tabIDArr = tabId.split("_");
    $("."+btnHolder).find(".cust_btn").not($("."+btnHolder).find("span."+tabId).addClass("select")).removeClass("select");
    $("."+parent).not($("."+parent+"."+child+tabIDArr[1]).removeClass("hide")).addClass("hide");
    $('.'+parent).slick('refresh');
    //console.log("tabId"+tabId+":type"+type+":parent"+parent);
}
function cvVideoAnalysedTab(tabId,type){
    console.log("function cvVideoAnalysedTab called and type =" ,type);
    if(type == 'cv1') {
        var btnHolder = 'brandCV1VideoAnalysed_btnHolder';
        var parent = 'compareCV1VideoAnalysedSlider';
        var child = 'cv1Slide';
    }
    else if (type == 'cv2') {
        var btnHolder = 'brandCV2VideoAnalysed_btnHolder';
        var parent = 'compareCV2VideoAnalysedSlider';
        var child = 'cv2Slide';
    }
    else {
        var btnHolder = 'videoAnalysed_btnHolder';
        var parent = 'cvVideoAnalysedSlider';
        var child = 'cvSlide';
    }

    $("."+btnHolder).find("span.cust_btn").removeClass("select");
    var tabIDArr = tabId.split("_");
    console.log("tabIDArr =",tabIDArr);
    $("."+btnHolder).find(".cust_btn").not($("."+btnHolder).find("span."+tabId).addClass("select")).removeClass("select");
    $("."+parent).not($("."+parent+"."+child+tabIDArr[1]).removeClass("hide")).addClass("hide");
    console.log(child+tabIDArr[1]);
    $('.'+parent).slick('refresh');
    console.log("tabId"+tabId+":type"+type+":parent"+parent);
}

function cvSonicLogoTab(tabId,type){
    $(".brandCVSonicLogo_btnHolder."+type).find("span.cust_btn").removeClass("select");
    $('.brandCVSonicLogo_btnHolder.'+type).find(".cust_btn."+tabId).addClass("select");
    var temp_tabId = tabId.split('_');
    //console.log("temp_tabId"+temp_tabId+" : "+"tabId"+tabId);
    $("."+temp_tabId[0]).not($("."+tabId).removeClass("hide")).addClass("hide");
    //var currentPlayingID = $(".audio-pause-button."+type).parent().find(".audio-player").find("audio").attr("id");
    var currentPlayingID = $(".audio-pause-button").parent().find(".audio-player").find("audio").attr("id");
    //console.log("currentPlayingID"+currentPlayingID);
    if(currentPlayingID != undefined)
    {
        document.getElementById(currentPlayingID).pause();
        playstatusflagCompare = false;
        playstatusflag = false;
        //console.log("playstatusflag"+playstatusflag+" : playstatusflagCompare"+playstatusflagCompare);
        $("#"+currentPlayingID).parent().parent().find("span").removeClass("audio-pause-button");
        $("#"+currentPlayingID).parent().parent().find("span").addClass("audio-player-button");
    }
}
if(window.location.href.indexOf("display-cv") > -1 || window.location.href.indexOf("shared-cv") > -1) {
    // $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());/
    $(".cvVideo_1, .cvVideo_2, .cvVideo_3, .cvVideo_4").find(".video_holder").append(getLoader());
}
if(window.location.href.indexOf("cv-compare") > -1) {
    // $(".lpCompareCV_section_9_cv1").find(".compareCV1MostPopVideoPDiv").find("#modal_brandCV1MPVideo").append(getLoader());
    // $(".lpCompareCV_section_9_cv2").find(".compareCV2MostPopVideoPDiv").find("#modal_brandCV2MPVideo").append(getLoader());
    $(".cv1Video_1, .cv1Video_3, .cv1Video_4, .cv2Video_1, .cv2Video_3, .cv2Video_4").find(".video_holder").append(getLoader());
}

if(window.location.href.indexOf("social-blade-sync")) {
    $(function() {
        window.fs_test = $('.addCvIdInSocialBladeSync').fSelect();
    });

if(window.location.href.indexOf("get-high-res-image")) {
    $(function() {
        window.fs_test = $('.cvIndSindNames').fSelect();
        var fsgrplbllen = $(".fs-options").find(".fs-optgroup-label").length;
        //console.log(fsgrplbllen, " Fs Options");
        var fsg0 = "";
        var fsg1 = "";
        var fsg2 = "";
        var fsg0data = "";
        var fsg1data = "";
        var fsg2data = "";
        for(var i=0; i<fsgrplbllen; i++){
            if(i==0){
                fsg0 = $(".fs-options").find(".g0").clone();
                fsg0data = '<div class="fs-optgroup fslblg0"><div class="fs-optgroup-label" data-group="0">Brand Snapshot Names</div></div>';
            }
            if(i==1){
                fsg1 = $(".fs-options").find(".g1").clone();
                fsg1data = '<div class="fs-optgroup fslblg1"><div class="fs-optgroup-label" data-group="1">Industry Snapshot Names</div></div>';
            }
            if(i==2){
                fsg2 = $(".fs-options").find(".g2").clone();
                fsg2data = '<div class="fs-optgroup fslblg2"><div class="fs-optgroup-label" data-group="2">Sub Industry Snapshot Names</div></div>';
            }
        }
        //console.log(fsg0, " : ", fsg1, " : ", fsg2);
        if(fsg0 != "" || fsg1 != "" || fsg2 != ""){
            $(".highResImages-dropDown").find(".fs-dropdown").find(".fs-options").remove();
            $(".highResImages-dropDown").find(".fs-dropdown").append('<div class="fs-option lbl0" ><span class="fs-checkbox"><i></i></span><div class="fs-option-label">Select Brand or Industry or Sub Industry Name</div></div>');
            if(fsg0 != "") {
                $(".highResImages-dropDown").find(".fs-dropdown").append(fsg0data);
                $(".highResImages-dropDown").find(".fs-dropdown").find(".fslblg0").append(fsg0);
            }
            if(fsg1 != "") {
                $(".highResImages-dropDown").find(".fs-dropdown").append(fsg1data);
                $(".highResImages-dropDown").find(".fs-dropdown").find(".fslblg1").append(fsg1);
            }
            if(fsg2 != "") {
                $(".highResImages-dropDown").find(".fs-dropdown").append(fsg2data);
                $(".highResImages-dropDown").find(".fs-dropdown").find(".fslblg2").append(fsg2);
            }
        }
        $(".highResImages-dropDown").find(".fs-dropdown").find(".fs-optgroup").find(".fs-option").removeClass("selected");
        $(".highResImages-dropDown").find(".fs-label-wrap").find(".fs-label").text("Select Brand or Industry or Sub Industry Name");
    });

}

    /* $(".social_media_name").on('change', function() {
        console.log("crntParntID");
        if(this.value!=0 && this.value!='')
        {
            //$("#channel_name_holder").removeClass("hide");
            var crntParntID = $(this).parent().attr("id");
            console.log("crntParntID",crntParntID);
            $("#"+crntParntID).find(".btnPlus_"+crntParntID.split('_')[0]).removeClass("hide");
            var selInptGrpLen = $("#"+crntParntID.split('_')[0]+"_chnl_holder").find(".input-group").length;
            $("#"+crntParntID.split('_')[0]+"_social_media_name_count").val(selInptGrpLen);
        }
        else
        {
            //$("#channel_name_holder").addClass("hide");
        }
    }); */

    function cloneSocialMediaInptData(type)
    {
        var inputData = '';
        var parentHldrID = type+'_chnl_holder';
        var optnLen = $("#"+type+"_social_media_name_inpt_holdr_0").find("option").length-1;
        var inputGrpLen = $("#"+parentHldrID).find(".input-group").length;
        inputData +=    '<div class="input-group form-group" id="'+type+'_social_media_name_inpt_holdr_'+inputGrpLen+'">';
        inputData +=    '<select class="form_control_inner social_media_name dropdownDownArrow" onchange="getSBSelVal(this)" id="'+type+'_social_media_name_'+inputGrpLen+'" name="'+type+'_social_media_name_'+inputGrpLen+'">';
        //inputData +=    '<option value="0">Select Channel Name</option>';
        inputData +=    '</select>';
        inputData +=    '<span class="btnMinus btnMinus_'+type+'" onclick="deCloneSocialMediaInptData(\''+type+'\', '+inputGrpLen+')"><i class="fa fa-minus"></i></span>';
        //inputData +=    '<span class="text-danger">@error("'+type+'_social_media_name_'+inputGrpLen+'") {{ $message }} @enderror</span>';
        //inputData +=    '<input type="hidden" id="'+type+'_social_media_name_'+inputGrpLen+'_val" name="'+type+'_social_media_name_'+inputGrpLen+'_val"></input>';
        inputData +=    '</div>';
        //console.log(inputData);

        $("#"+parentHldrID).append(inputData);

        var decrInputGrpLen = inputGrpLen-1;
        //$("#"+type+"_social_media_name_"+inputGrpLen).append($("#"+type+"_social_media_name_"+decrInputGrpLen).find("option").not($("#"+type+"_social_media_name_"+decrInputGrpLen+" option").filter(":selected")));


        var lastInsertedSelOptnLen = $("#"+type+"_social_media_name_"+decrInputGrpLen +" option").length-2;
        //console.log(lastInsertedSelOptnLen, inputGrpLen, inputGrpLen+1, optnLen);
        if(optnLen == inputGrpLen+1)
        {
            $(".btnPlus_"+type).addClass('hide');
        }
        else
        {
            $(".btnPlus_"+type).removeClass('hide');
        }
        if(lastInsertedSelOptnLen==0)
        {
            //console.log("tttttttttt",lastInsertedSelOptnLen, inputGrpLen, inputGrpLen+1, optnLen);
            if(inputGrpLen<optnLen)
            {
                var ogSelOptn = $("#"+type+"_social_media_name_0 option").clone();
                $("#"+type+"_social_media_name_"+inputGrpLen).append($("#"+type+"_social_media_name_0 option").clone());
                for(var i=0; i<inputGrpLen; i++)
                {
                   var selOptnTxt =  $("#"+type+"_social_media_name_"+i+" option").filter(":selected").text();
                   $("#"+type+"_social_media_name_"+inputGrpLen+" option:contains('"+selOptnTxt+"')").remove();
                   $("#"+type+"_social_media_name_"+inputGrpLen+" option").each(function(){
                    $(this).siblings('[value="'+this.value+'"]').remove();
                   });
                }
            }
        }
        else
        {
            //console.log(type, inputGrpLen, decrInputGrpLen, optnLen);
            $("#"+type+"_social_media_name_"+inputGrpLen).append($("#"+type+"_social_media_name_"+decrInputGrpLen+" option").not($("#"+type+"_social_media_name_"+decrInputGrpLen+" option").filter(":selected")).clone());
        }
    }

    function deCloneSocialMediaInptData(type, id)
    {
        //console.log(type, id);
        var parentHldrID = type+'_chnl_holder';
        var optnLen = $("#"+type+"_social_media_name_inpt_holdr_1").find("option").length-1;
        var inputGrpLen = $("#"+parentHldrID).find(".input-group").length;
        $("#"+type+"_social_media_name_inpt_holdr_"+id).remove();
        if(optnLen == inputGrpLen)
        {
            //$(".btnPlus_"+type).addClass('hide');
        }
        else
        {
            $(".btnPlus_"+type).removeClass('hide');
        }
        $.each($('#'+parentHldrID).find(".input-group"), function(index, item){
            //console.log(index, item);
            //$(this).attr("row-number",(index));
            $(this).attr("id",(type+"_social_media_name_inpt_holdr_"+index));
            $(this).find("select").attr("id",(type+"_social_media_name_"+index));
            $(this).find("select").attr("name",(type+"_social_media_name_"+index));
            $(this).find("input").attr("id",(type+"_social_media_name_"+index+"_val"));
            $(this).find("input").attr("name",(type+"_social_media_name_"+index+"_val"));
            if(index!=0)
            {
                $(this).find(".btnMinus_"+type).attr("onclick", 'deCloneSocialMediaInptData("'+type+'",'+index+')');
            }
        });
        var selInptGrpLen = $("#"+type+"_chnl_holder").find(".input-group").length;
        $("#"+type+"_social_media_name_count").val(selInptGrpLen);
    }

    function getSBSelVal(id)
    {
        //console.log(id.value, id.id);
        var crntParntID = $(id).parent().attr("id");
        //console.log("crntParntID",crntParntID);
        var selInptGrpLen = $("#"+crntParntID.split('_')[0]+"_chnl_holder").find(".input-group").length;
        if(id.value!=0 && id.value!='')
        {
            $("#"+crntParntID.split('_')[0]+"_social_media_name_count").val(selInptGrpLen);
            if($("#"+crntParntID.split('_')[0]+"_social_media_name_0").find('option').length > 2)
            {
                $("#"+crntParntID).find(".btnPlus_"+crntParntID.split('_')[0]).removeClass("hide");
            }
        }

        if(selInptGrpLen>1)
        {
            //console.log("selInptGrpLen",selInptGrpLen);
            //console.log(crntParntID.split('_')[6].replace("social_media_name_"));
            if(crntParntID.split('_')[6] == 0)
            {
                for(var i=1;i<=selInptGrpLen;i++)
                {
                    $("#"+crntParntID.split('_')[0]+"_social_media_name_inpt_holdr_"+i).remove();
                    //cloneSocialMediaInptData(crntParntID.split('_')[0]);
                }
            }
        }

        if($("#yt_social_media_name_0").val() !=0 || $("#ig_social_media_name_0").val() !=0 || $("#tt_social_media_name_0").val() !=0 || $("#twt_social_media_name_0").val() !=0)
        {
            $("#sb_btn").removeAttr("disabled");
        }
        else
        {
            $("#sb_btn").attr("disabled",'true');
            $("#"+crntParntID).find(".btnPlus_"+crntParntID.split('_')[0]).addClass("hide");
        }
    }
}

function toggleDataBrandCV(_id, callType, openType, calledFrom){
    //console.log(datasetsContentAggr1, " : ", datasetsContentYt1, " : ", datasetsContentIg1, " : ", datasetsContentTt1, " : ", datasetsContentTwt1);
    $("#radarChart2ButtonBox").find("input[type='checkbox']").each(function(index) {
        $(this).prop( "checked", true );
    });
    $(this).parent().find("input[type='checkbox']").prop( "checked", false );
    $("#genre_chart_active_toggel_btn").val(_id);
    //$("#radarChart2ButtonBox").find("input[type='checkbox']").not((this).parent().find("input[type='checkbox']").prop( "checked", false )).prop( "checked", true );
    if(callType == "withoutPopup") {
        if(_id=='Aggregate')
        {
            datasetsContent = datasetsContentAggr;
        }
        if(_id=='YouTube')
        {
            datasetsContent = datasetsContentYt;
        }
        if(_id=='Instagram')
        {
            datasetsContent = datasetsContentIg;
        }
        if(_id=='TikTok')
        {
            datasetsContent = datasetsContentTt;
        }
        if(_id=='Twitter')
        {
            datasetsContent = datasetsContentTwt;
        }
    }
    else {
        if(calledFrom == 'zoomGraph')
        {
            console.log("INSIDE zoomGraph");
            if(_id=='Aggregate')
            {
                datasetsContent = datasetsContentAggr;
            }
            if(_id=='YouTube')
            {
                datasetsContent = datasetsContentYt;
            }
            if(_id=='Instagram')
            {
                datasetsContent = datasetsContentIg;
            }
            if(_id=='TikTok')
            {
                datasetsContent = datasetsContentTt;
            }
            if(_id=='Twitter')
            {
                datasetsContent = datasetsContentTwt;
            }
        }
        else
        {
            console.log("INSIDE OTHERS");
            if(_id=='Aggregate')
            {
                datasetsContent = datasetsContentAggr1;
            }
            if(_id=='YouTube')
            {
                datasetsContent = datasetsContentYt1;
            }
            if(_id=='Instagram')
            {
                datasetsContent = datasetsContentIg1;
            }
            if(_id=='TikTok')
            {
                datasetsContent = datasetsContentTt1;
            }
            if(_id=='Twitter')
            {
                datasetsContent = datasetsContentTwt1;
            }
        }
    }

    if(openType != 'zoom-in')
    {
        //console.log(_id, ":" , datasetsContent, " Genre Data1111111111111");
        datasetsContent.sort(function(a, b){return b.value - a.value});
        //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");

        var finalDatasetsContent = [];
        var datasetsContentValSum = 0;
        for(var i=0; i<datasetsContent.length;i++)
        {
            if(i<10)
            {
                finalDatasetsContent.push(datasetsContent[i]);
            }
            else
            {
                datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
            }
        }
        finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
        var radarChart2Data = {
            //sortOrder: "value-desc",
            smallSegmentGrouping: {
                enabled: false
            },
            content: finalDatasetsContent,
        }
    }
    else
    {
        finalDatasetsContent = datasetsContent;
        var radarChart2Data = {
            sortOrder: "value-desc",
            smallSegmentGrouping: {
                enabled: false
            },
            content: finalDatasetsContent,
        }
    }
    //console.log(finalDatasetsContent, " finalDatasetsContent");

    var radarChart2PieUpdate = function () {
        if (radarChart2) radarChart2.destroy();
        var div3W = $(".radarChart2WH").width();
        var div3H = $(".radarChart2WH").height();
        //var size = Math.min(innerHeight, innerWidth) / 2;
        var size = Math.min(div3W, div3H);
        var opt =  {
            header:{
                titleSubtitlePadding:0
            },
            /* data: {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }, */
            data : radarChart2Data,
            size: {
                pieInnerRadius: "40%",
                pieOuterRadius: brandGenreCVPieOuterRadius,
                canvasHeight: div3H,
                canvasWidth: div3W,
            },
            labels: {
                outer: {
                    pieDistance: 15
                },
                mainLabel: {
                    font: "RobotoMonoMedium",
                    color: "#F1F1F1",
                    fontSize: 12
                },
                percentage: {
                    font: "RobotoMonoMedium",
                    color: "#070706",
                    decimalPlaces: 0,
                    fontSize: 12
                },
                value: {
                    font: "RobotoMonoMedium",
                    color: "#070706",
                    fontSize: 12
                },
                lines: {
                    enabled: true,
                    style: "straight",
                    color: "#A1A1A1"
                }
            },
            tooltips:{
                enabled:false,
                type:"placeholder",
                string:"{label}:{percentage}%",
                style:{padding:5}
            },
            misc: {
                gradient: {
                    enabled: false,
                    percentage: 100
                },
                pieCenterOffset: {
                    x: -8,
                    y: 0
                },
                colors: {
                    segments: genreBgColorData,
                    segmentStroke: "#f1f1f1"
                },
                canvaspadding:{
                    top:0,
                    right:0,
                    bottom:0,
                    left:0
                }
            }
        };
        radarChart2 = new d3pie("radarChart2", opt);
    };
    radarChart2PieUpdate();
    window.addEventListener('resize', radarChart2PieUpdate);
}

/* function toggleDataCompareCV(_id, callType, cvid)
{
    //console.log(datasetsContentAggr1, " : ", datasetsContentYt1, " : ", datasetsContentIg1, " : ", datasetsContentTt1, " : ", datasetsContentTwt1);

    $("#"+cvid+"ButtonBox").find("input[type='checkbox']").each(function(index) {
        $(this).prop( "checked", true );
    });
    $(this).parent().find("input[type='checkbox']").prop( "checked", false );

    if(cvid == 'cv1GenreRadarChart')
    {
        if(callType == "withoutPopup") {
            if(_id=='Aggregate')
            {
                datasetsContent = cv1DatasetsContentAggr;
            }
            if(_id=='YouTube')
            {
                datasetsContent = cv1DatasetsContentYt;
            }
            if(_id=='Instagram')
            {
                datasetsContent = cv1DatasetsContentIg;
            }
            if(_id=='TikTok')
            {
                datasetsContent = cv1DatasetsContentTt;
            }
            if(_id=='Twitter')
            {
                datasetsContent = cv1DatasetsContentTwt;
            }
        }
        else {
            if(_id=='Aggregate')
            {
                datasetsContent = cv1DatasetsContentAggr1;
            }
            if(_id=='YouTube')
            {
                datasetsContent = cv1DatasetsContentYt1;
            }
            if(_id=='Instagram')
            {
                datasetsContent = cv1DatasetsContentIg1;
            }
            if(_id=='TikTok')
            {
                datasetsContent = cv1DatasetsContentTt1;
            }
            if(_id=='Twitter')
            {
                datasetsContent = cv1DatasetsContentTwt1;
            }
        }
    }


    //console.log(_id, ":" , datasetsContent, " Genre Data1111111111111");
    datasetsContent.sort(function(a, b){return b.value - a.value});
    console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");

    var finalDatasetsContent = [];
    var datasetsContentValSum = 0;
    for(var i=0; i<datasetsContent.length;i++)
    {
        if(i<10)
        {
            finalDatasetsContent.push(datasetsContent[i]);
        }
        else
        {
            datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
        }
    }
    finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
    console.log(finalDatasetsContent, " finalDatasetsContent");
    var compareChartID = cvid;
    var radarChart2PieUpdate = function () {
        if(cvid == 'cv1GenreRadarChart')
        {
            if (cv1GenreRadarChart) cv1GenreRadarChart.destroy();
        }
        else
        {
            if (cv2GenreRadarChart) cv2GenreRadarChart.destroy();
        }
        var div3W = $("."+cvid+"WH").width();
        var div3H = $("."+cvid+"WH").height();
        //var size = Math.min(innerHeight, innerWidth) / 2;
        var size = Math.min(div3W, div3H);
        var opt =  {
            header:{
                titleSubtitlePadding:0
            },
            data: {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            },
            size: {
                pieInnerRadius: "40%",
                pieOuterRadius: brandGenreCVPieOuterRadius,
                canvasHeight: div3H,
                canvasWidth: div3W,
            },
            labels: {
                outer: {
                    pieDistance: 15
                },
                mainLabel: {
                    font: "RobotoMonoMedium",
                    color: "#555555",
                    fontSize: 12
                },
                percentage: {
                    font: "RobotoMonoMedium",
                    color: "#000000",
                    decimalPlaces: 0,
                    fontSize: 12
                },
                value: {
                    font: "RobotoMonoMedium",
                    color: "#000000",
                    fontSize: 12
                },
                lines: {
                    enabled: true,
                    style: "straight",
                    color: "#8f9092"
                }
            },
            tooltips:{
                enabled:false,
                type:"placeholder",
                string:"{label}:{percentage}%",
                style:{padding:5}
            },
            misc: {
                gradient: {
                    enabled: false,
                    percentage: 100
                },
                pieCenterOffset: {
                    x: -8,
                    y: 0
                },
                colors: {
                    segments: genreBgColorData,
                    segmentStroke: "#f1f1f1"
                },
                canvaspadding:{
                    top:0,
                    right:0,
                    bottom:0,
                    left:0
                }
            }
        };
        if(cvid == 'cv1GenreRadarChart')
        {
            cv1GenreRadarChart = new d3pie(cv1GenreRadarChart, opt);
        }
        else
        {
            cv2GenreRadarChart = new d3pie(cv2GenreRadarChart, opt);
        }

    };
    radarChart2PieUpdate();
    window.addEventListener('resize', radarChart2PieUpdate);

} */

function toggleDataCompareCV(_id, callType, cvid, openType, calledFrom){
    //console.log(datasetsContentAggr1, " : ", datasetsContentYt1, " : ", datasetsContentIg1, " : ", datasetsContentTt1, " : ", datasetsContentTwt1);
    if(cvid == 'cv1GenreRadarChart')
    {
        $("#"+cvid+"ButtonBox").find("input[type='checkbox']").each(function(index) {
            $(this).prop( "checked", true );
        });
        $(this).parent().find("input[type='checkbox']").prop( "checked", false );
        //$("#radarChart2ButtonBox").find("input[type='checkbox']").not((this).parent().find("input[type='checkbox']").prop( "checked", false )).prop( "checked", true );
        if(callType == "withoutPopup") {
            if(_id=='Aggregate')
            {
                datasetsContent = cv1DatasetsContentAggr;
            }
            if(_id=='YouTube')
            {
                datasetsContent = cv1DatasetsContentYt;
            }
            if(_id=='Instagram')
            {
                datasetsContent = cv1DatasetsContentIg;
            }
            if(_id=='TikTok')
            {
                datasetsContent = cv1DatasetsContentTt;
            }
            if(_id=='Twitter')
            {
                datasetsContent = cv1DatasetsContentTwt;
            }
        }
        else {
            if(calledFrom == 'zoomGraph')
            {
                if(_id=='Aggregate')
                {
                    datasetsContent = cv1DatasetsContentAggr;
                }
                if(_id=='YouTube')
                {
                    datasetsContent = cv1DatasetsContentYt;
                }
                if(_id=='Instagram')
                {
                    datasetsContent = cv1DatasetsContentIg;
                }
                if(_id=='TikTok')
                {
                    datasetsContent = cv1DatasetsContentTt;
                }
                if(_id=='Twitter')
                {
                    datasetsContent = cv1DatasetsContentTwt;
                }
            }
            else
            {
                if(_id=='Aggregate')
                {
                    datasetsContent = cv1DatasetsContentAggr1;
                }
                if(_id=='YouTube')
                {
                    datasetsContent = cv1DatasetsContentYt1;
                }
                if(_id=='Instagram')
                {
                    datasetsContent = cv1DatasetsContentIg1;
                }
                if(_id=='TikTok')
                {
                    datasetsContent = cv1DatasetsContentTt1;
                }
                if(_id=='Twitter')
                {
                    datasetsContent = cv1DatasetsContentTwt1;
                }
            }
        }

        if(openType != 'zoom-in')
        {
            //console.log(_id, ":" , datasetsContent, " Genre Data1111111111111");
            datasetsContent.sort(function(a, b){return b.value - a.value});
            //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");

            var finalDatasetsContent = [];
            var datasetsContentValSum = 0;
            for(var i=0; i<datasetsContent.length;i++)
            {
                if(i<10)
                {
                    finalDatasetsContent.push(datasetsContent[i]);
                }
                else
                {
                    datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
                }
            }
            finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
            var cv1GenreRadarChartData = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        else
        {
            finalDatasetsContent = datasetsContent;
            var cv1GenreRadarChartData = {
                sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        //console.log(finalDatasetsContent, " finalDatasetsContent");

        var cv1GenreRadarChartPieUpdate = function () {
            if (cv1GenreRadarChart) cv1GenreRadarChart.destroy();
            var div3W = $("."+cvid+"WH").width();
            var div3H = $("."+cvid+"WH").height();
            //var size = Math.min(innerHeight, innerWidth) / 2;
            var size = Math.min(div3W, div3H);
            var opt =  {
                header:{
                    titleSubtitlePadding:0
                },
                /* data: {
                    //sortOrder: "value-desc",
                    smallSegmentGrouping: {
                        enabled: false
                    },
                    content: finalDatasetsContent,
                }, */
                data:cv1GenreRadarChartData,
                size: {
                    pieInnerRadius: "40%",
                    pieOuterRadius: brandGenreCVPieOuterRadius,
                    canvasHeight: div3H,
                    canvasWidth: div3W,
                },
                labels: {
                    outer: {
                        pieDistance: 15
                    },
                    mainLabel: {
                        font: "RobotoMonoMedium",
                        color: "#F1F1F1",
                        fontSize: 12
                    },
                    percentage: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        decimalPlaces: 0,
                        fontSize: 12
                    },
                    value: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        fontSize: 12
                    },
                    lines: {
                        enabled: true,
                        style: "straight",
                        color: "#A1A1A1"
                    }
                },
                tooltips:{
                    enabled:false,
                    type:"placeholder",
                    string:"{label}:{percentage}%",
                    style:{padding:5}
                },
                misc: {
                    gradient: {
                        enabled: false,
                        percentage: 100
                    },
                    pieCenterOffset: {
                        x: -8,
                        y: 0
                    },
                    colors: {
                        segments: genreBgColorData,
                        segmentStroke: "#f1f1f1"
                    },
                    canvaspadding:{
                        top:0,
                        right:0,
                        bottom:0,
                        left:0
                    }
                }
            };
            cv1GenreRadarChart = new d3pie("cv1GenreRadarChart", opt);
        };
        cv1GenreRadarChartPieUpdate();
        window.addEventListener('resize', cv1GenreRadarChartPieUpdate);
    }
    else
    {
        $("#"+cvid+"ButtonBox").find("input[type='checkbox']").each(function(index) {
            $(this).prop( "checked", true );
        });
        $(this).parent().find("input[type='checkbox']").prop( "checked", false );
        //$("#radarChart2ButtonBox").find("input[type='checkbox']").not((this).parent().find("input[type='checkbox']").prop( "checked", false )).prop( "checked", true );
        if(callType == "withoutPopup") {
            if(_id=='Aggregate')
            {
                datasetsContent = cv2DatasetsContentAggr;
            }
            if(_id=='YouTube')
            {
                datasetsContent = cv2DatasetsContentYt;
            }
            if(_id=='Instagram')
            {
                datasetsContent = cv2DatasetsContentIg;
            }
            if(_id=='TikTok')
            {
                datasetsContent = cv2DatasetsContentTt;
            }
            if(_id=='Twitter')
            {
                datasetsContent = cv2DatasetsContentTwt;
            }
        }
        else {
            if(calledFrom == 'zoomGraph')
            {
                if(_id=='Aggregate')
                {
                    datasetsContent = cv2DatasetsContentAggr;
                }
                if(_id=='YouTube')
                {
                    datasetsContent = cv2DatasetsContentYt;
                }
                if(_id=='Instagram')
                {
                    datasetsContent = cv2DatasetsContentIg;
                }
                if(_id=='TikTok')
                {
                    datasetsContent = cv2DatasetsContentTt;
                }
                if(_id=='Twitter')
                {
                    datasetsContent = cv2DatasetsContentTwt;
                }
            }
            else if(calledFrom == 'getCompareMoodGenreGraphData')
            {
                if(_id=='Aggregate')
                {
                    datasetsContent = cv1DatasetsContentAggr1;
                }
                if(_id=='YouTube')
                {
                    datasetsContent = cv1DatasetsContentYt1;
                }
                if(_id=='Instagram')
                {
                    datasetsContent = cv1DatasetsContentIg1;
                }
                if(_id=='TikTok')
                {
                    datasetsContent = cv1DatasetsContentTt1;
                }
                if(_id=='Twitter')
                {
                    datasetsContent = cv1DatasetsContentTwt1;
                }
            }
            else
            {
                if(_id=='Aggregate')
                {
                    datasetsContent = cv2DatasetsContentAggr1;
                }
                if(_id=='YouTube')
                {
                    datasetsContent = cv2DatasetsContentYt1;
                }
                if(_id=='Instagram')
                {
                    datasetsContent = cv2DatasetsContentIg1;
                }
                if(_id=='TikTok')
                {
                    datasetsContent = cv2DatasetsContentTt1;
                }
                if(_id=='Twitter')
                {
                    datasetsContent = cv2DatasetsContentTwt1;
                }
            }
        }

        if(openType != 'zoom-in')
        {
            //console.log(_id, ":" , datasetsContent, " Genre Data1111111111111");
            datasetsContent.sort(function(a, b){return b.value - a.value});
            //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");

            var finalDatasetsContent = [];
            var datasetsContentValSum = 0;
            for(var i=0; i<datasetsContent.length;i++)
            {
                if(i<10)
                {
                    finalDatasetsContent.push(datasetsContent[i]);
                }
                else
                {
                    datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
                }
            }
            finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
            var cv2GenreRadarChartData = {
                //sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        else
        {
            finalDatasetsContent = datasetsContent;
            var cv2GenreRadarChartData = {
                sortOrder: "value-desc",
                smallSegmentGrouping: {
                    enabled: false
                },
                content: finalDatasetsContent,
            }
        }
        //console.log(finalDatasetsContent, " finalDatasetsContent");

        var cv2GenreRadarChartPieUpdate = function () {
            if (cv2GenreRadarChart) cv2GenreRadarChart.destroy();
            var div3W = $("."+cvid+"WH").width();
            var div3H = $("."+cvid+"WH").height();
            //var size = Math.min(innerHeight, innerWidth) / 2;
            var size = Math.min(div3W, div3H);
            var opt =  {
                header:{
                    titleSubtitlePadding:0
                },
                /* data: {
                    //sortOrder: "value-desc",
                    smallSegmentGrouping: {
                        enabled: false
                    },
                    content: finalDatasetsContent,
                }, */
                data:cv2GenreRadarChartData,
                size: {
                    pieInnerRadius: "40%",
                    pieOuterRadius: brandGenreCVPieOuterRadius,
                    canvasHeight: div3H,
                    canvasWidth: div3W,
                },
                labels: {
                    outer: {
                        pieDistance: 15
                    },
                    mainLabel: {
                        font: "RobotoMonoMedium",
                        color: "#F1F1F1",
                        fontSize: 12
                    },
                    percentage: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        decimalPlaces: 0,
                        fontSize: 12
                    },
                    value: {
                        font: "RobotoMonoMedium",
                        color: "#070706",
                        fontSize: 12
                    },
                    lines: {
                        enabled: true,
                        style: "straight",
                        color: "#A1A1A1"
                    }
                },
                tooltips:{
                    enabled:false,
                    type:"placeholder",
                    string:"{label}:{percentage}%",
                    style:{padding:5}
                },
                misc: {
                    gradient: {
                        enabled: false,
                        percentage: 100
                    },
                    pieCenterOffset: {
                        x: -8,
                        y: 0
                    },
                    colors: {
                        segments: genreBgColorData,
                        segmentStroke: "#f1f1f1"
                    },
                    canvaspadding:{
                        top:0,
                        right:0,
                        bottom:0,
                        left:0
                    }
                }
            };
            cv2GenreRadarChart = new d3pie("cv2GenreRadarChart", opt);
        };
        cv2GenreRadarChartPieUpdate();
        window.addEventListener('resize', cv2GenreRadarChartPieUpdate);
    }
}

/* function getYears(type, idname)
{
    console.log(atob(type), atob(idname));
    $('#searchInput').val(atob(idname));
    $('#cvNameList').fadeOut();
    $('#cvNameList').addClass("hide");
    var yrsUrl = $("#yrsUrl").val()+'/'+type+"$|$"+idname;
    $.ajax({
        url:yrsUrl,
        method:"GET",
        data: "",
        success:function(data){
            $("#cvIndYearHolder").removeClass("hide");
        },
        complete: function(){
        }
    });
} */

/* function getGraphData()
{
    var selVal = $("#cv_ind_sind_name_val").val();
    var type = '';
    //console.log("cv_ind_sind_name_val", selVal);
    if(selVal.split('_')[0] == 'ind')
    {
        type='ind';
    }
    else if(selVal.split('_')[0] == 'sind')
    {
        type='sind';
    }
    else
    {
        type='cv';
    }
    $('#cvNameList').fadeOut();
    $('#cvNameList').addClass("hide");
    var yrsUrl = $("#yrsUrl").val()+'/'+type+"$|$"+selVal.split('_')[1];
    //console.log("yrsUrl", yrsUrl);
    //console.log("yrsUrl0", selVal.split('_')[0]);
    //console.log("yrsUrl0", selVal.split('_')[1]);
    addLoader();
    $.ajax({
        url:yrsUrl,
        method:"GET",
        data: "",
        success:function(data){
            $("#cvIndYearHolder").removeClass("hide");
            //console.log(data);
            if(data != 'No Data')
            {
                //Mood Graph start
                var datasetDataStringLength = 0;
                var datalablesData = '';
                var colorval1 = "#999999";
                var colorvalData1 = [];
                var datasetsContent = '';

                datasetDataStringLength = data.mood_aggr_graph_dataset_data.length;
                //console.log("datasetDataStringLength",datasetDataStringLength);
                datalablesData = data.mood_aggr_graph_datalables_data.split(",");
                //console.log("datalablesData",datalablesData);
                datasetsContent = [{ label: 'Aggregate', data: data.mood_aggr_graph_dataset_data, borderColor: 'rgba(118, 119, 122, 1)', backgroundColor: 'rgba(118, 119, 122, 1)', pointBackgroundColor: '#76777a', pointBorderColor: '#232323', pointBorderWidth: 5, pointRadius: 50}];
                //console.log("datasetsContent",datasetsContent);
                for (var i = 0; i <= datasetDataStringLength; i++) {
                    colorvalData1.push(colorval1);
                };
                //console.log("colorvalData1",colorvalData1);
                $("#radarChart1_holderDiv").append('<div class="radarChart1WH" id="radarChart1_holder" style="max-width: 5000px; width:5000px; height:5000px;"><canvas id="radarChart1" style="max-width: 5000px; width:5000px; height:5000px;"></canvas></div>');
                const ctx = document.getElementById('radarChart1').getContext('2d');
                const radarChart1 = new Chart(ctx, {
                    type: 'radar',
                    plugins: [ChartDataLabels],
                    data: {
                        labels: datalablesData,
                        datasets: datasetsContent
                    },
                    options: {
                        layout: {
                            padding: 250
                        },
                        borderWidth: 0,
                        responsive: true,
                        maintainAspectRatio: true,
                        scales: {
                            x: {
                                //beginAtZero: true,
                                display: false,
                                fill: false,
                                backgroundColor: 'rgba(0, 0, 0, 1)',
                                gridLines: {
                                    circular: true,
                                    //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                    color: colorval1
                                },
                                angleLines: {
                                    color: '#333333',
                                    lineWidth: 2
                                },
                                ticks: {
                                    display: false,
                                    beginAtZero: true
                                },
                                pointLabels: {
                                    fontSize: 10,
                                    fontStyle: 'RobotoMonoLight',
                                    fontColor: 'black'
                                }
                            },
                            y: {
                                //beginAtZero: true,
                                display: false,
                                fill: false,
                                backgroundColor: 'rgba(0, 0, 0, 1)',
                                gridLines: {
                                    circular: true,
                                    //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                    color: colorval1
                                },
                                angleLines: {
                                    color: '#333333',
                                    lineWidth: 2
                                },
                                ticks: {
                                    display: false,
                                    beginAtZero: true
                                },
                                pointLabels: {
                                    fontSize: 11,
                                    fontStyle: 'RobotoMonoLight',
                                    fontColor: 'black'
                                }
                            },
                            r: {
                                grid: {
                                    color: "#999999",
                                    circular: true,
                                    lineWidth: 5
                                },
                                angleLines: {
                                    color: '#999999',
                                    lineWidth: 5
                                },
                                ticks: {
                                    display: false,
                                    beginAtZero: true
                                },
                                pointLabels: {
                                    color: '#555555',
                                    font: {
                                        family: 'RobotoMonoMedium',
                                        size: 12
                                    }
                                },
                                suggestedMin: 0,
                                suggestedMax: 0.6
                            }
                        },
                        elements: {
                            line: {
                                borderWidth: 0,
                                backgroundColor : '#999999'
                            }
                        },
                        plugins: {
                            datalabels: {
                                display: false,
                            },
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = radarChart1.data.datasets.labels;
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
                radarChart1.update();
                $("#radarChart1_holderDiv").addClass("hide");
                // Mood graph end

                // Genre Graph Start
                var datasetDataStringLength = 0;
                var datalablesData = [];
                var datasetsContent = [];
                var genreBgColorData = data.genre_bg_color_array;
                var brandGenreCVPieOuterRadius = "75%";
                var genreAggrGraphDatasetData = data.genre_aggr_graph_dataset_data;
                var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                {
                    datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                }
                datasetsContent.sort(function(a, b){return b.value - a.value});
                //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");
                var finalDatasetsContent = [];
                var datasetsContentValSum = 0;
                for(var i=0; i<datasetsContent.length;i++)
                {
                    if(i<10)
                    {
                        finalDatasetsContent.push(datasetsContent[i]);
                    }
                    else
                    {
                        datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
                    }
                }
                finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
                //console.log(finalDatasetsContent, " finalDatasetsContent");
                $("#radarChart2_holderDiv").append('<div class="radarChart2WH" id="radarChart2_holder" style="width: 5000px; height:5000px; max-width:5000px;"><div id="radarChart2" style="position:relative;"></div></div>');
                var radarChart2PieUpdate = function () {
                    var div3W = $(".radarChart2WH").width();
                    var div3H = $(".radarChart2WH").height();
                    var size = Math.min(div3W, div3H);
                    var opt =  {
                        header:{
                            titleSubtitlePadding:0
                        },
                        data: {
                            //sortOrder: "label-asc",
                            smallSegmentGrouping: {
                                enabled: false
                            },
                            content: finalDatasetsContent,
                        },
                        size: {
                            pieInnerRadius: "40%",
                            pieOuterRadius: brandGenreCVPieOuterRadius,
                            canvasHeight: div3H,
                            canvasWidth: div3W,
                        },
                        labels: {
                            outer: {
                                pieDistance: 200
                            },
                            mainLabel: {
                                font: "RobotoMonoMedium",
                                color: "#000000",
                                fontSize: 100
                            },
                            percentage: {
                                font: "RobotoMonoMedium",
                                color: "#000000",
                                decimalPlaces: 0,
                                fontSize: 100
                            },
                            value: {
                                font: "RobotoMonoMedium",
                                color: "#000000",
                                fontSize: 100
                            },
                            lines: {
                                enabled: true,
                                style: "straight",
                                color: "#000000"
                                //width: "20"
                                //size: "20"
                            }
                        },
                        tooltips:{
                            enabled:false,
                            type:"placeholder",
                            string:"{label}:{percentage}%",
                            style:{padding:5}
                        },
                        misc: {
                            gradient: {
                                enabled: false,
                                percentage: 100
                            },
                            pieCenterOffset: {
                                x: -8,
                                y: 0
                            },
                            colors: {
                                segments: genreBgColorData,
                                segmentStroke: "#f1f1f1"
                            },
                            canvaspadding:{
                                top:0,
                                right:0,
                                bottom:0,
                                left:0
                            }
                        }
                    };
                    radarChart2 = new d3pie("radarChart2", opt);
                };
                radarChart2PieUpdate();
                window.addEventListener('resize', radarChart2PieUpdate);
                $("#radarChart2_holderDiv").css({"visibility":"hidden","overflow":"hidden"});
                $(".loading-img").css({"background-position":"50% 10%"});

                // Genre Graph end

                setTimeout(function(){
                    var svg = document.querySelectorAll( "svg" );

                    if($('#radarChart1').length > 0)
                    {
                        var radarChart1Canvas = document.getElementById('radarChart1');
                        var radarChart1DataURL = radarChart1Canvas.toDataURL('image/svg+xml');
                        $("#radarChartImg1").val(radarChart1DataURL);
                        //$("#radarChartImg_1").attr("src",radarChart1DataURL);
                        $("#radarChartImg_1a").attr("href",radarChart1DataURL);
                        $("#radarChart1_holderDiv").empty();
                        $("#radarChart1_holderDiv").removeClass("hide");
                    }

                    if(svg.length > 0)
                    {
                        var element = svg[0]; // Get SVG element.
                        //console.log(element);
                        SVG2PNG(element, function(canvas) { // Arguments: SVG element, callback function.
                            var base64 = canvas.toDataURL("image/png"); // toDataURL return DataURI as Base64 format.
                            generateLink('SVG2PNG-01.png', base64); // Trigger the Link is made by Link Generator and download.
                        });

                        // var radarChartImg2SvgData = new XMLSerializer().serializeToString( svg[0] );
                        // $("#radarChartImg2").val("data:image/svg+xml;base64," + btoa( radarChartImg2SvgData ));
                        // $("#radarChartImg_2a").attr("href","data:image/svg+xml;base64," + btoa( radarChartImg2SvgData ));
                        // $("#radarChart2_holderDiv").empty();
                        // $("#radarChart2_holderDiv").removeClass("hide");
                    }
                    console.log("ended");
                    $("#radarChartImg_1a").attr("download",data.name_data+"_mood.png");
                    $("#radarChartImg_2a").attr("download",data.name_data+"_genre.png");
                    $("#radarChartImg_1a").removeClass("hide");
                    $("#radarChartImg_2a").removeClass("hide");
                    removeLoader("#custLoader");
                },5000);
            }
            else
            {

            }

        },
        complete: function(){

        }
    });

    function SVG2PNG(svg, callback) {
        var canvas = document.getElementById('svgToCanvas');
        var ctx = canvas.getContext('2d'); // For Canvas returns 2D graphic.
        var data = svg.outerHTML; // Get SVG element as HTML code.
        //console.log(data);
        canvg(canvas, data); // Render SVG on Canvas.
        $("#svgToCanvasHolder").addClass("hide");
        callback(canvas); // Execute callback function.
      }

      function generateLink(fileName, data) {
        // var link = document.createElement('a');
        // link.download = fileName;
        // link.href = data;
        $("#radarChartImg_2a").attr("href",data);
        $("#svgToCanvasHolder").empty();
        $("#svgToCanvasHolder").removeClass("hide");
        $("#svgToCanvasHolder").append('<canvas id="svgToCanvas"></canvas>');
        $("#radarChart2_holderDiv").empty();
        $("#radarChart2_holderDiv").removeAttr("style");
        $("body").removeAttr("style");
        //return link;
      }
} */

function getGraphData(callType, graphType)
{
    //alert(callType);
    var selVal = $("#cv_ind_sind_name_val").val();
    var type = '';
    console.log("cv_ind_sind_name_val", selVal);
    if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
    {

        var moodChartInactiveToggelBtnsStr = $("#mood_chart_inactive_toggel_btns").val();
        if(moodChartInactiveToggelBtnsStr != '' && moodChartInactiveToggelBtnsStr != undefined)
            var moodChartInactiveToggelBtns = moodChartInactiveToggelBtnsStr.split(",");
        var genreChartActiveToggelBtn = $("#genre_chart_active_toggel_btn").val();
    }
    else
    {
        var moodChartInactiveToggelBtns = [];
        var genreChartActiveToggelBtn = '';
    }
    if(selVal.split('_')[0] == 'ind' || selVal.split('_')[0] == 'find')
    {
        if(selVal.split('_')[0] == 'ind')
        {
            type='ind';
        }
        else
        {
            type='find';
        }
    }
    else if(selVal.split('_')[0] == 'sind' || selVal.split('_')[0] == 'fsind')
    {
        if(selVal.split('_')[0] == 'sind')
        {
            type='sind';
        }
        else
        {
            type='fsind';
        }
    }
    else
    {
        if(selVal.split('_')[0] == 'cv')
        {
            type='cv';
        }
        else
        {
            type='fcv';
        }
    }
    console.log("type", type, atob(selVal.split('_')[1]));
    $('#cvNameList').fadeOut();
    $('#cvNameList').addClass("hide");
    var yrsUrl = $("#yrsUrl").val()+'/'+type+"$|$"+selVal.split('_')[1];
    // console.log("yrsUrl", yrsUrl);
    //console.log("yrsUrl0", selVal.split('_')[0]);
    //console.log("yrsUrl0", selVal.split('_')[1]);
    /* if(window.location.href.indexOf("get-high-res-image")>-1)
    {
        addLoader();
    } */
    addLoader("#custLoader");

    $.ajax({
        url:yrsUrl,
        method:"GET",
        data: "",
        success:function(data){
            $("#cvIndYearHolder").removeClass("hide");
            console.log("response==",data);
            // if(data != 'No Data')
            if(data.msg != 'No Data')
            {
                //Mood Graph start
                var datasetDataStringLength = 0;
                var datalablesData = '';
                var colorval1 = "#999999";
                var colorvalData1 = [];
                var rawDatasetsContent = '';
                var datasetsContent = '';
                console.log(callType, "|", moodChartInactiveToggelBtns);
                if(callType == 'frontend')
                {
                    var datasetsContent = [];
                    // var toggleBtnNamesArr = ['Aggregate', 'YouTube', 'Instagram', 'TikTok', 'Twitter']
                    var toggleBtnNamesArr = moodChartInactiveToggelBtns;
                    for(var i = 0; i<5; i++)
                    {
                        // console.log(i.toString(),"|",moodChartInactiveToggelBtns.includes(i.toString()));
                        if(moodChartInactiveToggelBtns.includes(toggleBtnNamesArr[i]))
                        {
                            if(toggleBtnNamesArr[i] == 'Aggregate')
                            {
                                rawDatasetsContent = { label:'Aggregate', data: data.mood_aggr_graph_dataset_data, borderColor: mgAggrBColorVal, backgroundColor: mgAggrBgColorVal, pointBackgroundColor: mgAggrPbgColorVal, pointBorderColor: mgAggrPbColorVal, pointBorderWidth: 0, pointRadius: 0 };
                                datasetsContent.push(rawDatasetsContent);
                                // datalablesData = data.mood_aggr_graph_datalables_data.split(",");
                                datalablesData = data.mood_aggr_graph_datalables_data;
                                datasetDataStringLength = data.mood_aggr_graph_dataset_data.length;
                                for (var k = 0; k <= datasetDataStringLength; k++) {
                                    colorvalData1.push(colorval1);
                                }
                                //console.log(i,":", rawDatasetsContent);
                            }
                            if(toggleBtnNamesArr[i] == 'YouTube')
                            {
                                rawDatasetsContent = { label: 'YouTube', data:data.mood_yt_graph_dataset_data, borderColor: mgYtBColorVal, backgroundColor: mgYtBgColorVal, pointBackgroundColor: mgYtPbgColorVal, pointBorderColor: mgYtPbColorVal, pointBorderWidth: 0, pointRadius: 0 };
                                datasetsContent.push(rawDatasetsContent);
                                if(!moodChartInactiveToggelBtns.includes('0'))
                                {
                                    // datalablesData = data.mood_yt_graph_datalables_data.split(",");
                                    datalablesData = data.mood_yt_graph_datalables_data;
                                    datasetDataStringLength = data.mood_yt_graph_dataset_data.length;
                                    for (var k = 0; k <= datasetDataStringLength; k++) {
                                        colorvalData1.push(colorval1);
                                    }
                                }
                                //console.log(i,":", rawDatasetsContent);
                            }
                            if(toggleBtnNamesArr[i] == 'Instagram')
                            {
                                rawDatasetsContent = { label: 'Instagram', data:data.mood_ig_graph_dataset_data, borderColor: mgIgBColorVal, backgroundColor: mgIgBgColorVal, pointBackgroundColor: mgIgPbgColorVal, pointBorderColor: mgIgPbColorVal, pointBorderWidth: 0, pointRadius: 0 };
                                datasetsContent.push(rawDatasetsContent);
                                if(!moodChartInactiveToggelBtns.includes('0') && !moodChartInactiveToggelBtns.includes('1'))
                                {
                                    // datalablesData = data.mood_ig_graph_datalables_data.split(",");
                                    datalablesData = data.mood_ig_graph_datalables_data;
                                    datasetDataStringLength = data.mood_ig_graph_dataset_data.length;
                                    for (var k = 0; k <= datasetDataStringLength; k++) {
                                        colorvalData1.push(colorval1);
                                    }
                                }
                                //console.log(i,":", rawDatasetsContent);
                            }
                            if(toggleBtnNamesArr[i] == 'TikTok')
                            {
                                rawDatasetsContent = { label: 'TikTok', data:data.mood_tt_graph_dataset_data, borderColor: mgTtBColorVal, backgroundColor: mgTtBgColorVal, pointBackgroundColor: mgTtPbgColorVal, pointBorderColor: mgTtPbColorVal, pointBorderWidth: 0, pointRadius: 0 };
                                datasetsContent.push(rawDatasetsContent);
                                if(!moodChartInactiveToggelBtns.includes('0') && !moodChartInactiveToggelBtns.includes('1') && !moodChartInactiveToggelBtns.includes('2'))
                                {
                                    // datalablesData = data.mood_tt_graph_datalables_data.split(",");
                                    datalablesData = data.mood_tt_graph_datalables_data;
                                    datasetDataStringLength = data.mood_tt_graph_dataset_data.length;
                                    for (var k = 0; k <= datasetDataStringLength; k++) {
                                        colorvalData1.push(colorval1);
                                    }
                                }
                                //console.log(i,":", rawDatasetsContent);
                            }
                            if(toggleBtnNamesArr[i] == 'Twitter')
                            {
                                rawDatasetsContent = { label: 'Twitter', data:data.mood_twt_graph_dataset_data, borderColor: mgTwtBColorVal, backgroundColor: mgTwtBgColorVal, pointBackgroundColor: mgTwtPbgColorVal, pointBorderColor: mgTwtPbColorVal, pointBorderWidth: 0, pointRadius: 0 };
                                datasetsContent.push(rawDatasetsContent);
                                if(!moodChartInactiveToggelBtns.includes('0') && !moodChartInactiveToggelBtns.includes('1') && !moodChartInactiveToggelBtns.includes('2') && !moodChartInactiveToggelBtns.includes('3'))
                                {
                                    // datalablesData = data.mood_twt_graph_datalables_data.split(",");
                                    datalablesData = data.mood_twt_graph_datalables_data;
                                    datasetDataStringLength = data.mood_twt_graph_dataset_data.length;
                                    for (var k = 0; k <= datasetDataStringLength; k++) {
                                        colorvalData1.push(colorval1);
                                    }
                                }
                                //console.log(i,":", rawDatasetsContent);
                            }
                        }

                    }
                }
                else
                {
                    datasetDataStringLength = data.mood_aggr_graph_dataset_data.length;
                    //console.log("datasetDataStringLength",datasetDataStringLength);
                    // datalablesData = data.mood_aggr_graph_datalables_data.split(",");
                    datalablesData = data.mood_aggr_graph_datalables_data;
                    //console.log("datalablesData",datalablesData);
                    datasetsContent = [{ label: 'Aggregate', data: data.mood_aggr_graph_dataset_data, borderColor: 'rgba(118, 119, 122, 1)', backgroundColor: 'rgba(118, 119, 122, 1)', pointBackgroundColor: '#76777a', pointBorderColor: '#232323', pointBorderWidth: 0, pointRadius: 0}];
                    //console.log("datasetsContent",datasetsContent);
                    for (var i = 0; i <= datasetDataStringLength; i++) {
                        colorvalData1.push(colorval1);
                    }
                }

                if(graphType == 'mood' || graphType == 'both')
                {
                    // console.log("datasetDataStringLength",datasetDataStringLength);
                    // console.log("datalablesData",datalablesData);
                    // console.log("datasetsContent",datasetsContent);
                    // console.log("colorvalData1",colorvalData1);

                    $("#radarChart1_holderDiv").append('<div class="radarChart1WHHR" id="radarChart1_holder_hr" style="max-width: 5000px; width:5000px; height:5000px;"><canvas id="radarChart1HR" style="max-width: 5000px; width:5000px; height:5000px;"></canvas></div>');
                    const ctx = document.getElementById('radarChart1HR').getContext('2d');
                    const radarChart1HR = new Chart(ctx, {
                        type: 'radar',
                        plugins: [ChartDataLabels],
                        data: {
                            labels: datalablesData,
                            datasets: datasetsContent
                        },
                        options: {
                            layout: {
                                padding: 250
                            },
                            borderWidth: 0,
                            responsive: true,
                            maintainAspectRatio: true,
                            scales: {
                                x: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 10,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                y: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 11,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                r: {
                                    grid: {
                                        color: "#A1A1A1",
                                        circular: true,
                                        lineWidth: 5
                                    },
                                    angleLines: {
                                        color: '#A1A1A1',
                                        lineWidth: 5
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        color: '#000000',
                                        font: {
                                            family: 'RobotoMonoMedium',
                                            size: 100
                                        }
                                    },
                                    suggestedMin: 0,
                                    suggestedMax: 0.6
                                }
                            },
                            elements: {
                                line: {
                                    borderWidth: 0,
                                    backgroundColor : '#999999'
                                }
                            },
                            plugins: {
                                datalabels: {
                                    display: false,
                                },
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = radarChart1HR.data.datasets.labels;
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                    radarChart1HR.update();
                    $("#radarChart1_holderDiv").addClass("hide");
                    if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                    {
                        $(".loading-img").css({"background-position":"50% 1200px"});
                        $("html, body").animate({ scrollTop: "1000px" });
                    }

                    // Mood graph end

                    setTimeout(function(){
                        var svg = document.querySelectorAll( "svg" );

                        if($('#radarChart1HR').length > 0)
                        {
                            var radarChart1Canvas = document.getElementById('radarChart1HR');
                            var radarChart1DataURL = radarChart1Canvas.toDataURL('image/svg+xml');
                            $("#radarChartImg1HR").val(radarChart1DataURL);
                            //$("#radarChartImg_1").attr("src",radarChart1DataURL);
                            $("#radarChartImg_1a").attr("href",radarChart1DataURL);
                            $("#radarChart1_holderDiv").empty();
                            $("#radarChart1_holderDiv").removeClass("hide");
                        }

                        console.log("ended");
                        $("#radarChartImg_1a").attr("download",data.name_data+"_mood.png");
                        $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                        if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                        {
                            setTimeout(function(){
                                $('#radarChartImg_1a span').trigger('click');
                                removeLoader("#custLoader");
                            },500);
                        }
                    },5000);
                }


                // Genre Graph Start
                var datasetDataStringLength = 0;
                var datalablesData = [];
                var datasetsContent = [];
                var genreBgColorData = data.genre_bg_color_array;
                var brandGenreCVPieOuterRadius = "75%";
                if(callType == 'frontend')
                {
                    if(genreChartActiveToggelBtn == 'Aggregate')
                    {
                        var genreAggrGraphDatasetData = data.genre_aggr_graph_dataset_data;
                        // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                        // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                        //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                        var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data;
                        for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                        {
                            datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                        }
                    }
                    if(genreChartActiveToggelBtn == 'YouTube')
                    {
                        var genreAggrGraphDatasetData = data.genre_yt_graph_dataset_data;
                        // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                        // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                        //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                        var genreAggrGraphDatalablesData = data.genre_yt_graph_datalables_data;
                        for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                        {
                            datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                        }
                    }
                    if(genreChartActiveToggelBtn == 'Instagram')
                    {
                        var genreAggrGraphDatasetData = data.genre_ig_graph_dataset_data;
                        // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                        // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                        //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                        var genreAggrGraphDatalablesData = data.genre_ig_graph_datalables_data;
                        for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                        {
                            datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                        }
                    }
                    if(genreChartActiveToggelBtn == 'TikTok')
                    {
                        var genreAggrGraphDatasetData = data.genre_tt_graph_dataset_data;
                        // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                        // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                        //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                        var genreAggrGraphDatalablesData = data.genre_tt_graph_datalables_data;
                        for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                        {
                            datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                        }
                    }
                    if(genreChartActiveToggelBtn == 'Twitter')
                    {
                        var genreAggrGraphDatasetData = data.genre_twt_graph_dataset_data;
                        // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                        // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                        //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                        var genreAggrGraphDatalablesData = data.genre_twt_graph_datalables_data;
                        for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                        {
                            datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                        }
                    }
                }
                else
                {
                    var genreAggrGraphDatasetData = data.genre_aggr_graph_dataset_data;
                    // var genre_aggr_graph_datalables_dataString = 'ambient,blues,classical,country,edm,folk,indie,jazz,latin,metal,pop,punk,hiphop,reggae,rnb,rock,songwriter';
                    // var genreAggrGraphDatalablesData = genre_aggr_graph_datalables_dataString.split(',');
                    //var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data.split(',');
                    var genreAggrGraphDatalablesData = data.genre_aggr_graph_datalables_data;
                    for(var i=0; i<genreAggrGraphDatasetData.length; i++)
                    {
                        datasetsContent.push({"label": genreAggrGraphDatalablesData[i], "value": parseFloat(genreAggrGraphDatasetData[i])});
                    }

                }

                if(graphType == 'genre' || graphType == 'both')
                {
                    datasetsContent.sort(function(a, b){return b.value - a.value});
                    //console.log(datasetsContent, " Genre Data ", genreBgColorData, " Color");
                    var finalDatasetsContent = [];
                    var datasetsContentValSum = 0;
                    for(var i=0; i<datasetsContent.length;i++)
                    {
                        if(i<10)
                        {
                            finalDatasetsContent.push(datasetsContent[i]);
                        }
                        else
                        {
                            datasetsContentValSum = datasetsContentValSum+datasetsContent[i].value;
                        }
                    }
                    finalDatasetsContent.push({"label": "others", "value": parseFloat(datasetsContentValSum.toFixed(2))});
                    console.log(finalDatasetsContent, " finalDatasetsContent");
                    $("#radarChart2_holderDiv").append('<div class="radarChart2WHHR" id="radarChart2_holder_hr" style="width: 5000px; height:5000px; max-width:5000px;"><div id="radarChart2HR" style="position:relative;"></div></div>');
                    var radarChart2HRPieUpdate = function () {
                        var div3W = $(".radarChart2WHHR").width();
                        var div3H = $(".radarChart2WHHR").height();
                        var size = Math.min(div3W, div3H);
                        var opt =  {
                            header:{
                                titleSubtitlePadding:0
                            },
                            data: {
                                //sortOrder: "label-asc",
                                smallSegmentGrouping: {
                                    enabled: false
                                },
                                content: finalDatasetsContent,
                            },
                            size: {
                                pieInnerRadius: "40%",
                                pieOuterRadius: brandGenreCVPieOuterRadius,
                                canvasHeight: div3H,
                                canvasWidth: div3W,
                            },
                            labels: {
                                outer: {
                                    pieDistance: 200
                                },
                                mainLabel: {
                                    font: "RobotoMonoMedium",
                                    color: "#000000",
                                    fontSize: 100
                                },
                                percentage: {
                                    font: "RobotoMonoMedium",
                                    color: "#070706",
                                    decimalPlaces: 0,
                                    fontSize: 100
                                },
                                value: {
                                    font: "RobotoMonoMedium",
                                    color: "#070706",
                                    fontSize: 100
                                },
                                lines: {
                                    enabled: true,
                                    style: "straight",
                                    color: "#A1A1A1"
                                    //width: "20"
                                    //size: "20"
                                }
                            },
                            tooltips:{
                                enabled:false,
                                type:"placeholder",
                                string:"{label}:{percentage}%",
                                style:{padding:5}
                            },
                            misc: {
                                gradient: {
                                    enabled: false,
                                    percentage: 100
                                },
                                pieCenterOffset: {
                                    x: -8,
                                    y: 0
                                },
                                colors: {
                                    segments: genreBgColorData,
                                    segmentStroke: "#f1f1f1"
                                },
                                canvaspadding:{
                                    top:0,
                                    right:0,
                                    bottom:0,
                                    left:0
                                }
                            }
                        };
                        radarChart2HR = new d3pie("radarChart2HR", opt);
                    };
                    radarChart2HRPieUpdate();
                    window.addEventListener('resize', radarChart2HRPieUpdate);
                    $("#radarChart2_holderDiv").css({"visibility":"hidden","overflow":"hidden"});
                    if(window.location.href.indexOf("get-high-res-image")>-1)
                    {
                        $(".loading-img").css({"background-position":"50% 10%"});
                    }
                    else
                    {
                        $(".loading-img").css({"background-position":"50% 1200px"});
                        $("html, body").animate({ scrollTop: "1000px" });
                    }

                    // Genre Graph end

                    setTimeout(function(){
                        var svg = document.querySelectorAll( "svg" );

                        if(svg.length > 0)
                        {
                            if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1)
                            {
                                var element = svg[svg.length-1]; // Get SVG element.

                            }
                            else if(window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                            {
                                var element = svg[svg.length-1]; // Get SVG element.
                            }
                            else
                            {
                                var element = svg[svg.length-1]; // Get SVG element.
                            }
                            //var element = svg[0]; // Get SVG element.
                            //console.log(element);
                            SVG2PNG(element, function(canvas) { // Arguments: SVG element, callback function.
                                var base64 = canvas.toDataURL("image/png"); // toDataURL return DataURI as Base64 format.
                                generateLink('SVG2PNG-01.png', base64, 'genre'); // Trigger the Link is made by Link Generator and download.
                            });
                        }
                        console.log("ended");
                        $("#radarChartImg_2a").attr("download",data.name_data+"_genre.png");
                        $("#svgToCanvas").css("height", "0px");
                        $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                        if(window.location.href.indexOf("get-high-res-image")>-1)
                        {
                            $("#radarChartImg_1a").removeClass("hide");
                            $("#radarChartImg_2a").removeClass("hide");
                            removeLoader("#custLoader");
                        }
                        else
                        {
                            setTimeout(function(){
                                $('#radarChartImg_2a span').trigger('click');
                                removeLoader("#custLoader");
                            },500);
                        }
                    },5000);
                }
            }

            if(graphType == 'mtu')
            {
                var downMusicTypeUsageCVPieOuterRadius = "75%";
                console.log("downB13datasetsDataContent", downB13datasetsDataContent);
                console.log("downNonZeroValCount", downNonZeroValCount);
                $("#mtuChart_holderDiv").append('<div class="mtuChartWHHR" id="mtuChart_holder_hr" style="width: 5000px; height:5000px; max-width:5000px;"><div id="mtuChartHR" style="position:relative;"></div></div><div class="downB13LabelHolder"></div>');
                $(".downB13LabelHolder").append(downB13Label);
                var mtuChartHRPieUpdate = function () {
                    var div3W = $(".mtuChartWHHR").width();
                    var div3H = $(".mtuChartWHHR").height();

                    var size = Math.min(div3W, div3H);
                    var opt =  {
                        header:{
                            titleSubtitlePadding:0
                        },
                        data: {
                            //sortOrder: "value-desc",
                            smallSegmentGrouping: {
                                enabled: false
                            },
                            content: downB13datasetsDataContent,
                        },
                        size: {
                            pieInnerRadius: "40%",
                            pieOuterRadius: downMusicTypeUsageCVPieOuterRadius,
                            canvasHeight: div3H,
                            canvasWidth: div3W,
                        },
                        labels: {
                            outer: {
                                pieDistance: 200
                            },
                            mainLabel: {
                                font: "RobotoMonoMedium",
                                color: "#000000",
                                fontSize: 100
                            },
                            percentage: {
                                font: "RobotoMonoMedium",
                                color: "#070706",
                                decimalPlaces: 0,
                                fontSize: 100
                            },
                            value: {
                                font: "RobotoMonoMedium",
                                color: "#070706",
                                fontSize: 100
                            },
                            lines: {
                                enabled: true,
                                style: "straight",
                                color: "#A1A1A1"
                            }
                        },
                        tooltips:{
                            enabled:false,
                            type:"placeholder",
                            string:"{label}:{percentage}%",
                            style:{padding:5}
                        },
                        misc: {
                            gradient: {
                                enabled: false,
                                percentage: 100
                            },
                            pieCenterOffset: {
                                x: -8,
                                y: 0
                            },
                            colors: {
                                segments: downNonZeroValCount,
                                segmentStroke: "#A1A1A1"
                            },
                            canvaspadding:{
                                top:0,
                                right:0,
                                bottom:0,
                                left:0
                            }
                        }
                    };
                    mtuChartHR = new d3pie("mtuChartHR", opt);
                };
                mtuChartHRPieUpdate();
                window.addEventListener('resize', mtuChartHRPieUpdate);
                $("#mtuChart_holderDiv").css({"visibility":"hidden","overflow":"hidden"});
                if(window.location.href.indexOf("get-high-res-image")>-1)
                {
                    $(".loading-img").css({"background-position":"50% 10%"});
                }
                else
                {
                    $(".loading-img").css({"background-position":"50% 1200px"});
                    $("html, body").animate({ scrollTop: "1000px" });
                }

                setTimeout(function(){
                    var svg = document.querySelectorAll( "svg" );

                    if(svg.length > 0)
                    {
                        if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1)
                        {
                            var element = svg[svg.length-1]; // Get SVG element.

                        }
                        else if(window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                        {
                            var element = svg[svg.length-1]; // Get SVG element.
                        }
                        else
                        {
                            var element = svg[svg.length-1]; // Get SVG element.
                        }
                        //var element = svg[0]; // Get SVG element.
                        //console.log(element);
                        SVG2PNG(element, function(canvas) { // Arguments: SVG element, callback function.
                            var base64 = canvas.toDataURL("image/png"); // toDataURL return DataURI as Base64 format.
                            //console.log(base64);
                            generateLink('SVG2PNG-01.png', base64 , 'mtu'); // Trigger the Link is made by Link Generator and download.
                        });
                    }

                    $("#mtuChartImg_1a").attr("download",data.name_data+"_music_type_usage_on_average.png");
                    $("#svgToCanvas").css("height", "0px");
                    $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                    if(window.location.href.indexOf("get-high-res-image")>-1)
                    {
                        $("#mtuChartImg_1a").removeClass("hide");
                        removeLoader("#custLoader");
                    }
                    else
                    {
                        setTimeout(function(){
                            $('#mtuChartImg_1a span').trigger('click');
                            removeLoader("#custLoader");
                        },500);
                    }
                },5000);
            }
            // display-cv sonic logo graph data========================================================================
            if(graphType == 'sl_radar')
            {

                console.log("downSlradarGraphDataSetcontent", downSlradarGraphDataSetcontent);
                console.log("downSlradarGraphDataLabelcontent ", downSlradarGraphDataLabelcontent );

                $("#radarChart1_holderDiv").append('<div class="radarChart1WHHR" id="radarChart1_holder_hr" style="max-width: 5000px; width:5000px; height:5000px;"><canvas id="radarChart1HR" style="max-width: 5000px; width:5000px; height:5000px;"></canvas></div>');
                    const ctx = document.getElementById('radarChart1HR').getContext('2d');
                    const radarChart1HR = new Chart(ctx, {
                        type: 'radar',
                        plugins: [ChartDataLabels],
                        data: {
                            labels: downSlradarGraphDataLabelcontent,
                            datasets: downSlradarGraphDataSetcontent
                        },
                        options: {
                            layout: {
                                padding: 250
                            },
                            borderWidth: 0,
                            responsive: true,
                            maintainAspectRatio: true,
                            scales: {
                                x: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 10,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                y: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 11,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                r: {
                                    grid: {
                                        color: "#A1A1A1",
                                        circular: true,
                                        lineWidth: 5
                                    },
                                    angleLines: {
                                        color: '#A1A1A1',
                                        lineWidth: 5
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        color: '#000000',
                                        font: {
                                            family: 'RobotoMonoMedium',
                                            size: 100
                                        }
                                    },
                                    suggestedMin: 0,
                                    suggestedMax: 100
                                }
                            },
                            elements: {
                                line: {
                                    borderWidth: 0,
                                    backgroundColor : '#999999'
                                }
                            },
                            plugins: {
                                datalabels: {
                                    display: false,
                                },
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = radarChart1HR.data.datasets.labels;
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                    radarChart1HR.update();
                    $("#radarChart1_holderDiv").addClass("hide");
                    if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                    {
                        $(".loading-img").css({"background-position":"50% 1200px"});
                        $("html, body").animate({ scrollTop: "1000px" });
                    }

                    // Mood graph end

                    setTimeout(function(){
                        var svg = document.querySelectorAll( "svg" );

                        if($('#radarChart1HR').length > 0)
                        {
                            var radarChart1Canvas = document.getElementById('radarChart1HR');
                            var radarChart1DataURL = radarChart1Canvas.toDataURL('image/svg+xml');
                            $("#radarChartImg1HR").val(radarChart1DataURL);
                            //$("#radarChartImg_1").attr("src",radarChart1DataURL);
                            $("#radarChartImg_1a").attr("href",radarChart1DataURL);
                            $("#radarChart1_holderDiv").empty();
                            $("#radarChart1_holderDiv").removeClass("hide");
                        }

                        console.log("ended");
                        $("#radarChartImg_1a").attr("download",data.name_data+"_sonic_logo.png");
                        $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                        if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                        {
                            setTimeout(function(){
                                $('#radarChartImg_1a span').trigger('click');
                                removeLoader("#custLoader");
                            },500);
                        }
                    },5000);
            }

            // display-industry-cv sonic logo graph data========================================================================
            if(graphType == 'indsl_radar')
            {

                console.log("downIndSlradarGraphDataSetcontent", downIndSlradarGraphDataSetcontent);
                console.log("downIndSlradarGraphDataLabelcontent ", downIndSlradarGraphDataLabelcontent );

                $("#radarChart1_holderDiv").append('<div class="radarChart1WHHR" id="radarChart1_holder_hr" style="max-width: 5000px; width:5000px; height:5000px;"><canvas id="radarChart1HR" style="max-width: 5000px; width:5000px; height:5000px;"></canvas></div>');
                    const ctx = document.getElementById('radarChart1HR').getContext('2d');
                    const radarChart1HR = new Chart(ctx, {
                        type: 'radar',
                        plugins: [ChartDataLabels],
                        data: {
                            labels: downIndSlradarGraphDataLabelcontent,
                            datasets: downIndSlradarGraphDataSetcontent
                        },
                        options: {
                            layout: {
                                padding: 250
                            },
                            borderWidth: 0,
                            responsive: true,
                            maintainAspectRatio: true,
                            scales: {
                                x: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 10,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                y: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 11,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                r: {
                                    grid: {
                                        color: "#A1A1A1",
                                        circular: true,
                                        lineWidth: 5
                                    },
                                    angleLines: {
                                        color: '#A1A1A1',
                                        lineWidth: 5
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        color: '#000000',
                                        font: {
                                            family: 'RobotoMonoMedium',
                                            size: 100
                                        }
                                    },
                                    suggestedMin: 0,
                                    suggestedMax: 100
                                }
                            },
                            elements: {
                                line: {
                                    borderWidth: 0,
                                    backgroundColor : '#999999'
                                }
                            },
                            plugins: {
                                datalabels: {
                                    display: false,
                                },
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = radarChart1HR.data.datasets.labels;
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                    radarChart1HR.update();
                    $("#radarChart1_holderDiv").addClass("hide");
                    if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                    {
                        $(".loading-img").css({"background-position":"50% 1200px"});
                        $("html, body").animate({ scrollTop: "1000px" });
                    }

                    // Mood graph end

                    setTimeout(function(){
                        var svg = document.querySelectorAll( "svg" );

                        if($('#radarChart1HR').length > 0)
                        {
                            var radarChart1Canvas = document.getElementById('radarChart1HR');
                            var radarChart1DataURL = radarChart1Canvas.toDataURL('image/svg+xml');
                            $("#radarChartImg1HR").val(radarChart1DataURL);
                            //$("#radarChartImg_1").attr("src",radarChart1DataURL);
                            $("#radarChartImg_1a").attr("href",radarChart1DataURL);
                            $("#radarChart1_holderDiv").empty();
                            $("#radarChart1_holderDiv").removeClass("hide");
                        }

                        console.log("ended");
                        $("#radarChartImg_1a").attr("download",data.name_data+"_ind_sonic_logo.png");
                        $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                        if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                        {
                            setTimeout(function(){
                                $('#radarChartImg_1a span').trigger('click');
                                removeLoader("#custLoader");
                            },500);
                        }
                    },5000);
            }

            // display-sub-industry-cv sonic logo graph data========================================================================
            if(graphType == 'subindsl_radar')
            {

                console.log("downSubIndSlradarGraphDataSetcontent", downSubIndSlradarGraphDataSetcontent);
                console.log("downSubIndSlradarGraphDataLabelcontent ", downSubIndSlradarGraphDataLabelcontent );

                $("#radarChart1_holderDiv").append('<div class="radarChart1WHHR" id="radarChart1_holder_hr" style="max-width: 5000px; width:5000px; height:5000px;"><canvas id="radarChart1HR" style="max-width: 5000px; width:5000px; height:5000px;"></canvas></div>');
                    const ctx = document.getElementById('radarChart1HR').getContext('2d');
                    const radarChart1HR = new Chart(ctx, {
                        type: 'radar',
                        plugins: [ChartDataLabels],
                        data: {
                            labels: downSubIndSlradarGraphDataLabelcontent,
                            datasets: downSubIndSlradarGraphDataSetcontent
                        },
                        options: {
                            layout: {
                                padding: 250
                            },
                            borderWidth: 0,
                            responsive: true,
                            maintainAspectRatio: true,
                            scales: {
                                x: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 10,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                y: {
                                    //beginAtZero: true,
                                    display: false,
                                    fill: false,
                                    backgroundColor: 'rgba(0, 0, 0, 1)',
                                    gridLines: {
                                        circular: true,
                                        //color: ['#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA', '#AAAAAA']
                                        color: colorval1
                                    },
                                    angleLines: {
                                        color: '#333333',
                                        lineWidth: 2
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        fontSize: 11,
                                        fontStyle: 'RobotoMonoLight',
                                        fontColor: 'black'
                                    }
                                },
                                r: {
                                    grid: {
                                        color: "#A1A1A1",
                                        circular: true,
                                        lineWidth: 5
                                    },
                                    angleLines: {
                                        color: '#A1A1A1',
                                        lineWidth: 5
                                    },
                                    ticks: {
                                        display: false,
                                        beginAtZero: true
                                    },
                                    pointLabels: {
                                        color: '#000000',
                                        font: {
                                            family: 'RobotoMonoMedium',
                                            size: 100
                                        }
                                    },
                                    suggestedMin: 0,
                                    suggestedMax: 100
                                }
                            },
                            elements: {
                                line: {
                                    borderWidth: 0,
                                    backgroundColor : '#999999'
                                }
                            },
                            plugins: {
                                datalabels: {
                                    display: false,
                                },
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = radarChart1HR.data.datasets.labels;
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                    radarChart1HR.update();
                    $("#radarChart1_holderDiv").addClass("hide");
                    if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                    {
                        $(".loading-img").css({"background-position":"50% 1200px"});
                        $("html, body").animate({ scrollTop: "1000px" });
                    }

                    // Mood graph end

                    setTimeout(function(){
                        var svg = document.querySelectorAll( "svg" );

                        if($('#radarChart1HR').length > 0)
                        {
                            var radarChart1Canvas = document.getElementById('radarChart1HR');
                            var radarChart1DataURL = radarChart1Canvas.toDataURL('image/svg+xml');
                            $("#radarChartImg1HR").val(radarChart1DataURL);
                            //$("#radarChartImg_1").attr("src",radarChart1DataURL);
                            $("#radarChartImg_1a").attr("href",radarChart1DataURL);
                            $("#radarChart1_holderDiv").empty();
                            $("#radarChart1_holderDiv").removeClass("hide");
                        }

                        console.log("ended");
                        $("#radarChartImg_1a").attr("download",data.name_data+"_subind_sonic_logo.png");
                        $(".lp_section_09_col").find(".displayCVMostPopVideoPDiv").find("#modal_brandCVMPVideo").append(getLoader());
                        if(window.location.href.indexOf("display-cv")>-1 || window.location.href.indexOf("display-sonic-logo")>-1 || window.location.href.indexOf("display-industry-cv")>-1 || window.location.href.indexOf("display-sub-industry-cv")>-1)
                        {
                            setTimeout(function(){
                                $('#radarChartImg_1a span').trigger('click');
                                removeLoader("#custLoader");
                            },500);
                        }
                    },5000);
            }



        },
        complete: function(){

        }
    });


    function SVG2PNG(svg, callback) {
        var canvas = document.getElementById('svgToCanvas');
        var ctx = canvas.getContext('2d'); // For Canvas returns 2D graphic.
        var data = svg.outerHTML; // Get SVG element as HTML code.
        //console.log(data);
        canvg(canvas, data); // Render SVG on Canvas.
        $("#svgToCanvasHolder").addClass("hide");
        callback(canvas); // Execute callback function.
      }

      function generateLink(fileName, data, type) {
        // var link = document.createElement('a');
        // link.download = fileName;
        // link.href = data;
        if(type == 'genre')
        {
            $("#radarChartImg_2a").attr("href",data);
        }
        else
        {
            $("#mtuChartImg_1a").attr("href",data);
        }
        $("#svgToCanvasHolder").empty();
        $("#svgToCanvasHolder").removeClass("hide");
        $("#svgToCanvasHolder").append('<canvas id="svgToCanvas"></canvas>');
        if(type == 'genre')
        {
            $("#radarChart2_holderDiv").empty();
            $("#radarChart2_holderDiv").removeAttr("style");
        }
        else
        {
            $("#mtuChart_holderDiv").empty();
            $("#mtuChart_holderDiv").removeAttr("style");
        }

        $("body").removeAttr("style");
        //return link;
      }
}

function socialMStats(tabId, type){
    if(type == "cv"){
        //console.log("tabId",tabId);
        $(".statslist").find("li.sMSt_btn").removeClass("active");
        $(".statslist").find(".cust_btn").not($(".statslist").find("li."+tabId).addClass("active")).removeClass("active");
        $(".socialMediaStats").not($(".socialMediaStats."+tabId+"Holder").removeClass("hide")).addClass("hide");
        $(".socialMediaStats."+tabId+"Holder").slick('slickGoTo', 0);
        $(".socialMediaStats."+tabId+"Holder").slick('refresh');
    }
    else {
        var tabIdNo = tabId.split('_')[1];
        //console.log("tabIdNo",tabIdNo);
        $(".statslist"+tabIdNo).find("li.sMSt_btn").removeClass("active");
        $(".statslist"+tabIdNo).find(".cust_btn").not($(".statslist"+tabIdNo).find("li."+tabId).addClass("active")).removeClass("active");
        $(".socialMediaStats"+tabIdNo).not($(".socialMediaStats"+tabIdNo+"."+tabId+"Holder").removeClass("hide")).addClass("hide");
        $(".socialMediaStats"+tabIdNo+"."+tabId+"Holder").slick('slickGoTo', 0);
        $(".socialMediaStats"+tabIdNo+"."+tabId+"Holder").slick('refresh');
    }
}

function getContentForCompare(typedata, data)
{
    type = typedata.split("_")[0];
    displayData = typedata.split("_")[1];
    if(type == 'ind')
    {
        $("#compare-ind-search-input").val(atob(displayData));
        $("#compare_industry_cv_id_val").val(data);
        $('#indNameList').fadeOut();
        $('#indNameList').find("ul").remove();
        $('#indNameList').addClass("hide");
        $("#compare-ind-search-input-close").removeClass("hide");
        var query = $("#compare_industry_cv_id_val").val();
        //var chkSindUrl = $("#chkSindUrl").val()+'/'+query;
        if(window.location.href.indexOf('display-sub-industry-cv')<0)
        {
            var srchCvIndSindUrl = $("#srchCvIndSindUrl").val()+'/'+'0!_!sind!$!'+query;
        }
        else
        {
            var srchCvIndSindUrl = $("#srchCvIndSindUrl").val()+'/'+$("#sind_id").val().split("$_$")[0]+'!_!sind!$!'+query;
        }
        //alert(srchCvIndSindUrl);
        $.ajax({
            url:srchCvIndSindUrl,
            method:"GET",
            data: "",
            success:function(data){
                //alert(data);
                if(data != '')
                {
                    $("#sindNameList").html(data);
                    $('#sindNameListTab').attr("onclick","showSindNameList()");
                    $('#compare_sub_industry_dropdown').removeAttr("style");
                    $('.sindNameListTab').css("color", "#ffffff");
                    $('#compare_sub_industry_dropdown').css("cursor","pointer");
                }
                else
                {
                    $('#compare_sub_industry_dropdown').css("pointer-events","none");
                    $('#compare_sub_industry_dropdown').css("cursor","not-allowed");
                    $('#compare_sub_industry_dropdown').click(false);
                }
            },
            complete: function(){
            }
        });
    }
    else if(type == 'sind')
    {
        //alert(atob(displayData));
        $("#sindNameListTab").text(atob(displayData));
        $("#compare_sub_industry_cv_id_val").val(data);
        //$('#sindNameList').fadeOut();
        $('#sindNameList').addClass("hide");
        $("#compare-sind-search-input-close").removeClass("hide");
        $('#compare-sind-search-input-close').text("Clear");
        $('#compare-sind-search-input-close').css({"font-size":"13px"});
        $(".hideSindList").remove();
    }
    else if(type == 'cv')
    {
        $("#compare-cv-search-input").val(atob(displayData));
        $("#compare_brand_cv_id_val").val(data);
        $('#brandNameList').fadeOut();
        $('#brandNameList').find("ul").remove();
        $('#brandNameList').addClass("hide");
        $("#compare-cv-search-input-close").removeClass("hide");
    }
    console.log("compare_industry_cv_id_val:"+$("#compare_industry_cv_id_val").val());
    console.log("compare_brand_cv_id_val:"+$("#compare_brand_cv_id_val").val())
    console.log("compare_sub_industry_cv_id_val:"+$("#compare_sub_industry_cv_id_val").val())
    if($("#compare_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_sub_industry_cv_id_val").val() == '')
    {
        $("#compare_option").val('industry_cv');
        var actionUrl = $("#compare_industry_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    else if($("#compare_sub_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '')
    {
        $("#compare_option").val('sub_industry_cv');
        var actionUrl = $("#compare_sub_industry_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    else
    {
        $("#compare_option").val('brand_cv');
        var actionUrl = $("#compare_cv_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    $("#compare_btn").removeAttr("disabled");
}


function clearCompareSearchListDropdown(type)
{

    if(type == 'ind')
    {
        $('#compare-ind-search-input').val('');
        $("#compare_industry_cv_id_val").val('')
        $('#indNameList').fadeOut();
        $('#indNameList').find("ul").remove();
        $('#indNameList').addClass("hide");
        $("#compare-ind-search-input-close").addClass("hide");

        $("#sindNameListTab").text('Select Sub Industry');
        $("#compare_sub_industry_cv_id_val").val('');
        $('#sindNameList').find("ul").remove();
        $('#sindNameList').addClass("hide");
        $("#compare-sind-search-input-close").addClass("hide");
        $('.sindNameListTab').css("color", "#898989");
        $('#compare_sub_industry_dropdown').css("pointer-events","none");
        $('#compare_sub_industry_dropdown').css("cursor","not-allowed");
        $('#compare_sub_industry_dropdown').click(false);

        $('#compare-cv-search-input').val('');
        $("#compare_brand_cv_id_val").val('');
        $('#brandNameList').find("ul").remove();
        $('#brandNameList').addClass("hide");
        $("#compare-cv-search-input-close").addClass("hide");

        $("#compare_option").val('');
        $("#compare_btn").attr("disabled");
    }
    else if(type == 'sind')
    {
        $("#sindNameListTab").text('Select Sub Industry');
        $("#compare_sub_industry_cv_id_val").val('');
        $("#compare-sind-search-input-close").addClass("hide");
        $(".hideSindList").remove();
        $('.sindNameListTab').css("color", "#727272");

        $('#compare-cv-search-input').val('');
        $("#compare_brand_cv_id_val").val('');
        $('#brandNameList').find("ul").remove();
        $('#brandNameList').addClass("hide");
        $("#compare-cv-search-input-close").addClass("hide");

        if($("#compare_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_sub_industry_cv_id_val").val() == '')
        {
            $("#compare_option").val('industry_cv');
            $("#sindNameListTab").css("color","#ffffff");
        }
        else
        {
            $("#compare_option").val('');
            $("#compare_btn").attr("disabled");
        }

        //$('.sindNameList').addClass('hide');

    }

    else if(type == 'cv')
    {
        $('#compare-cv-search-input').val('');
        $("#compare_brand_cv_id_val").val('');
        $('#brandNameList').find("ul").remove();
        $('#brandNameList').addClass("hide");
        $("#compare-cv-search-input-close").addClass("hide");

        if($("#compare_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_sub_industry_cv_id_val").val() == '')
        {
            $("#compare_option").val('industry_cv');
        }
        else if($("#compare_sub_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_industry_cv_id_val").val() == '')
        {
            $("#compare_option").val('sub_industry_cv');
        }
        else
        {
            $("#compare_option").val('');
            $("#compare_btn").attr("disabled");
        }
    }

    console.log("compare_industry_cv_id_val:"+$("#compare_industry_cv_id_val").val());
    console.log("compare_brand_cv_id_val:"+$("#compare_brand_cv_id_val").val())
    console.log("compare_sub_industry_cv_id_val:"+$("#compare_sub_industry_cv_id_val").val())
    if($("#compare_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '' && $("#compare_sub_industry_cv_id_val").val() == '')
    {
        $("#compare_option").val('industry_cv');
        var actionUrl = $("#compare_industry_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    else if($("#compare_sub_industry_cv_id_val").val() != '' && $("#compare_brand_cv_id_val").val() == '')
    {
        $("#compare_option").val('sub_industry_cv');
        var actionUrl = $("#compare_sub_industry_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }
    else
    {
        $("#compare_option").val('brand_cv');
        var actionUrl = $("#compare_cv_form").val();
        $("#modal_compare").find("form").attr("action",actionUrl);
    }

}

function showSindNameList()
{
    $('#sindNameList').removeClass("hide");
    $('.sindNameListTab').css("color", "#ffffff");

    if($('.sindNameList').find('.compare-search-list-ul').is(':visible')) {
        //
        //$('#compare-sind-search-input-close').html("&#x2716");
        if($("#sindNameListTab").text().indexOf('Select Sub Industry')<0 && $("#sindNameList").text() != '')
        {
            $('#compare-sind-search-input-close').addClass('hide');
        }
        else
        {
            if($("#sindNameList").text() != '')
            {
                $('#compare-sind-search-input-close').addClass('hide');
            }
            else
            {
                $('#compare-sind-search-input-close').removeClass('hide');
            }
        }
        $('<span class="hideSindList" onclick="hideSindList()" style="font-size: 13px; display: inline-block; background-color: '+themeColor+'; color: #000; padding: 4px 5px; border-radius: 3px; cursor: pointer; line-height: 14px; position: absolute; top: 10px; right: 40px;">&#x2716</span>').insertBefore('#compare-sind-search-input-close');
        //$('#compare-sind-search-input-close').css({"font-size":"15px"});
    }
    else {
        $('#compare-sind-search-input-close').addClass('hide');
        $('#compare-sind-search-input-close').text("Clear");
        $('#compare-sind-search-input-close').css({"font-size":" "});
    }
}

function hideSindList()
{
    $('#sindNameList').addClass("hide");
    $(".hideSindList").remove();
    if($("#sindNameListTab").text().indexOf('Select Sub Industry')<0 && $("#sindNameList").text() != '')
    {
        $("#compare-sind-search-input-close").removeClass("hide");
    }
    else
    {
        $("#compare-sind-search-input-close").addClass("hide");
    }

}

if(window.location.href.indexOf('best-in-audio-brands-list')>-1)
{
    setTimeout(function(){
        var scrollTo = $("#scroll_to").val();
        $('html, body').animate({
            scrollTop: $('.tr_'+scrollTo).offset().top
        }, 'slow');
    },2000);

}
var sumTotalWarningPopupFlag = false;
getNoMusicValueOnKeyUpPressBlur();

function getNoMusicValueOnKeyUpPressBlur()
{
    $(".sumSec16Numbers").on("keyup, keypress, blur", function(){
        var sumSec16Numbers = 0;
        var sec16trLen = $("#fBlockOfExpTableBody").find("tr").length;
        $("#fBlockOfExpTableBody").find("tr").each(function(index , item){
            // console.log("index"+index+"| item"+item+"|| value"+$("#cv_efb_number_"+index).val());
            /* if(index != sec16trLen-1)
            {
                sumSec16Numbers = parseInt(sumSec16Numbers) + parseInt($("#cv_efb_number_"+index).val());
            }  */
            //console.log($("#cv_efb_number_"+index).val());
            if($("#cv_efb_number_"+index).val() != undefined && $("#cv_efb_number_"+index).val() != '')
            {
                if(index < 5)
                    sumSec16Numbers = parseInt(sumSec16Numbers) + parseInt($("#cv_efb_number_"+index).val());
            }

        });
        //console.log("sumSec16Numbers",sumSec16Numbers);
        var noMusicvalue = 100 - sumSec16Numbers;
        //console.log("noMusicvalue",noMusicvalue);
        if(noMusicvalue < 0)
        {
            $(".noMusicInpt").val(0);
        }
        else
        {
            $(".noMusicInpt").val(noMusicvalue);
        }
        $("#sumTotal").text(sumSec16Numbers);
        if(sumTotalWarningPopupFlag === false)
        {
            if(sumSec16Numbers > 100)
            {
                sumTotalWarningPopupFlag = true;
                BootstrapDialog.show({
                    id: "sumTotalWarning",
                    title: "Warning",
                    //type: getDialogType("PRIMARY"),
                    size: BootstrapDialog.SIZE_NORMAL,
                    message: function () {
                        var $message = $('<div style="background-color:#000000;"></div>');
                        var html = '<p>Total greater than <strong>100</strong></p>';
                        $message.append(html);
                        return $message;
                    },
                    closeByBackdrop: !1,
                    closable: !0,
                    buttons: [
                        {
                            label: 'Close',
                            cssClass: 'btn btn-default btn-sm',
                            action: function (dialog) {
                                dialog.close();
                            }
                        }
                    ],
                    onshown: function (dialogRef) {},
                    onhide: function (dialogRef) {
                        sumTotalWarningPopupFlag = false;
                    }
                });
            }
        }
    });
}

function getNoMusicValue()
{
    var sumSec16Numbers = 0;
    var sec16trLen = $("#fBlockOfExpTableBody").find("tr").length;
    $("#fBlockOfExpTableBody").find("tr").each(function(index , item){
        // console.log("index"+index+"| item"+item+"|| value"+$("#cv_efb_number_"+index).val());
        if(index != sec16trLen-1)
        {
            sumSec16Numbers = parseInt(sumSec16Numbers) + parseInt($("#cv_efb_number_"+index).val());
        }
    });
    //console.log("sumSec16Numbers",sumSec16Numbers);
    var noMusicvalue = 100 - sumSec16Numbers;
    //console.log("noMusicvalue",noMusicvalue);
    if(noMusicvalue < 0)
    {
        $(".noMusicInpt").val(0);
    }
    else
    {
        $(".noMusicInpt").val(noMusicvalue);
    }
    $("#sumTotal").text(sumSec16Numbers);
    if(sumTotalWarningPopupFlag === false)
    {
        if(sumSec16Numbers > 100)
        {
            sumTotalWarningPopupFlag = true;
            BootstrapDialog.show({
                id: "sumTotalWarning",
                title: "Warning",
                //type: getDialogType("PRIMARY"),
                size: BootstrapDialog.SIZE_NORMAL,
                message: function () {
                    var $message = $('<div style="background-color:#000000;"></div>');
                    var html = '<p>Total greater than <strong>100</strong></p>';
                    $message.append(html);
                    return $message;
                },
                closeByBackdrop: !1,
                closable: !0,
                buttons: [
                    {
                        label: 'Close',
                        cssClass: 'btn btn-default btn-sm',
                        action: function (dialog) {
                            dialog.close();
                        }
                    }
                ],
                onshown: function (dialogRef) {},
                onhide: function (dialogRef) {
                    sumTotalWarningPopupFlag = false;
                }
            });
        }
    }
}

function PosEnd(end, keyDirection) {
    //console.log("id " + end + " : " + end.value);
    //var len = $("#"+end).val().length;
    if(keyDirection == 'down'){
        var len = end.value.length;
    }
    else {
        //console.log("Text : "+$(".activeDropDownListItem a").text().length);
        var len = $("#list_1").text().length;
    }
    // Mostly for Web Browsers
    if (end.setSelectionRange) {
        setTimeout(function(){
            end.focus();
            if(keyDirection == 'down'){
                end.setSelectionRange(len, 0);
            }
            else {
                end.setSelectionRange(len, len);
            }
        }, 100);
    } else if (end.createTextRange) {
        var t = end.createTextRange();
        t.collapse(true);
        t.moveEnd('character', len);
        t.moveStart('character', len);
        t.select();
    }
}

/* (function( $ ){
    setTimeout(function(){
        var winHeight = $(document).height() - 50;
        $(".left_nav").css("height", winHeight);
    }, 2000);
})( jQuery ); */

// Snapshot Mgmt
if(window.location.href.indexOf("brand-cvs") > 1 || window.location.href.indexOf("add-cv") > 1 || window.location.href.indexOf("edit-brand-cv") > 1 || window.location.href.indexOf("duplicate-brand-cv") > 1){
	$(".cust_link_brandcvs").addClass("active");
	$(".cust_link_brandcvs").parent().parent().parent().addClass("menu-open");
    generateMenuLi("snapshotManagement");
    $("#groupTitle").text("Snapshot Management");
}
if(window.location.href.indexOf("shared-cv")> 1){
	$(".cust_link_sharedcv").addClass("active");
	$(".cust_link_sharedcv").parent().parent().parent().addClass("menu-open");
    generateMenuLi("snapshotManagement");
    $("#groupTitle").text("Snapshot Management");
}
// User Management
if(window.location.href.indexOf("admin-users") > 1){
    //console.log(atob(window.location.pathname.replace("/scgen/create-account/", "")));
	$(".cust_link_adminusers").addClass("active");
	$(".cust_link_adminusers").parent().parent().parent().addClass("menu-open");
    generateMenuLi("userManagement");
    $("#groupTitle").text("User Management");
}
if(window.location.href.indexOf("client-users") > 1){
	$(".cust_link_clientusers").addClass("active");
	$(".cust_link_clientusers").parent().parent().parent().addClass("menu-open");
    generateMenuLi("userManagement");
    $("#groupTitle").text("User Management");
}

if(window.location.href.indexOf("create-account") > -1)
{
    // if(atob(window.location.pathname.replace("/scgen/create-account/", "")) == 'admin') // LOCAL
    if(atob(window.location.pathname.replace("/create-account/", "")) == 'admin') // LIVE
    {
        $(".cust_link_adminusers").addClass("active");
	    $(".cust_link_adminusers").parent().parent().parent().addClass("menu-open");
    }
    else
    {
        $(".cust_link_clientusers").addClass("active");
	    $(".cust_link_clientusers").parent().parent().parent().addClass("menu-open");
    }

    generateMenuLi("userManagement");
    $("#groupTitle").text("User Management");
}

if(window.location.href.indexOf("edit-account") > 1)
{
    if($("#urole").val() == "1" || $("#urole").val() == 1)
    {
        $(".cust_link_adminusers").addClass("active");
	    $(".cust_link_adminusers").parent().parent().parent().addClass("menu-open");
    }
    else
    {
        $(".cust_link_clientusers").addClass("active");
	    $(".cust_link_clientusers").parent().parent().parent().addClass("menu-open");
    }
    generateMenuLi("userManagement");
    $("#groupTitle").text("User Management");
}
// Data Management
if(window.location.href.indexOf("industries") > 1 || window.location.href.indexOf("sub_industries") > 1){
    if(window.location.pathname.replace("/scgen/", "") == "industries" || window.location.pathname.replace("/", "")  == "industries") {
        $(".cust_link_industries").addClass("active");
        $(".cust_link_industries").parent().parent().parent().addClass("menu-open");
        $("#groupTitle").text("Data Management");
    }
    else {
        $(".cust_link_subindustries").addClass("active");
        $(".cust_link_subindustries").parent().parent().parent().addClass("menu-open");
        $("#groupTitle").text("Data Management");
    }
    generateMenuLi("dataManagement");
}
if(window.location.href.indexOf("add-industry") > 1 || window.location.href.indexOf("edit-industry") > 1){
    $(".cust_link_industries").addClass("active");
    $(".cust_link_industries").parent().parent().parent().addClass("menu-open");
    $("#groupTitle").text("Data Management");
    generateMenuLi("dataManagement");
}
if(window.location.href.indexOf("add-sub-industry") > 1 || window.location.href.indexOf("edit-sub-industry") > 1){
    $(".cust_link_subindustries").addClass("active");
    $(".cust_link_subindustries").parent().parent().parent().addClass("menu-open");
    $("#groupTitle").text("Data Management");
    generateMenuLi("dataManagement");
}
if(window.location.href.indexOf("footer-templates")> 1 || window.location.href.indexOf("add-footer-template")> 1 || window.location.href.indexOf("edit-footer-template")> 1){
	$(".cust_link_footertemplates").addClass("active");
	$(".cust_link_footertemplates").parent().parent().parent().addClass("menu-open");
    generateMenuLi("dataManagement");
    $("#groupTitle").text("Data Management");
}
if(window.location.href.indexOf("experiences")> 1 || window.location.href.indexOf("add-experience")> 1 || window.location.href.indexOf("edit-experience")> 1){
	$(".cust_link_experiences").addClass("active");
	$(".cust_link_experiences").parent().parent().parent().addClass("menu-open");
    generateMenuLi("dataManagement");
    $("#groupTitle").text("Data Management");
}
// Social Media Sync
if(window.location.href.indexOf("social-media-sync-pending-process-cvs")> 1){
	$(".cust_link_socialmediasyncpendingprocesscvs").addClass("active");
	$(".cust_link_socialmediasyncpendingprocesscvs").parent().parent().parent().addClass("menu-open");
    generateMenuLi("socialMediaSync");
    $("#groupTitle").text("Social Media Sync");
}
if(window.location.href.indexOf("social-media-sync-in-process-cvs")> 1){
	$(".cust_link_socialmediasyncinprocesscvs").addClass("active");
	$(".cust_link_socialmediasyncinprocesscvs").parent().parent().parent().addClass("menu-open");
    generateMenuLi("socialMediaSync");
    $("#groupTitle").text("Social Media Sync");
}
if(window.location.href.indexOf("social-media-sync-completed-process-cvs")> 1){
	$(".cust_link_socialmediasynccompletedprocesscvs").addClass("active");
	$(".cust_link_socialmediasynccompletedprocesscvs").parent().parent().parent().addClass("menu-open");
    generateMenuLi("socialMediaSync");
    $("#groupTitle").text("Social Media Sync");
}
// Best in Audio Brands
if(window.location.href.indexOf("best-in-audio-brands-list")> 1){
    // var babListUrl = window.location.pathname.replace("/scgen/best-in-audio-brands-list/", ""); // LOCAL
    var babListUrl = window.location.pathname.replace("/best-in-audio-brands-list/", ""); // LIVE
	$(".cust_link_bestinaudiobrandslist"+atob(babListUrl)).addClass("active");
	$(".cust_link_bestinaudiobrandslist"+atob(babListUrl)).parent().parent().parent().addClass("menu-open");
    generateMenuLi("bestInAudioBrands");
    $("#groupTitle").text("Best in Audio Brands");
}
// Social Blade Sync
if(window.location.href.indexOf("social-blade-sync")> 1 || window.location.href.indexOf("social-blade-sync-in-process-cvs")> 1 || window.location.href.indexOf("social-blade-sync-completed-process-cvs")> 1){
    if(window.location.pathname.replace("/scgen/", "") == "social-blade-sync" || window.location.pathname == "/social-blade-sync")
    {
        $(".cust_link_socialbladesync").addClass("active");
        $(".cust_link_socialbladesync").parent().parent().parent().addClass("menu-open");
        $("#groupTitle").text("Social Blade Sync");
    }
    else if(window.location.pathname.replace("/scgen/", "") == "social-blade-sync-in-process-cvs" || window.location.pathname == "/social-blade-sync-in-process-cvs") {
        $(".cust_link_socialbladesyncinprocesscvs").addClass("active");
	    $(".cust_link_socialbladesyncinprocesscvs").parent().parent().parent().addClass("menu-open");
        $("#groupTitle").text("Social Blade Sync");
    }
    else {
        $(".cust_link_socialbladesynccompletedprocesscvs").addClass("active");
        $(".cust_link_socialbladesynccompletedprocesscvs").parent().parent().parent().addClass("menu-open");
        $("#groupTitle").text("Social Blade Sync");
    }
    generateMenuLi("socialBladeSync");
}

function generateMenuLi(id)
{
    $("#"+id).find("li").each(function(ind, itm){
        console.log(ind, itm.id, $("#"+itm.id).find("a").attr("href"), $("#"+itm.id).find("p").text(), $("#"+itm.id).find("a").attr('class'));
        $("#menuTabHolder").append('<li class="tab-link"><a href="'+$("#"+itm.id).find("a").attr("href")+'" class="'+$("#"+itm.id).find("a").attr('class').replace("nav-link","")+'"><p>'+$("#"+itm.id).find("p").text()+'</p></a></li>');
        //console.log($("#"+itm.id).find("a").attr('class').includes("active"), $("#"+itm.id).find("p").text());
        if($("#"+itm.id).find("a").attr('class').includes("active") == true){
            $("#currentActiveTitle").html("<span class='currentActivePageSubTitle'></span>" + $("#"+itm.id).find("p").text());
        }
    });
}

//$("div.dataTables_wrapper div.dataTables_filter").find("label").text("");





$(document).on('click', '#request_snapshot_brand_name_clear', function(){
    $('#request_snapshot_brand_name').val('');
    $('#request_snapshot_brand_name_clear').addClass("hide");
    $("#request_snapshot_button").attr("disabled",true);
});
$(document).on('click', '#request_snapshot_company_url_clear', function(){
    $('#request_snapshot_company_url').val('');
    $('#request_snapshot_company_url_clear').addClass("hide");
    $("#request_snapshot_button").attr("disabled",true);
    $("#url_check").addClass("hide");
    $('#url_should_be').addClass('hide');
});
$(document).on('click', '#request_snapshot_market_clear', function(){
    $('#request_snapshot_market').val('');
    $('#request_snapshot_market_clear').addClass("hide");
});
$(document).on('click', '#request_snapshot_year_clear', function(){
    $('#request_snapshot_year').val('');
    $('#request_snapshot_year_clear').addClass("hide");
});


$("#request_snapshot_button").attr("disabled","true");
$(".request_snapshot_input").keyup(function(e){
    console.log(e.target.value);
    if(e.target.value != "" && e.target.getAttribute('name') == "request_snapshot_brand_name"){
        $('#request_snapshot_brand_name_clear').removeClass("hide");
    }

    if(e.target.value != "" && e.target.getAttribute('name') == "request_snapshot_company_url"){
        var inputValue = e.target.value
        if (inputValue.startsWith('https://') || inputValue.startsWith('http://')) {
            $('#url_should_be').addClass('hide');
        }else{
            $('#url_should_be').removeClass('hide');
        }
        $('#request_snapshot_company_url_clear').removeClass("hide");
        $("#url_check").addClass("hide");
    }

    if(e.target.value != "" && e.target.getAttribute('name') == "request_snapshot_market"){
        $('#request_snapshot_market_clear').removeClass("hide");
    }

    if(e.target.value != "" && e.target.getAttribute('name') == "request_snapshot_year"){
        $('#request_snapshot_year_clear').removeClass("hide");
    }

    if(e.target.value == ""){
        if(e.target.getAttribute('name') == "request_snapshot_brand_name"){
            $('#request_snapshot_brand_name_clear').addClass("hide");
        }
        if(e.target.getAttribute('name') == "request_snapshot_company_url"){
            $('#request_snapshot_company_url_clear').addClass("hide");
            $("#url_check").addClass("hide")
            $('#url_should_be').addClass('hide');
        }
        if(e.target.getAttribute('name') == "request_snapshot_market"){
            $('#request_snapshot_market_clear').addClass("hide");
        }
        if(e.target.getAttribute('name') == "request_snapshot_year"){
            $('#request_snapshot_year_clear').addClass("hide");
        }
    }


    var request_snapshot_brand_name  = $("#request_snapshot_brand_name").val();
    var request_snapshot_company_url  = $("#request_snapshot_company_url").val();

    if(request_snapshot_brand_name != "" && request_snapshot_company_url != ""){
        $('#request_snapshot_button').attr('disabled', false);
    }else{
        $("#request_snapshot_button").attr("disabled",true);
    }
});


$(document).on('click', '#request_snapshot_button', function(e){
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    e.preventDefault();

    var request_snapshot_brand_name  = $("#request_snapshot_brand_name").val();
    var request_snapshot_company_url  = $("#request_snapshot_company_url").val();
    var request_snapshot_market = $('#request_snapshot_market').val();
    var request_snapshot_year = $('#request_snapshot_year').val();
    var rqURL = $('#rqURL').val();
    console.log(request_snapshot_brand_name,request_snapshot_company_url,request_snapshot_market,request_snapshot_year,rqURL);

    /* $.ajax({
        type: "POST",
        url:rqURL,
        data:{
            "request_snapshot_brand_name":request_snapshot_brand_name,
            "request_snapshot_company_url":request_snapshot_company_url,
            "request_snapshot_market":request_snapshot_market,
        },
        success: function(response) {
            closePopup("request_snapshot")
            openPopup("done_snapshot")
            $("#done_snapshot_body").html(response);
        }
    }); */

    if (request_snapshot_company_url.indexOf("http://") == 0 || request_snapshot_company_url.indexOf("https://") == 0) {
        $("#url_check").addClass("hide");
        $("#request_cv_content").append(getLoader())
        $.ajax({
            type: "POST",
            url:rqURL,
            data:{
                "request_snapshot_brand_name":request_snapshot_brand_name,
                "request_snapshot_company_url":request_snapshot_company_url,
                "request_snapshot_market":request_snapshot_market,
                "request_snapshot_year":request_snapshot_year,
            },
            success: function(response) {
                removeLoader("#request_cv_content");
                closePopup("request_snapshot")
                openPopup("done_snapshot")
                $("#done_snapshot_body").html(response);
            }
        });
    }
    else{
        $('#request_snapshot_company_url_clear').click();
        $("#url_check").removeClass("hide")
    }
});

//request_band
// $(document).on('click', '#request_brand_button', function(e){
//     $.ajaxSetup({
//         headers: {
//             'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
//         }
//     });
//     e.preventDefault();

//     var request_brand_name  = $("#request_brand_name").val();
//     var request_brand_desc  = $("#request_brand_desc").val();
//     var rqURL = $('#rqURL').val();
//     console.log(request_brand_name,request_brand_desc,rqURL);


// });



function setSonicUsageLegendNumber(yesnotype,sonicUsageLegendNumber){
    console.log("yesnotype ==",yesnotype," sonicUsageLegendNumber==",sonicUsageLegendNumber);
    if(yesnotype == "yes"){
        if(sonicUsageLegendNumber != ""){
            var noLegnedvalue = 0;
            if(sonicUsageLegendNumber < 100){
                noLegnedvalue = 100 - sonicUsageLegendNumber;
            }
            $("#cv_sonic_usage_legend_number_1").val(noLegnedvalue);
        }else{
            $("#cv_sonic_usage_legend_number_1").val("");
        }
    }
    else{
        if(sonicUsageLegendNumber != ""){
            var yesLegnedvalue = 0;
            if(sonicUsageLegendNumber < 100){
                yesLegnedvalue = 100 - sonicUsageLegendNumber;
            }
            $("#cv_sonic_usage_legend_number_0").val(yesLegnedvalue);
        }else{
            $("#cv_sonic_usage_legend_number_0").val("");
        }
    }
}


//====================User Active Check And Destroy =====================
$(".webCVBgColor").attr("onscroll","check_user_active()");
var userActiveTimer = 0;
var userActtiveInterval;
function bodyOnLoad(){

    //********session Storage checking whether user IS active(0) OR not(1) **************
    //console.log(Object.keys(sessionStorage));
    var sessionStoragekeys = sessionStorage.key(0);
    //console.log(sessionStoragekeys);
    if(sessionStoragekeys == "userLogOutVal"){
        var userLogOutVal= sessionStorage.getItem("userLogOutVal");
        if(userLogOutVal == 1){
            console.log("User Alredy Logged Out");
            sessionStorage.setItem("userLogOutVal", "0");
            window.location.href =  $("#base_app_url").val()+"/logout";
        }else{
            console.log("User is Active Now");
            userActtiveInterval = setInterval(user_acttive_timer, 1000);
        }
    }else{
        userActtiveInterval = setInterval(user_acttive_timer, 1000);
    }
}

function user_acttive_timer(){
        userActiveTimer = userActiveTimer + 1;
        var request_timeout_time = $("#request_timeout_time").val();
        //console.log("increment userActiveTimer === ",userActiveTimer," request_timeout_time == ",request_timeout_time);
        if(userActiveTimer >= request_timeout_time*60){
            if(window.location.href.indexOf("display-cv") > 1 || window.location.href.indexOf("display-industry-cv") > 1 || window.location.href.indexOf("display-sub-industry-cv") > 1 || window.location.href.indexOf("display-sonic-logo") > 1){
                if($("#modal_compare").hasClass("show") === true){
                    $("#modal_compare").css("z-index", 2);
                }else if($("#modal_share").hasClass("show") === true){
                    $("#modal_share").css("z-index", 2);
                }
            }
            $("#modal_overlay").removeClass("hide");
            $("#modal_overlay").addClass("show");
            $("#user_active").removeClass("hide");
            $("#user_active").addClass("show");
            sessionStorage.setItem("userLogOutVal", "1");
            clearInterval(userActtiveInterval);
        }
}
function check_user_active(event=""){
    if(event != ""){
        //console.log(event);
        var arrowkeyArray = ["ArrowDown","ArrowUp","ArrowRight","ArrowLeft"];
        if(arrowkeyArray.includes(event.key)){
            // console.log("active");
            // console.log("actual userActiveTimer === ",userActiveTimer);
            userActiveTimer = 0;
            //console.log("set userActiveTimer === ",userActiveTimer);
        }
    }else{
        // console.log("active");
        // console.log("actual userActiveTimer === ",userActiveTimer);
        userActiveTimer = 0;
        //console.log("set userActiveTimer === ",userActiveTimer);
    }
}

function sesStorUserLogvalOutReset(){
    sessionStorage.setItem("userLogOutVal",0);
}


function browseSnapshotsSelect(callfromSelect){

    addLoader("#custLoader");

    var app_url_base = $("#base_app_url").val();
    var ind_id = $('#industry_name').val();
    var subid_id = $('#sub_industry_name').val();
    var slyesno_id =  window.btoa(0);
    var atozsort_id = window.btoa(0);
    var recentsort_id = window.btoa(0);

    // console.log("callfromSelect==",callfromSelect);
    // console.log("ind_id==",ind_id);
    // console.log("subid_id==",subid_id);
    // console.log("slyesno_id==",slyesno_id);
    // console.log("atozsort_id==",atozsort_id);
    // return false;

    if(callfromSelect == "industry"){
        var subid_id =  window.btoa(0);
        if(ind_id == 'MA=='){
            window.location.href = app_url_base+"/browse-cv/"+ind_id+"$_$"+subid_id+"$_$"+slyesno_id+"$_$"+atozsort_id+"$_$"+recentsort_id;
        }else{
            window.location.href = app_url_base+"/get-industry-cvs/"+ind_id+"$_$"+subid_id+"$_$"+slyesno_id+"$_$"+atozsort_id+"$_$"+recentsort_id;
        }

    }else{
        //if(callfromSelect == "subindustry")
        if(subid_id == 'MA=='){
            window.location.href = app_url_base+"/get-industry-cvs/"+ind_id+"$_$"+subid_id+"$_$"+slyesno_id+"$_$"+atozsort_id+"$_$"+recentsort_id;
        }else{
            window.location.href = app_url_base+"/get-sub-industry-cvs/"+ind_id+"$_$"+subid_id+"$_$"+slyesno_id+"$_$"+atozsort_id+"$_$"+recentsort_id;
        }
    }

}

var parentIndustryId = $('#industry_name_hidden_id').val();
if(parentIndustryId > 0){
    console.log('parentIndustryId'+parentIndustryId+" --- "+$("#sub_industry_name option").hasClass(parentIndustryId));
    if($("#sub_industry_name option").hasClass(parentIndustryId))
    {
        //$("#sub_industry_name option").removeAttr("selected");
        $("#sub_industry_name").removeAttr("disabled");
        $("#sub_industry_name option").removeClass("hide");
        $("#sub_industry_name option").not($("#sub_industry_name option."+parentIndustryId)).addClass("hide");
        $("#sub_industry_name option[id='showHideSubInOptionId']").removeClass("hide");

    }
    else
    {
        $("#sub_industry_name option").removeAttr("selected");
        $("#sub_industry_name").attr("disabled","true");
        $("#sub_industry_name option").addClass("hide");
    }
}




function showHideFlterHolderDiv(callFrom,e){

    e.stopPropagation();
    //console.log("callFrom== ",callFrom);

    if(callFrom == "onlyAtoZ"){
        if($(".cat_atoz_hol").hasClass("hide")){
            $(".cat_atoz_hol").removeClass("hide");

            $(".custCol5 .snapshotFilterSty").addClass("active");
            $(".custCol5 .fs-arrow").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');

        }else{
            var currentURL = window.location.href;
            var currntUrlParts = currentURL.split("/");
            var currntUrlIds = currntUrlParts[currntUrlParts.length-1];
            var filterIds = currntUrlIds.split("$_$");
            var atozAllParameter = filterIds[3].split("$");
            console.log(atozAllParameter);
            if(atob(atozAllParameter[0]) != 0){
                //console.log(filterIds);
                filterIds[3] = 'MA==';
                filterIds[4] = 'MA==';
                //console.log(filterIds);
                var newIds = filterIds.join("$_$");
                //console.log(newIds,currentURL);
                var oldIdsReplaceUrl = currentURL.replace(currntUrlIds,'');
                //console.log(newIds,oldIdsReplaceUrl);
                window.location.href = oldIdsReplaceUrl + newIds;

            }else{
                $(".cat_atoz_hol").addClass("hide");
                $(".cat_atoz_hol").removeClass("show");

                $(".custCol5 .snapshotFilterSty").removeClass("active");
                $(".custCol5 .fs-arrow").attr('style', 'border-top: 5px solid #aeaeae  !important; ');
            }
        }
    }
    else if(callFrom == "sonicLogo"){
        if($(".sonicLogoYesNoFilterHolder").hasClass("hide")){
            $(".sonicLogoYesNoFilterHolder").removeClass("hide");
        }else{
            $(".sonicLogoYesNoFilterHolder").addClass("hide");
        }
    }else{
        if($(".sortByContentHolder").hasClass("hide")){
            $(".sortByContentHolder").removeClass("hide");
        }else{
            $(".sortByContentHolder").addClass("hide");
        }
    }
}



$(function() {

    if($(".cat_atoz_hol").hasClass("show")){
        $(".custCol5 .snapshotFilterSty").addClass("active");
        $(".custCol5 .fs-arrow").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');
    }

    var currentURL = window.location.href;

    var currntUrlParts = currentURL.split("/");

    var currntUrlIds = currntUrlParts[currntUrlParts.length-1];

    var filterIds = currntUrlIds.split("$_$");
    //console.log(atob(filterIds[3]));

    if(currentURL.indexOf("browse-cv")>1 || currentURL.indexOf("get-industry-cvs")>1 || currentURL.indexOf("get-sub-industry-cvs")>1){

        if(atob(filterIds[0]) != 0){
            $('.custCol2 .fs-label-wrap').attr('style', 'border-color: '+themeColor+' !important');
            $(".custCol2 .fs-label").attr('style', 'border-color: '+themeColor+'; color: '+themeColor+'; ');
            $(".custCol2 .fs-arrow ").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');
        }

        if(atob(filterIds[1]) != 0){
            $('.custCol3 .fs-label-wrap').attr('style', 'border-color: '+themeColor+' !important');
            $(".custCol3 .fs-label").attr('style', 'border-color: '+themeColor+'; color: '+themeColor+'; ');
            $(".custCol3 .fs-arrow ").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');
        }

        if(atob(filterIds[2]) != 0){
            $(".custCol4 .snapshotFilterSty").addClass("active");
            $(".custCol4 .fs-arrow ").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');
        }

        if(atob(filterIds[4]) != 0){
            $(".cvFilterHolder .custCol6 .inner .sortByHolder").css("width","160px");
            if(atob(filterIds[4]) == 'asc'){
                var spanvalue = "Ascending A - Z";
            }else if(atob(filterIds[4]) == 'desc'){
                var spanvalue = "Descending Z - A";
            }else if(atob(filterIds[4]) == 'lessRecent'){
                var spanvalue = "Less Recent";
            }else{
                var spanvalue = "Most Recent";
            }
            $("#sortByNameSpan").html(spanvalue);
            $(".custCol6 .snapshotFilterSty").addClass("active");
            $(".custCol6 .fs-arrow").attr('style', 'border-top: 5px solid '+themeColor+' !important; ');
        }

    }

});

$(document).on("click", function (e) {
    if($(".sonicLogoYesNoFilterHolder").hasClass("hide") === false){
        $(".sonicLogoYesNoFilterHolder").addClass("hide");
    }

    if($(".sortByContentHolder").hasClass("hide") === false){
        $(".sortByContentHolder").addClass("hide");
    }
});

function getCvDataByAtoZFilter(alphabet){

    addLoader("#custLoader");

    var currentURL = window.location.href;
    var currntUrlParts = currentURL.split("/");
    var currntUrlIds = currntUrlParts[currntUrlParts.length-1];
    var currntUrlIdsWithoutpage = currntUrlIds.split("?")[0];
    var parameterIds = currntUrlIdsWithoutpage.split("$_$"); // *** All filter parameters are being spletted******

    var atozFilterParametersArray = parameterIds[3].split('$'); // *** splitting [3] id which is AtoZ filter parameter ******


    //*********checking  how many alphabets have been selected******
    if(atozFilterParametersArray.length > 1){
         //*********checking  alphabet present in AtoZ filter parameter******
        if(atozFilterParametersArray.includes(btoa(alphabet))){

            const index = atozFilterParametersArray.indexOf(btoa(alphabet));
            if (index > -1) {
                atozFilterParametersArray.splice(index, 1);
            }
            setAtoZFilterVal = atozFilterParametersArray.join("$");
        }else{

            setAtoZFilterVal = parameterIds[3] + "$" + btoa(alphabet);
        }

    }else{
        //*********checking filter parameter AtoZ is not 0******
        if(atob(parameterIds[3]) != 0){
            //*********checking filter parameter AtoZ and choosing alpahabet should not be equal(=) ******
            if(atob(parameterIds[3]) != alphabet){
                setAtoZFilterVal = parameterIds[3] + "$" + btoa(alphabet);
            }else{
                var setAtoZFilterVal = btoa(0);
            }

        }else{
            var setAtoZFilterVal = btoa(alphabet);
        }

    }

    parameterIds[3] = setAtoZFilterVal;
    parameterIds[4] = btoa(0);

    var newAllParameterIds = parameterIds.join("$_$");

    var oldIdsReplaceUrl = currentURL.replace(currntUrlIds,'');

    window.location.href = oldIdsReplaceUrl + newAllParameterIds;
}

function getVideographData(videoGraphType){

    // console.log("videoGraphType== ",videoGraphType);

    if(videoGraphType == "mostPopuler"){

        if(Object.keys(mostPopulerVideosDataLabelSetData).length > 0){

            videosRadarChartGraphData(Object.keys(mostPopulerVideosDataLabelSetData)[0],0,"mostPopuler")

        }
    }else if(videoGraphType == "mood"){

        if(Object.keys(moodVideoGraphDataArrLabelSetData).length > 0){

            videosRadarChartGraphData(Object.keys(moodVideoGraphDataArrLabelSetData)[0],0,"mood")

        }
    }else{
        if(Object.keys(genreVideoGraphDataArrLabelSetData).length > 0){

            videosRadarChartGraphData(Object.keys(genreVideoGraphDataArrLabelSetData)[0],0,"genre")

        }
    }
}


$('.displayCVMostPopVideoMP').on('afterChange', function(event, slick, currentSlide, nextSlide){

    // console.log("graph == mostPopuler");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(mostPopulerVideosDataLabelSetData)[currentSlide]);
    // console.log("video  id == ",mostPopulerVideoIdArr[currentSlide]);
    if($(".cvVideoGraphRB").find(".overlay").length == 0)
    {
        $(".cvVideoGraphRB").append(getLoader());
        $(".cvVideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(mostPopulerVideosDataLabelSetData)[currentSlide],currentSlide,"mostPopuler");
        videosRadarChartGraphData(mostPopulerVideoIdArr[currentSlide],currentSlide,"mostPopuler");
        setTimeout(()=>{$(".cvVideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});

$('.displayCVMostPopVideoMood').on('afterChange', function(event, slick, currentSlide, nextSlide){
    // console.log("graph == mood");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(moodVideoGraphDataArrLabelSetData)[currentSlide]);
    // console.log("video  id == ",moodVideoIdArr[currentSlide]);
    if($(".cvVideoGraphRB").find(".overlay").length == 0)
    {
        $(".cvVideoGraphRB").append(getLoader());
        $(".cvVideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(moodVideoGraphDataArrLabelSetData)[currentSlide],currentSlide,"mood");
        videosRadarChartGraphData(moodVideoIdArr[currentSlide],currentSlide,"mood");
        setTimeout(()=>{$(".cvVideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});

$('.displayCVMostPopVideoGenre').on('afterChange', function(event, slick, currentSlide, nextSlide){

    // console.log("graph == genre");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(genreVideoGraphDataArrLabelSetData)[currentSlide]);
    // console.log("video  id == ",genreVideoIdArr[currentSlide]);
    if($(".cvVideoGraphRB").find(".overlay").length == 0)
    {
        $(".cvVideoGraphRB").append(getLoader());
        $(".cvVideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(genreVideoGraphDataArrLabelSetData)[currentSlide],currentSlide,"genre");
        videosRadarChartGraphData(genreVideoIdArr[currentSlide],currentSlide,"genre");
        setTimeout(()=>{$(".cvVideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});

var lpCompareCV1VideoAnalysedHolderHeight = $(".lpCompareCV1VideoAnalysedHolderHeight").height()+20;
var lpCompareCV2VideoAnalysedHolderHeight  = $(".lpCompareCV2VideoAnalysedHolderHeight").height()+20;
// console.log("lpCompareCV1VideoAnalysedHolder = ",lpCompareCV1VideoAnalysedHolder," lpCompareCV2VideoAnalysedHolder ==",lpCompareCV2VideoAnalysedHolder);
if(lpCompareCV1VideoAnalysedHolderHeight > lpCompareCV2VideoAnalysedHolderHeight)
{

    $(".lp_section_video_analysed_inner").css("height",lpCompareCV1VideoAnalysedHolderHeight);
}
else
{

    $(".lp_section_video_analysed_inner").css("height",lpCompareCV2VideoAnalysedHolderHeight);
}

/* if(window.location.href.indexOf('display-cv') > -1 || window.location.href.indexOf('shared-cv') > -1)
{

    setTimeout(()=>{
        var lpSectionVideoAnalysedInner = $(".lp_section_video_analysed_col").find(".lp_section_video_analysed_inner").height();
        var lpSection101112Inner = $(".lp_section_1012_col").find(".lp_section_101112_inner").height();

            if(lpSectionVideoAnalysedInner > lpSection101112Inner)
            {
                $(".lp_section_1012_col").find(".lp_section_101112_inner").css("height",lpSectionVideoAnalysedInner + 25 );
            }
            else
            {
                $(".lp_section_video_analysed_col").find(".lp_section_video_analysed_inner").css("height",lpSection101112Inner + 25);
            }


        },2000)

} */

/* if(window.location.href.indexOf('cv-compare') > -1)
{
    setTimeout(()=>{

        if(cv1VideoAnalysedTabDataString.split(",").length > 0){

            cvVideoAnalysedTab(`tab_${cv1VideoAnalysedTabDataString.split(",")[0]}`,'cv1');
        }
        if(cv2VideoAnalysedTabDataString.split(",").length > 0){

            cvVideoAnalysedTab(`tab_${cv2VideoAnalysedTabDataString.split(",")[0]}`,'cv2');
        }

        var lpCompareCV1VideoAnalysedHolderHeight = $(".lpCompareCV1VideoAnalysedHolderHeight").height()+20;
        var lpCompareCV2VideoAnalysedHolderHeight  = $(".lpCompareCV2VideoAnalysedHolderHeight").height()+20;
        // console.log("lpCompareCV1VideoAnalysedHolder = ",lpCompareCV1VideoAnalysedHolder," lpCompareCV2VideoAnalysedHolder ==",lpCompareCV2VideoAnalysedHolder);
        if(lpCompareCV1VideoAnalysedHolderHeight > lpCompareCV2VideoAnalysedHolderHeight)
        {

            $(".lpCompareCV2VideoAnalysedHolderHeight").css("height",lpCompareCV1VideoAnalysedHolderHeight);
        }
        else
        {

            $(".lpCompareCV1VideoAnalysedHolderHeight").css("height",lpCompareCV2VideoAnalysedHolderHeight);
        }

    },2000)

} */


$('.compareCV1MostPopVideo').on('afterChange', function(event, slick, currentSlide, nextSlide){

    // console.log("graph == mostPopuler");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(mostPopulerVideosDataLabelSetData)[currentSlide]);
    // console.log("video  id == ",mostPopulerVideoIdArr[currentSlide]);
    if($(".cv1VideoGraphRB").find(".overlay").length == 0)
    {
        $(".cv1VideoGraphRB").append(getLoader());
        $(".cv1VideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(mostPopulerVideosDataLabelSetData)[currentSlide],currentSlide,"mostPopuler");
        cv1VideosRadarChartGraphData(cv1MostPopulerVideoIdArr[currentSlide],currentSlide,"mostPopuler");
        setTimeout(()=>{$(".cv1VideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});

$('.compareCV1MostPopVideoMood').on('afterChange', function(event, slick, currentSlide, nextSlide){
    // console.log("graph == mood");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(moodVideoGraphDataArrLabelSetData)[currentSlide]);
    // console.log("video  id == ",moodVideoIdArr[currentSlide]);
    if($(".cv1VideoGraphRB").find(".overlay").length == 0)
    {
        $(".cv1VideoGraphRB").append(getLoader());
        $(".cv1VideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(moodVideoGraphDataArrLabelSetData)[currentSlide],currentSlide,"mood");
        cv1VideosRadarChartGraphData(cv1MoodVideoIdArr[currentSlide],currentSlide,"mood");
        setTimeout(()=>{$(".cv1VideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});

$('.compareCV1MostPopVideoGenre').on('afterChange', function(event, slick, currentSlide, nextSlide){

    // console.log("graph == genre");
    // console.log("currentSlide == ",currentSlide);
    // // console.log("video  id == ",Object.keys(genreVideoGraphDataArrLabelSetData)[currentSlide]);
    // console.log("video  id == ",genreVideoIdArr[currentSlide]);
    if($(".cv1VideoGraphRB").find(".overlay").length == 0)
    {
        $(".cv1VideoGraphRB").append(getLoader());
        $(".cv1VideoGraphRB").find(".loading-img").css("z-index","1030");
    }
    setTimeout(()=>{
        // videosRadarChartGraphData(Object.keys(genreVideoGraphDataArrLabelSetData)[currentSlide],currentSlide,"genre");
        cv1VideosRadarChartGraphData(cv1GenreVideoIdArr[currentSlide],currentSlide,"genre");
        setTimeout(()=>{$(".cv1VideoGraphRB").find(".overlay, .loading-img").remove();},200);
    },2000);
});


function linkWithTaxonomy(){
    if($('#c1name').hasClass('hide')){
        $('#c1name').removeClass('hide');
        $('#new_cv_name').addClass('hide');
    }
    else{
        $('#cv_name').addClass('hide');
        $('#temp_cv_name').removeClass('hide');
    }
}








